{"ast":null,"code":"import _Message2 from \"element-ui/lib/theme-chalk/message.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Message from \"element-ui/lib/message\";\nimport _Popconfirm2 from \"element-ui/lib/theme-chalk/popconfirm.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popconfirm from \"element-ui/lib/popconfirm\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nimport linkName from \"../../../../../linkName\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nVue.use(_Popconfirm);\nexport default {\n  components: {\n    PButton,\n    PPagination\n  },\n  mounted() {\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Draft\";\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter(row => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"branchName\", \"transactionType\", \"date\", \"time\"],\n      tableColumns: [{\n        prop: \"branchName\",\n        label: \"Branch\",\n        minWidth: 150\n      }, {\n        prop: \"transactionType\",\n        label: \"Transaction Type\",\n        minWidth: 200\n      }, {\n        prop: \"date\",\n        label: \"Creation Date\",\n        minWidth: 200\n      }, {\n        prop: \"time\",\n        label: \"Creation Time\",\n        minWidth: 200\n      }],\n      headerCellStyle: {\n        fontSize: \"10px\"\n      },\n      cellStyle: {\n        fontSize: \"12px\"\n      },\n      tableData: []\n    };\n  },\n  methods: {\n    fetchData() {\n      axiosClient.get(\"/fetchCompanyDraft\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\"),\n          promoEmail: sessionStorage.getItem(\"Email\"),\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    handleEdit(index, row) {\n      var tempStatus = \"\";\n      var tempTransactionID = this.convertToAlphanumeric(\"transactionID\");\n      var tempcompany = this.convertToAlphanumeric(\"company\");\n      const routeParams = {\n        path: \"/pull-out/requisition-form\",\n        query: {\n          [tempTransactionID]: row.plID,\n          [tempcompany]: this.convertToAlphanumeric(row.company)\n        }\n      };\n      this.$router.push(routeParams);\n    },\n    handleDelete(confirm, index, row) {\n      if (confirm) {\n        let indexToDelete = this.tableData.findIndex(tableRow => tableRow.plID === row.plID);\n        if (indexToDelete >= 0) {\n          this.tableData.splice(indexToDelete, 1);\n        }\n        axiosClient.post(\"/deleteDraft\", {\n          id: row.plID,\n          company: row.company\n        }).then(response => {}).catch(error => {\n          console.error(error);\n        });\n        _Message({\n          type: \"success\",\n          message: \"Your draft has been deleted.\"\n        });\n      }\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n        if (char >= \"0\" && char <= \"9\" || char >= \"a\" && char <= \"z\" || char >= \"A\" && char <= \"Z\") {\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          result += char;\n        }\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"names":["Vue","PButton","PPagination","axiosClient","linkName","use","_Table","_TableColumn","_Select","_Option","_Popconfirm","components","mounted","fetchData","window","resolveRouteChange","val","computed","pagedData","tableData","slice","from","to","queriedData","searchQuery","pagination","total","length","result","filter","row","isIncluded","key","propsToSearch","rowValue","toString","toLowerCase","includes","highBound","perPage","currentPage","data","company","perPageOptions","tableColumns","prop","label","minWidth","headerCellStyle","fontSize","cellStyle","methods","get","params","sessionStorage","getItem","promoEmail","userID","then","response","catch","error","console","handleEdit","index","tempStatus","tempTransactionID","convertToAlphanumeric","tempcompany","routeParams","path","query","plID","$router","push","handleDelete","confirm","indexToDelete","findIndex","tableRow","splice","post","id","_Message","type","message","input","i","char","charCode","charCodeAt","alphanumericChar"],"sources":["src/components/Dashboard/Views/PullOut/DraftPullOut/DraftPullOut.vue"],"sourcesContent":["<template>\n  <div class=\"card card-draft\">\n    <div class=\"card-body\">\n      <!-- <div class=\"card-header\">\n        <h4 class=\"title\">Pull-Out Draft</h4>\n      </div> -->\n      <div class=\"row mx-2 justify-content-between\">\n        <div class=\"col-4 pl-1 pr-0\">\n          <fg-input\n            class=\"input-md\"\n            placeholder=\"Search\"\n            v-model=\"searchQuery\"\n            addon-right-icon=\"nc-icon nc-zoom-split\"\n          >\n          </fg-input>\n        </div>\n        <div class=\"col-1 pl-0 pr-1\">\n          <el-select\n            class=\"select-default\"\n            v-model=\"pagination.perPage\"\n            placeholder=\"Per page\"\n          >\n            <el-option\n              class=\"select-default\"\n              v-for=\"item in pagination.perPageOptions\"\n              :key=\"item\"\n              :label=\"item\"\n              :value=\"item\"\n            >\n            </el-option>\n          </el-select>\n        </div>\n      </div>\n      <div class=\"row mx-2\">\n        <el-table\n          class=\"table-striped pad-tbl\"\n          :data=\"queriedData\"\n          border\n          :header-cell-style=\"headerCellStyle\"\n          :cell-style=\"cellStyle\"\n          style=\"width: 100%\"\n        >\n          <!-- Index Column -->\n          <el-table-column label=\"\" class=\"el-table-mod\" width=\"40\">\n            <template slot-scope=\"scope\">\n              <span>{{\n                (pagination.currentPage - 1) * pagination.perPage + scope.$index + 1\n              }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column\n            v-for=\"column in tableColumns\"\n            :key=\"column.label\"\n            :min-width=\"column.minWidth\"\n            :prop=\"column.prop\"\n            :label=\"column.label\"\n            header-align=\"center\"\n          >\n          </el-table-column>\n          <el-table-column\n            :min-width=\"120\"\n            class-name=\"td-actions\"\n            label=\"Actions\"\n            header-align=\"center\"\n          >\n            <template slot-scope=\"props\">\n              <p-button\n                type=\"success\"\n                size=\"sm\"\n                icon\n                @click=\"handleEdit(props.$index, props.row)\"\n              >\n                <i class=\"fa fa-edit\"></i>\n              </p-button>\n\n              <el-popconfirm\n                width=\"250\"\n                confirm-button-text=\"Confirm\"\n                cancel-button-text=\"Cancel\"\n                icon-color=\"#c45656\"\n                title=\"Are you sure you want to delete this draft?\"\n                @confirm=\"handleDelete(true, props.$index, props.row)\"\n                @cancel=\"handleDelete(false, props.$index, props.row)\"\n              >\n                <p-button slot=\"reference\" type=\"danger\" size=\"sm\" icon>\n                  <i class=\"fa fa-times\"></i>\n                </p-button>\n              </el-popconfirm>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div class=\"d-flex justify-content-end pagination-info\">\n        <p class=\"category p-margin\">\n          Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n        </p>\n      </div>\n      <div class=\"d-flex justify-content-center\">\n        <p-pagination\n          class=\"pull-center\"\n          v-model=\"pagination.currentPage\"\n          :per-page=\"pagination.perPage\"\n          :total=\"pagination.total\"\n        >\n        </p-pagination>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\n\nimport { Table, TableColumn, Select, Option, Popconfirm, Message } from \"element-ui\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nimport linkName from \"../../../../../linkName\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nVue.use(Popconfirm);\n\nexport default {\n  components: {\n    PButton,\n    PPagination,\n  },\n  mounted() {\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Draft\";\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"branchName\", \"transactionType\", \"date\", \"time\"],\n      tableColumns: [\n        {\n          prop: \"branchName\",\n          label: \"Branch\",\n          minWidth: 150,\n        },\n        {\n          prop: \"transactionType\",\n          label: \"Transaction Type\",\n          minWidth: 200,\n        },\n        {\n          prop: \"date\",\n          label: \"Creation Date\",\n          minWidth: 200,\n        },\n        {\n          prop: \"time\",\n          label: \"Creation Time\",\n          minWidth: 200,\n        },\n      ],\n      headerCellStyle: {\n        fontSize: \"10px\",\n      },\n      cellStyle: {\n        fontSize: \"12px\",\n      },\n      tableData: [],\n    };\n  },\n  methods: {\n    fetchData() {\n      axiosClient\n        .get(\"/fetchCompanyDraft\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            promoEmail: sessionStorage.getItem(\"Email\"),\n            userID: sessionStorage.getItem(\"UserID\"),\n          },\n        })\n        .then((response) => {\n          this.tableData = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleEdit(index, row) {\n      var tempStatus = \"\";\n      var tempTransactionID = this.convertToAlphanumeric(\"transactionID\");\n      var tempcompany = this.convertToAlphanumeric(\"company\");\n      const routeParams = {\n        path: \"/pull-out/requisition-form\",\n        query: {\n          [tempTransactionID]: row.plID,\n          [tempcompany]: this.convertToAlphanumeric(row.company),\n        },\n      };\n\n      this.$router.push(routeParams);\n      // location.href =\n      //   \"http://192.168.0.7:93/#/pull-out/requisition-form?\" +\n      //   tempTransactionID +\n      //   \"=\" +\n      //   row.plID +\n      //   \"&\" +\n      //   tempcompany +\n      //   \"=\" +\n      //   this.convertToAlphanumeric(row.company);\n    },\n    handleDelete(confirm, index, row) {\n      if (confirm) {\n        let indexToDelete = this.tableData.findIndex(\n          (tableRow) => tableRow.plID === row.plID\n        );\n        if (indexToDelete >= 0) {\n          this.tableData.splice(indexToDelete, 1);\n        }\n\n        axiosClient\n          .post(\"/deleteDraft\", {\n            id: row.plID,\n            company: row.company,\n          })\n          .then((response) => {})\n          .catch((error) => {\n            console.error(error);\n          });\n\n        Message({\n          type: \"success\",\n          message: \"Your draft has been deleted.\",\n        });\n      }\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n\n        // Check if the character is alphanumeric\n        if (\n          (char >= \"0\" && char <= \"9\") ||\n          (char >= \"a\" && char <= \"z\") ||\n          (char >= \"A\" && char <= \"Z\")\n        ) {\n          // Convert the character code to a base-36 alphanumeric representation\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          // Non-alphanumeric characters are left unchanged\n          result += char;\n        }\n      }\n\n      return result;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n\n.nav-center {\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n}\n.pad-tbl {\n  padding: 0px 0px;\n}\n.btn-margin {\n  margin: 0px 0px;\n}\n.p-margin {\n  margin-bottom: 0px;\n}\n.el-select-w {\n  width: 91%;\n  margin-right: 10px;\n}\n.first-btn {\n  padding-left: 4px;\n  padding-right: 12px;\n}\n.last-btn {\n  margin-left: 10px;\n}\n\n.card-draft {\n  margin-top: 100px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}