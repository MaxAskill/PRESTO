{"ast":null,"code":"import _toConsumableArray from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _Popconfirm2 from \"element-ui/lib/theme-chalk/popconfirm.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popconfirm from \"element-ui/lib/popconfirm\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport axiosClient from \"../../../../axios\";\nimport PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\nimport Vue from \"vue\";\nVue.use(_Popconfirm);\nexport default {\n  components: {\n    PromoRequestBranchApproveConfirmationModal: PromoRequestBranchApproveConfirmationModal\n  },\n  watch: {\n    promoRequest: {\n      handler: function handler() {\n        this.promoDetailsTransfer();\n      },\n      deep: true\n    },\n    checkedBranch: function checkedBranch() {\n      if (this.checkedBranch.length == 0) this.rejected = true;else this.rejected = false;\n    }\n  },\n  props: [\"promoData\", \"promoDetails\", \"promoRequest\"],\n  computed: {},\n  data: function data() {\n    return {\n      dateStart: [],\n      dateEnd: [],\n      checkedBranch: [],\n      rejectMode: false,\n      tempPromoRequest: [],\n      rejected: true\n    };\n  },\n  mounted: function mounted() {},\n  methods: {\n    approveRequest: function approveRequest(confirm) {\n      var _this = this;\n      console.log(\"TP APP:\", this.tempPromoRequest);\n      if (confirm) for (var key in this.tempPromoRequest) axiosClient.post(\"/updateUserBranchByRequest\", {\n        id: this.tempPromoRequest[key].id,\n        dateStart: this.dateStart[key],\n        dateEnd: this.dateEnd[key]\n      }).then(function (response) {\n        _this.$emit(\"fetchUsers\");\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    rejectBranch: function rejectBranch(reject) {\n      var _this2 = this;\n      axiosClient.post(\"/deleteUserBranch\", {\n        userID: this.promoData.id,\n        company: reject.company,\n        chainCode: reject.chainCode,\n        branchName: reject.branchName,\n        req: reject.request\n      }).then(function (response) {\n        _this2.$emit(\"fetchPromoRequest\", _this2.promoData.id);\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(\"Request count: \", this.promoRequest);\n      this.$emit(\"fetchUsers\");\n    },\n    promoDetailsTransfer: function promoDetailsTransfer() {\n      this.tempPromoRequest = _toConsumableArray(this.promoRequest);\n      for (var index = 0; index < this.tempPromoRequest.length; index++) {\n        this.dateStart[index] = this.tempPromoRequest[index].date_start;\n        this.dateEnd[index] = this.tempPromoRequest[index].date_end;\n      }\n      this.tempPromoRequest.forEach(function (temp) {});\n      console.log(\"Prom Req:::::::: \", this.promoRequest);\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","PromoRequestBranchApproveConfirmationModal","Vue","use","_Popconfirm","components","watch","promoRequest","handler","promoDetailsTransfer","deep","checkedBranch","length","rejected","props","computed","data","dateStart","dateEnd","rejectMode","tempPromoRequest","mounted","methods","approveRequest","confirm","_this","console","log","key","post","id","then","response","$emit","catch","error","rejectBranch","reject","_this2","userID","promoData","company","chainCode","branchName","req","request","_toConsumableArray","index","date_start","date_end","forEach","temp"],"sources":["src/components/Dashboard/Views/PullOut/PromoRequestBranchModal.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"promoRequestBranchModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"promoRequestBranchModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header py-3\">\n            <span style=\"font-size: 16px\"\n              >Promo Name:\n              <b style=\"font-size: 16px; text-transform: uppercase\">{{\n                promoData.name\n              }}</b></span\n            ><br />\n            <span\n              >Email: <b>{{ promoData.email }}</b></span\n            >\n          </div>\n          <div class=\"modal-body row pt-2 pb-3 px-4\">\n            <span class=\"text-center mb-2\" style=\"font-size: 13px\">\n              <b>{{ promoDetails.length }} Assigned Branch:</b>\n            </span>\n            <div style=\"overflow-x: auto; min-width: 350px\">\n              <table class=\"table table-borderless\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"labelRows\">Company</th>\n                    <th scope=\"col\" class=\"labelRows\">Chain Code</th>\n                    <th scope=\"col\" class=\"labelRows\">Branch Name</th>\n                    <th scope=\"col\" class=\"labelRows\">Start Date</th>\n                    <th scope=\"col\" class=\"labelRows\">Expiry Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"details in promoDetails\">\n                    <td class=\"cell text-nowrap py-1\">{{ details.company }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ details.chainCode }}</td>\n                    <td class=\"cell text-nowrap py-1\">\n                      <el-tooltip\n                        v-if=\"details.permanent\"\n                        effect=\"light\"\n                        content=\"Permanent Branch\"\n                        placement=\"top-start\"\n                      >\n                        <span class=\"p-icon\">P</span></el-tooltip\n                      >\n                      <el-tooltip\n                        v-else-if=\"!details.permanent\"\n                        effect=\"light\"\n                        content=\"Temporary Branch\"\n                        placement=\"top-start\"\n                      >\n                        <span class=\"t-icon\">T</span>\n                      </el-tooltip>\n                      &nbsp;{{ details.branchName }}\n                    </td>\n                    <td class=\"cell text-nowrap py-1\">{{ details.dateStart }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ details.dateEnd }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- <div class=\"d-flex\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"details in promoDetails\">\n              <span class=\"col-3\">{{ details.company }}</span>\n              <span class=\"col-3\">{{ details.chainCode }}</span>\n              <span class=\"col-6\">{{ details.branchName }}</span>\n            </div> -->\n            <div class=\"d-flex mt-2 text-center\">\n              <span class=\"col-12 mb-2\" style=\"font-size: 13px\"\n                ><b>Promo's Request to Update the Temporary Branch</b>\n              </span>\n            </div>\n            <div style=\"overflow-x: auto; min-width: 350px\">\n              <table class=\"table table-borderless\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"labelRows\">Company</th>\n                    <th scope=\"col\" class=\"labelRows\">Chain Code</th>\n                    <th scope=\"col\" class=\"labelRows\">Branch Name</th>\n                    <th scope=\"col\" class=\"labelRows text-center\">Request</th>\n                    <th scope=\"col\" class=\"labelRows\">Reject</th>\n                    <th scope=\"col\" class=\"labelRows\">Start Date</th>\n                    <th scope=\"col\" class=\"labelRows\">Expiry Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(request, key) in tempPromoRequest\">\n                    <td class=\"cell text-nowrap py-1\">{{ request.company }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ request.chainCode }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ request.branchName }}</td>\n                    <td class=\"cell text-nowrap py-1\">\n                      <el-tooltip\n                        v-if=\"request.request == 'remove'\"\n                        content=\"Request to remove this branch.\"\n                        placement=\"top\"\n                      >\n                        <el-tag class=\"m-0\" type=\"danger\">For Removal</el-tag>\n                      </el-tooltip>\n                      <el-tooltip\n                        v-else-if=\"request.request == 'additional'\"\n                        content=\"Request to add this branch.\"\n                        placement=\"top\"\n                      >\n                        <el-tag class=\"m-0\" color=\"white\" type=\"warning\"\n                          >New Branch</el-tag\n                        >\n                      </el-tooltip>\n                    </td>\n                    <td class=\"cell text-nowrap text-center py-1\">\n                      <el-popconfirm\n                        width=\"270\"\n                        confirm-button-text=\"Confirm\"\n                        cancel-button-text=\"Cancel\"\n                        icon-color=\"#c45656\"\n                        title=\"Are you sure you want to reject this request?\"\n                        @confirm=\"rejectBranch(request)\"\n                      >\n                        <button slot=\"reference\" class=\"btn btn-default py-1 px-2\">\n                          <i class=\"nc-icon nc-simple-remove\"></i>\n                        </button>\n                      </el-popconfirm>\n                    </td>\n                    <td class=\"cell text-nowrap py-1\">\n                      <fg-input class=\"text-center mb-0\" style=\"width: 150px\"\n                        ><el-date-picker\n                          v-model=\"dateStart[key]\"\n                          type=\"date\"\n                          placeholder=\"Select a Day\"\n                          :clearable=\"false\"\n                        >\n                        </el-date-picker\n                      ></fg-input>\n                    </td>\n                    <td class=\"cell text-nowrap py-1\">\n                      <fg-input class=\"text-center mb-0\" style=\"width: 150px\"\n                        ><el-date-picker\n                          v-model=\"dateEnd[key]\"\n                          type=\"date\"\n                          placeholder=\"Select a Day\"\n                          :clearable=\"false\"\n                        >\n                        </el-date-picker\n                      ></fg-input>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- <div class=\"d-flex mt-1\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"(request, key) in tempPromoRequest\">\n              <span class=\"col-3\">{{ request.company }}</span>\n              <span class=\"col-3\">{{ request.chainCode }}</span>\n              <span class=\"col-6\">{{ request.branchName }}</span>\n              <input\n                v-show=\"rejectMode\"\n                class=\"align-self-start\"\n                type=\"checkbox\"\n                v-model=\"checkedBranch\"\n                :value=\"key\"\n              />\n            </div> -->\n            <!-- <div class=\"mt-3\">\n              <fg-input label=\"Date End Promo\" class=\"col-12 text-center mb-0\"\n                ><el-date-picker\n                  v-model=\"dateEnd\"\n                  type=\"date\"\n                  placeholder=\"Select a Day\"\n                  :disabled=\"rejectMode\"\n                >\n                </el-date-picker\n              ></fg-input>\n            </div> -->\n          </div>\n          <div class=\"modal-footer d-flex justify-content-center\">\n            <button v-show=\"!rejectMode\" class=\"btn btn-default\" data-bs-dismiss=\"modal\">\n              Cancel\n            </button>\n            <!-- <button\n              v-show=\"rejectMode\"\n              class=\"btn btn-default\"\n              @click=\"(rejectMode = false), (checkedBranch = [])\"\n            >\n              Back\n            </button>\n            <button\n              v-show=\"!rejectMode\"\n              class=\"btn btn-danger\"\n              @click=\"rejectMode = true\"\n            >\n              Reject\n            </button>\n            <button\n              v-show=\"rejectMode\"\n              class=\"btn btn-danger\"\n              @click=\"rejectBranch\"\n              :disabled=\"rejected\"\n            >\n              Reject Selected Branch\n            </button> -->\n            <button\n              v-show=\"!rejectMode\"\n              class=\"btn btn-success\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#requestBranchApproveConfirmation\"\n              @click=\"approveRequest()\"\n            >\n              Approve this Request\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <PromoRequestBranchApproveConfirmationModal\n      :promoData=\"promoData\"\n      @confirm=\"approveRequest($event)\"\n    ></PromoRequestBranchApproveConfirmationModal>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\nimport PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\nimport { Popconfirm } from \"element-ui\";\nimport Vue from \"vue\";\n\nVue.use(Popconfirm);\n\nexport default {\n  components: {\n    PromoRequestBranchApproveConfirmationModal,\n  },\n  watch: {\n    // dateEnd: \"validateApprove\",\n    // dateStart: \"validateApprove\",\n    promoRequest: {\n      handler() {\n        this.promoDetailsTransfer();\n      },\n      deep: true,\n    },\n    checkedBranch: function () {\n      if (this.checkedBranch.length == 0) this.rejected = true;\n      else this.rejected = false;\n    },\n  },\n  props: [\"promoData\", \"promoDetails\", \"promoRequest\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      dateStart: [],\n      dateEnd: [],\n      // disableApprove: true,\n      checkedBranch: [],\n      rejectMode: false,\n      tempPromoRequest: [],\n      rejected: true,\n    };\n  },\n  mounted() {},\n  methods: {\n    approveRequest(confirm) {\n      console.log(\"TP APP:\", this.tempPromoRequest);\n      if (confirm)\n        for (let key in this.tempPromoRequest)\n          axiosClient\n            .post(\"/updateUserBranchByRequest\", {\n              id: this.tempPromoRequest[key].id,\n              // userID: this.promoData.id,\n              dateStart: this.dateStart[key],\n              dateEnd: this.dateEnd[key],\n            })\n            .then((response) => {\n              this.$emit(\"fetchUsers\");\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n    },\n    rejectBranch(reject) {\n      // let selectedBranchReject = this.checkedBranch.map((i) => this.tempPromoRequest[i]);\n      // this.tempPromoRequest = this.tempPromoRequest.filter(\n      //   (_, index) => !this.checkedBranch.includes(index)\n      // );\n      // selectedBranchReject.forEach((reject) => {\n      axiosClient\n        .post(\"/deleteUserBranch\", {\n          userID: this.promoData.id,\n          company: reject.company,\n          chainCode: reject.chainCode,\n          branchName: reject.branchName,\n          req: reject.request,\n        })\n        .then((response) => {\n          this.$emit(\"fetchPromoRequest\", this.promoData.id);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      console.log(\"Request count: \", this.promoRequest);\n      // });\n      // if (this.tempPromoRequest.length <= 0) {\n      //   window.location.reload();\n      // }\n      // this.rejectMode = false;\n      // this.rejected = true;\n      // this.checkedBranch = [];\n      this.$emit(\"fetchUsers\");\n    },\n    promoDetailsTransfer() {\n      this.tempPromoRequest = [...this.promoRequest];\n      for (let index = 0; index < this.tempPromoRequest.length; index++) {\n        this.dateStart[index] = this.tempPromoRequest[index].date_start;\n        this.dateEnd[index] = this.tempPromoRequest[index].date_end;\n      }\n      this.tempPromoRequest.forEach((temp) => {});\n      console.log(\"Prom Req:::::::: \", this.promoRequest);\n    },\n    // validateApprove() {\n    //   if (\n    //     this.dateEnd.length != this.tempPromoRequest.length &&\n    //     this.dateStart.length != this.tempPromoRequest.length\n    //   )\n    //     this.disableApprove = true;\n    //   else this.disableApprove = false;\n    // },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.tr_num {\n  font-size: 35px;\n  font-weight: 700;\n}\n.labelRows {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  // margin-bottom: 5px;\n}\n</style>\n"],"mappings":";;;;;;AA0OA,OAAAA,WAAA;AACA,OAAAC,0CAAA;AAEA,OAAAC,GAAA;AAEAA,GAAA,CAAAC,GAAA,CAAAC,WAAA;AAEA;EACAC,UAAA;IACAJ,0CAAA,EAAAA;EACA;EACAK,KAAA;IAGAC,YAAA;MACAC,OAAA,WAAAA,QAAA;QACA,KAAAC,oBAAA;MACA;MACAC,IAAA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,SAAAA,aAAA,CAAAC,MAAA,YAAAC,QAAA,aACA,KAAAA,QAAA;IACA;EACA;EACAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MAEAP,aAAA;MACAQ,UAAA;MACAC,gBAAA;MACAP,QAAA;IACA;EACA;EACAQ,OAAA,WAAAA,QAAA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAAC,OAAA;MAAA,IAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,iBAAAP,gBAAA;MACA,IAAAI,OAAA,EACA,SAAAI,GAAA,SAAAR,gBAAA,EACApB,WAAA,CACA6B,IAAA;QACAC,EAAA,OAAAV,gBAAA,CAAAQ,GAAA,EAAAE,EAAA;QAEAb,SAAA,OAAAA,SAAA,CAAAW,GAAA;QACAV,OAAA,OAAAA,OAAA,CAAAU,GAAA;MACA,GACAG,IAAA,WAAAC,QAAA;QACAP,KAAA,CAAAQ,KAAA;MACA,GACAC,KAAA,WAAAC,KAAA;QACAT,OAAA,CAAAS,KAAA,CAAAA,KAAA;MACA;IACA;IACAC,YAAA,WAAAA,aAAAC,MAAA;MAAA,IAAAC,MAAA;MAMAtC,WAAA,CACA6B,IAAA;QACAU,MAAA,OAAAC,SAAA,CAAAV,EAAA;QACAW,OAAA,EAAAJ,MAAA,CAAAI,OAAA;QACAC,SAAA,EAAAL,MAAA,CAAAK,SAAA;QACAC,UAAA,EAAAN,MAAA,CAAAM,UAAA;QACAC,GAAA,EAAAP,MAAA,CAAAQ;MACA,GACAd,IAAA,WAAAC,QAAA;QACAM,MAAA,CAAAL,KAAA,sBAAAK,MAAA,CAAAE,SAAA,CAAAV,EAAA;MACA,GACAI,KAAA,WAAAC,KAAA;QACAT,OAAA,CAAAS,KAAA,CAAAA,KAAA;MACA;MACAT,OAAA,CAAAC,GAAA,yBAAApB,YAAA;MAQA,KAAA0B,KAAA;IACA;IACAxB,oBAAA,WAAAA,qBAAA;MACA,KAAAW,gBAAA,GAAA0B,kBAAA,MAAAvC,YAAA;MACA,SAAAwC,KAAA,MAAAA,KAAA,QAAA3B,gBAAA,CAAAR,MAAA,EAAAmC,KAAA;QACA,KAAA9B,SAAA,CAAA8B,KAAA,SAAA3B,gBAAA,CAAA2B,KAAA,EAAAC,UAAA;QACA,KAAA9B,OAAA,CAAA6B,KAAA,SAAA3B,gBAAA,CAAA2B,KAAA,EAAAE,QAAA;MACA;MACA,KAAA7B,gBAAA,CAAA8B,OAAA,WAAAC,IAAA;MACAzB,OAAA,CAAAC,GAAA,2BAAApB,YAAA;IACA;EASA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}