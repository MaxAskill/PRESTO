{"ast":null,"code":"import _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Tooltip2 from \"element-ui/lib/theme-chalk/tooltip.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tooltip from \"element-ui/lib/tooltip\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport axiosClient from \"../../../../axios\";\nimport linkName from \"../../../../linkName\";\nimport PromoRequestBranchConfirmationModal from \"./PromoRequestBranchConfirmationModal.vue\";\nimport PromoViewPendingRequestModal from \"./PromoViewPendingRequest.vue\";\nimport PromoRequestBranchNotification from \"./PromoRequestBranchNotification.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    [_Option.name]: _Option,\n    [_Select.name]: _Select,\n    [_Table.name]: _Table,\n    [_TableColumn.name]: _TableColumn,\n    [_Tooltip.name]: _Tooltip,\n    [_Tag.name]: _Tag,\n    PromoRequestBranchConfirmationModal,\n    PromoViewPendingRequestModal,\n    PromoRequestBranchNotification\n  },\n  data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        date: \"\",\n        status: \"\",\n        withRequest: null,\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\"\n      },\n      userRequest: [],\n      userMultiple: [],\n      edit: {\n        Name: \"\",\n        Email: \"\",\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\"\n      },\n      dateCreated: \"\",\n      branchMultiple: [],\n      branchList: [],\n      companyList: [],\n      chainCodeList: [],\n      editMode: false,\n      disableUpdateProfile: true,\n      disableAddBranch: true,\n      editBranchMode: false,\n      editIndex: null,\n      isBranchChanged: true,\n      removeBranch: [],\n      additionalBranch: [],\n      tableColumns: [{\n        prop: \"company\",\n        label: \"Company\",\n        minWidth: 130\n      }, {\n        prop: \"chainCode\",\n        label: \"Chain Code\",\n        minWidth: 120\n      }, {\n        prop: \"branchName\",\n        label: \"Branch Name\",\n        minWidth: 220\n      }],\n      headerCellStyle: {\n        fontSize: \"10px\"\n      },\n      cellStyle: {\n        fontSize: \"12px !important\"\n      },\n      tableData: []\n    };\n  },\n  watch: {\n    edit: {\n      handler() {\n        this.validateAddBranch();\n      },\n      deep: true\n    },\n    branchMultiple: \"validateAddBranch\"\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"My Profile\";\n  },\n  methods: {\n    fetchChainCode() {\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.edit.Company\n        }\n      }).then(response => {\n        this.chainCodeList = response.data;\n      }).catch(error => {});\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.edit.ChainCode,\n          company: this.edit.Company\n        }\n      }).then(response => {\n        this.branchList = response.data;\n      }).catch(error => {});\n      this.isBranchName = false;\n    },\n    editProfile() {\n      this.edit.Name = this.user.name;\n      this.edit.Email = this.user.email;\n      this.userMultiple.forEach(userM => {\n        var company1 = userM.company.split(\"(\")[1];\n        var company = company1.split(\")\")[0];\n        this.branchMultiple.push({\n          id: userM.id,\n          company: company,\n          chainCode: userM.chainCode,\n          branch: userM.branchName,\n          permanent: userM.permanent\n        });\n      });\n      this.editMode = true;\n      this.chainCodeList = [];\n      this.branchList = [];\n      axiosClient.get(\"/fetchCompany\").then(response => {\n        this.companyList = response.data;\n      });\n    },\n    cancelProfile() {\n      this.editMode = false;\n      this.edit = {\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\"\n      };\n      this.branchMultiple = [];\n      console.log(\"Edit: \", this.edit);\n    },\n    addBranchInput() {\n      let temp = false;\n      for (let i = 0; i < this.branchMultiple.length; i++) {\n        if (this.editBranchMode) {\n          if (i == this.editIndex && this.edit.BranchName != this.branchMultiple[i].branch) {\n            this.branchMultiple[i].company = this.edit.Company;\n            this.branchMultiple[i].chainCode = this.edit.ChainCode;\n            this.branchMultiple[i].branch = this.edit.BranchName;\n            this.branchMultiple[i].permanent = false;\n            break;\n          }\n        } else {\n          if (this.edit.BranchName != this.branchMultiple[i].branch) temp = true;else {\n            temp = false;\n            break;\n          }\n        }\n      }\n      if (temp) this.branchMultiple.push({\n        company: this.edit.Company,\n        chainCode: this.edit.ChainCode,\n        branch: this.edit.BranchName\n      });\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n      this.chainCodeList = [];\n      this.branchList = [];\n      this.editBranchMode = false;\n      console.log(\"Add Branch\", this.branchMultiple);\n    },\n    removeBranchInput(index) {\n      this.branchMultiple.splice(index, 1);\n    },\n    editBranchInput(index) {\n      this.editBranchMode = true;\n      this.editIndex = index;\n      this.edit.Company = this.branchMultiple[index].company;\n      this.edit.ChainCode = this.branchMultiple[index].chainCode;\n      this.edit.BranchName = this.branchMultiple[index].branch;\n    },\n    cancelEditBranchInput() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n    },\n    fetchData() {\n      axiosClient.get(\"/usersProfile\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        this.user.name = response.data[0].name;\n        this.user.email = response.data[0].email;\n        this.user.date = response.data[0].date;\n        this.user.status = response.data[0].status;\n        this.user.withRequest = response.data[0].withRequest;\n        this.withRequest = response.data[0].withRequest;\n        if (response.data[0].position == \"User\") {\n          this.userMultiple = response.data;\n        }\n        this.tableData = [];\n        response.data.forEach(temp => {\n          if (!temp.permanent) this.tableData.push(temp);else {\n            this.user.company = temp.company;\n            this.user.chainCode = temp.chainCode;\n            this.user.branchName = temp.branchName;\n          }\n        });\n        console.log(\"PROMO: \", response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    fetchDataPromoRequest() {\n      axiosClient.get(\"/usersMaintenanceRequestBranch\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        console.log(\"Pull Out User Promo Request: \", response.data);\n        this.userRequest = response.data;\n        this.dateCreated = response.data[0].dateCreated;\n        console.log(\"User Reuest: \", this.dateCreated);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    updateProfileWithRequest(confirm) {\n      console.log(\" POST with remove branch \", this.removeBranch);\n      console.log(\" POST with add branch \", this.additionalBranch);\n      if (confirm) {\n        this.removeBranch.forEach(ctr => {\n          axiosClient.post(\"/postPromoUserBranch\", {\n            userID: sessionStorage.getItem(\"UserID\"),\n            company: ctr.company,\n            chainCode: ctr.chainCode,\n            branchName: ctr.branch,\n            req: \"remove\",\n            id: ctr.id\n          }).then(response => {\n            console.log(\"Success Remove Branch\", response.data);\n            this.cancelProfile();\n            this.fetchData();\n          }).catch(error => {\n            console.error(error);\n          });\n        });\n        this.additionalBranch.forEach(ctr => {\n          axiosClient.post(\"/postPromoUserBranch\", {\n            userID: sessionStorage.getItem(\"UserID\"),\n            company: ctr.company,\n            chainCode: ctr.chainCode,\n            branchName: ctr.branch,\n            req: \"additional\"\n          }).then(response => {\n            console.log(\"Success Additional Branch\", response.data);\n            this.cancelProfile();\n            this.fetchData();\n          }).catch(error => {\n            console.error(error);\n          });\n        });\n        const requestBranchNotificationModal = new bootstrap.Modal(\"#requestBranchNotification\");\n        requestBranchNotificationModal.show();\n      }\n    },\n    updateProfile() {\n      console.log(this.userMultiple, this.branchMultiple, this.isBranchChanged);\n      if (this.branchMultiple.length != this.userMultiple.length || this.isBranchChanged) {\n        let requestBranchModal = new bootstrap.Modal(\"#requestBranchConfirmation\");\n        requestBranchModal.show();\n        this.removeBranch = [];\n        this.userMultiple.forEach(temp => {\n          var removeB = true;\n          for (let i = 1; i < this.branchMultiple.length; i++) {\n            if (temp.branchName == this.branchMultiple[i].branch) {\n              removeB = false;\n              break;\n            }\n          }\n          if (!temp.permanent && removeB) {\n            this.removeBranch.push({\n              id: temp.id,\n              company: temp.company,\n              chainCode: temp.chainCode,\n              branch: temp.branchName\n            });\n          }\n        });\n        this.additionalBranch = [];\n        this.branchMultiple.forEach(req => {\n          var additionalB = true;\n          for (let i = 1; i < this.userMultiple.length; i++) {\n            if (req.branch == this.userMultiple[i].branchName) {\n              additionalB = false;\n              break;\n            }\n          }\n          if (!req.permanent && additionalB) {\n            req.request = \"additional\";\n            this.additionalBranch.push({\n              company: req.company,\n              chainCode: req.chainCode,\n              branch: req.branch\n            });\n          }\n        });\n      } else console.log(\"POST || update only name & email\");\n    },\n    validateAddBranch() {\n      if (this.edit.Company && this.edit.ChainCode && this.edit.BranchName) this.disableAddBranch = false;else this.disableAddBranch = true;\n      if (this.branchMultiple.length >= 3) if (!this.editBranchMode) this.disableAddBranch = true;\n      this.validateUpdateProfile();\n    },\n    validateUpdateProfile() {\n      if (this.userMultiple.length == this.branchMultiple.length) {\n        let temp = false;\n        for (let i = 0; i < this.userMultiple.length; i++) {\n          for (let j = 0; j < this.branchMultiple.length; j++) if (this.userMultiple[i].branchName == this.branchMultiple[j].branch) {\n            temp = true;\n            break;\n          } else temp = false;\n        }\n        if (temp) this.isBranchChanged = false;else this.isBranchChanged = true;\n      }\n      if (this.user.name === this.edit.Name && this.user.email === this.edit.Email && this.branchMultiple.length == this.userMultiple.length && !this.isBranchChanged) this.disableUpdateProfile = true;else this.disableUpdateProfile = false;\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","linkName","PromoRequestBranchConfirmationModal","PromoViewPendingRequestModal","PromoRequestBranchNotification","axios","components","_Option","name","_Select","_Table","_TableColumn","_Tooltip","_Tag","data","user","email","date","status","withRequest","company","chainCode","branchName","userRequest","userMultiple","edit","Name","Email","Company","ChainCode","BranchName","dateCreated","branchMultiple","branchList","companyList","chainCodeList","editMode","disableUpdateProfile","disableAddBranch","editBranchMode","editIndex","isBranchChanged","removeBranch","additionalBranch","tableColumns","prop","label","minWidth","headerCellStyle","fontSize","cellStyle","tableData","watch","handler","validateAddBranch","deep","mounted","tooltipTriggerList","document","querySelectorAll","tooltipList","map","tooltipTriggerEl","bootstrap","Tooltip","fetchData","window","resolveRouteChange","val","methods","fetchChainCode","get","params","then","response","catch","error","isChainCode","fetchChainName","isBranchName","editProfile","forEach","userM","company1","split","push","id","branch","permanent","cancelProfile","console","log","addBranchInput","temp","i","length","removeBranchInput","index","splice","editBranchInput","cancelEditBranchInput","userID","sessionStorage","getItem","position","fetchDataPromoRequest","updateProfileWithRequest","confirm","ctr","post","req","requestBranchNotificationModal","Modal","show","updateProfile","requestBranchModal","removeB","additionalB","request","validateUpdateProfile","j"],"sources":["src/components/Dashboard/Views/PullOut/PromoProfile.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <!-- <div class=\"col-lg-4 col-md-5\">\n       <user-card>\n\n      </user-card>\n      <members-card>\n\n      </members-card>\n    </div> -->\n      <!-- <div class=\"col-lg-8 col-md-7\"> -->\n      <div class=\"col-lg-9 col-md-10 mx-auto\">\n        <div class=\"card\">\n          <!-- <div class=\"card-header d-flex\">\n          <i\n            data-bs-toggle=\"tooltip\"\n            class=\"nc-icon nc-alert-circle-i font-weight-bold\"\n          ></i>\n          <h4 class=\"title\">My Profile</h4>\n        </div> -->\n          <div class=\"card-body\">\n            <form>\n              <div class=\"row\">\n                <div class=\"col-sm-5\">\n                  <fg-input\n                    label=\"Name\"\n                    v-show=\"!editMode\"\n                    type=\"text\"\n                    placeholder=\"Paper dashboard\"\n                    v-model.trim=\"user.name\"\n                    readonly\n                  >\n                  </fg-input>\n                  <fg-input\n                    v-show=\"editMode\"\n                    type=\"text\"\n                    label=\"Name\"\n                    placeholder=\"Paper dashboard\"\n                    v-model.trim=\"edit.Name\"\n                  >\n                  </fg-input>\n                </div>\n                <div class=\"col-sm-5\">\n                  <fg-input\n                    label=\"Email\"\n                    v-show=\"!editMode\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    v-model.trim=\"user.email\"\n                    readonly\n                  >\n                  </fg-input>\n                  <fg-input\n                    v-show=\"editMode\"\n                    type=\"text\"\n                    label=\"Email\"\n                    placeholder=\"Username\"\n                    v-model.trim=\"edit.Email\"\n                  >\n                  </fg-input>\n                </div>\n                <div class=\"col-sm-2\" v-show=\"!editMode\">\n                  <fg-input\n                    label=\"Date Registered\"\n                    type=\"text\"\n                    placeholder=\"Date Registered\"\n                    v-model=\"user.date\"\n                    readonly\n                  >\n                  </fg-input>\n                </div>\n              </div>\n              <!-- <div class=\"row labelRows\" v-show=\"!editMode\">\n                <span class=\"col-sm-3\">Company</span>\n                <span class=\"col-sm-3\">Chain Code</span>\n                <span class=\"col-sm-6\">Branch Name</span>\n              </div> -->\n              <div class=\"row\" v-show=\"!editMode\">\n                <div class=\"col-sm-3\">\n                  <fg-input\n                    label=\"Company\"\n                    type=\"text\"\n                    placeholder=\"Company\"\n                    v-model=\"user.company\"\n                    readonly\n                  >\n                  </fg-input>\n                </div>\n                <div class=\"col-sm-2\">\n                  <fg-input\n                    label=\"Chain Code\"\n                    type=\"text\"\n                    placeholder=\"Chain Code\"\n                    v-model=\"user.chainCode\"\n                    readonly\n                  >\n                  </fg-input>\n                </div>\n                <div class=\"col-sm-7\">\n                  <fg-input\n                    label=\"Branch Name\"\n                    type=\"text\"\n                    placeholder=\"Branch Name\"\n                    v-model=\"user.branchName\"\n                    readonly\n                  >\n                  </fg-input>\n                </div>\n              </div>\n\n              <div class=\"row mx-1\" v-show=\"!editMode\">\n                <el-table\n                  class=\"p-0\"\n                  :data=\"tableData\"\n                  border\n                  max-height=\"350\"\n                  :header-cell-style=\"headerCellStyle\"\n                  :cell-style=\"cellStyle\"\n                  style=\"width: 100%\"\n                >\n                  <!-- Index Column -->\n                  <el-table-column header-align=\"center\">\n                    <template slot=\"header\" slot-scope=\"scope\">\n                      Temporary Branch\n                    </template>\n                    <el-table-column label=\"\" class=\"el-table-mod\" width=\"40\">\n                      <template slot-scope=\"scope\">\n                        <span>{{ scope.$index + 1 }}</span>\n                      </template>\n                    </el-table-column>\n\n                    <el-table-column\n                      v-for=\"column in tableColumns\"\n                      :key=\"column.label\"\n                      :prop=\"column.prop\"\n                      :label=\"column.label\"\n                      :min-width=\"column.minWidth\"\n                      header-align=\"center\"\n                    >\n                    </el-table-column>\n                    <el-table-column\n                      label=\"Request Status\"\n                      min-width=\"130\"\n                      header-align=\"center\"\n                    >\n                      <template slot-scope=\"scope\">\n                        <el-tooltip\n                          v-if=\"scope.row.request == 'remove'\"\n                          content=\"Pending request to remove this branch.\"\n                          placement=\"top\"\n                        >\n                          <el-tag type=\"danger\">For Removal</el-tag>\n                        </el-tooltip>\n                        <el-tooltip\n                          v-else-if=\"scope.row.request == 'additional'\"\n                          content=\"Pending request to add this branch.\"\n                          placement=\"top\"\n                        >\n                          <el-tag color=\"white\" type=\"warning\">New Branch</el-tag>\n                        </el-tooltip>\n                        <el-tooltip\n                          v-else\n                          content=\"Your request to add this branch is Approved by the Agent.\"\n                          placement=\"top\"\n                        >\n                          <el-tag color=\"white\" type=\"success\">Approved</el-tag>\n                        </el-tooltip>\n                      </template>\n                    </el-table-column>\n                    <el-table-column\n                      prop=\"start_date\"\n                      label=\"Start Date\"\n                      min-width=\"130\"\n                      header-align=\"center\"\n                    ></el-table-column>\n                    <el-table-column\n                      prop=\"end_date\"\n                      label=\"End Date\"\n                      min-width=\"130\"\n                      header-align=\"center\"\n                    ></el-table-column>\n                  </el-table-column>\n                </el-table>\n              </div>\n\n              <div class=\"row\" v-show=\"editMode\">\n                <div class=\"col-md-6\">\n                  <fg-input label=\"Company\">\n                    <el-select\n                      class=\"select-default\"\n                      size=\"large\"\n                      placeholder=\"Select Company\"\n                      v-model=\"edit.Company\"\n                      @change=\"fetchChainCode()\"\n                    >\n                      <el-option\n                        v-for=\"company in companyList\"\n                        class=\"select-default\"\n                        :value=\"company.shortName\"\n                        :label=\"company.name + ' (' + company.shortName + ') '\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </fg-input>\n                </div>\n                <div class=\"col-md-6\">\n                  <fg-input label=\"Chain Code\">\n                    <el-select\n                      class=\"select-default\"\n                      size=\"large\"\n                      placeholder=\"Select Chain Code\"\n                      v-model=\"edit.ChainCode\"\n                      @change=\"fetchChainName()\"\n                    >\n                      <el-option\n                        v-for=\"chain in chainCodeList\"\n                        class=\"select-default\"\n                        :value=\"chain.chainCode\"\n                        :label=\"chain.chainCode\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </fg-input>\n                </div>\n              </div>\n\n              <div class=\"row\" v-show=\"editMode\">\n                <span class=\"headerBranch\">Branch Name</span>\n                <div class=\"col-sm-11 mb-10px\">\n                  <el-select\n                    class=\"select-default selectBranch\"\n                    size=\"large\"\n                    placeholder=\"Select Branch Name\"\n                    v-model=\"edit.BranchName\"\n                  >\n                    <el-option\n                      v-for=\"branch in branchList\"\n                      class=\"select-default\"\n                      :value=\"branch.branchName\"\n                      :label=\"branch.branchName\"\n                    >\n                    </el-option>\n                  </el-select>\n                </div>\n                <div class=\"col-sm-1 mb-10px selectBtnBranch\">\n                  <p-button\n                    type=\"success\"\n                    class=\"m-0\"\n                    @click=\"addBranchInput\"\n                    icon\n                    :disabled=\"disableAddBranch\"\n                  >\n                    <i class=\"nc-icon nc-check-2\"></i>\n                  </p-button>\n                </div>\n              </div>\n\n              <div\n                v-if=\"editMode\"\n                class=\"row\"\n                v-for=\"(brM, index) in branchMultiple\"\n                :key=\"index\"\n              >\n                <span class=\"headerBranch\" v-if=\"brM.permanent\">Permanent Branch</span>\n                <span class=\"headerBranch\" v-else-if=\"!brM.permanent && index == 1\"\n                  >Temporary Branch</span\n                >\n                <div class=\"col-sm-12\" v-if=\"brM.permanent\">\n                  <fg-input\n                    type=\"text\"\n                    placeholder=\"Select Branch Name\"\n                    v-model=\"brM.branch\"\n                    disabled\n                  >\n                  </fg-input>\n                </div>\n                <div class=\"col-sm-10\" v-else>\n                  <fg-input\n                    type=\"text\"\n                    placeholder=\"Select Branch Name\"\n                    v-model=\"brM.branch\"\n                    disabled\n                  >\n                  </fg-input>\n                </div>\n\n                <!-- <div v-if=\"index >= 1\" class=\"col-1 removeBtnBranch\">\n                <p-button\n                  type=\"danger\"\n                  class=\"m-0\"\n                  @click=\"removeBranchInput(index)\"\n                  icon\n                >\n                  <i class=\"nc-icon nc-simple-delete\"></i>\n                </p-button>\n              </div> -->\n                <div v-if=\"!brM.permanent\" class=\"col-sm-2 gap-2 inputBtnBranch\">\n                  <p-button\n                    v-if=\"index != editIndex\"\n                    type=\"warning\"\n                    class=\"m-0\"\n                    @click=\"editBranchInput(index)\"\n                    icon\n                    :disabled=\"editBranchMode\"\n                  >\n                    <!-- <i class=\"nc-icon nc-simple-add\"></i> -->\n                    <i class=\"nc-icon nc-ruler-pencil\"></i>\n                    <!-- <i class=\"fa fa-heart\"></i> -->\n                  </p-button>\n                  <p-button\n                    v-if=\"index == editIndex\"\n                    type=\"default\"\n                    class=\"m-0\"\n                    @click=\"cancelEditBranchInput\"\n                    icon\n                  >\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </p-button>\n                  <p-button\n                    v-if=\"index == 0\"\n                    type=\"danger\"\n                    class=\"m-0\"\n                    @click=\"removeBranchInput(index)\"\n                    icon\n                    :disabled=\"editBranchMode || branchMultiple.length == 1\"\n                  >\n                    <i class=\"nc-icon nc-simple-delete\"></i>\n                  </p-button>\n                  <p-button\n                    v-else\n                    type=\"danger\"\n                    class=\"m-0\"\n                    @click=\"removeBranchInput(index)\"\n                    icon\n                    :disabled=\"editBranchMode\"\n                  >\n                    <i class=\"nc-icon nc-simple-delete\"></i>\n                  </p-button>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-sm-12\" v-show=\"editMode\">\n                  <fg-input\n                    type=\"text\"\n                    label=\"Date Registered\"\n                    placeholder=\"Date Registered\"\n                    v-model=\"user.date\"\n                    readonly\n                  >\n                  </fg-input>\n                </div>\n                <!-- <div class=\"col-sm-6 form-floating\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputStatus\"\n                    placeholder=\"Status\"\n                    v-model=\"user.status\"\n                    readonly\n                  />\n                  <label for=\"floatingInputStatus\">Status</label>\n                </div> -->\n              </div>\n\n              <div class=\"clearfix\"></div>\n            </form>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"gap-2 d-flex justify-content-center\">\n              <button\n                v-show=\"!editMode\"\n                class=\"btn btn-info btn-fill btn-wd\"\n                @click.prevent=\"editProfile\"\n                :disabled=\"user.withRequest\"\n              >\n                Request to Update Temporary Branch\n              </button>\n              <!-- <button\n                v-show=\"!editMode\"\n                class=\"btn btn-success btn-fill btn-wd\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#promoViewPendingRequestModal\"\n                :disabled=\"!user.withRequest\"\n                @click=\"fetchDataPromoRequest\"\n              >\n                View Pending Request\n              </button> -->\n              <button\n                v-show=\"editMode\"\n                class=\"btn btn-danger btn-fill btn-wd\"\n                @click.prevent=\"cancelProfile\"\n              >\n                Cancel\n              </button>\n              <button\n                v-show=\"editMode\"\n                @click=\"updateProfile\"\n                class=\"btn btn-success btn-fill btn-wd\"\n                :disabled=\"disableUpdateProfile\"\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <PromoRequestBranchConfirmationModal\n      :remove=\"removeBranch\"\n      :additional=\"additionalBranch\"\n      @confirm=\"updateProfileWithRequest($event)\"\n    ></PromoRequestBranchConfirmationModal>\n    <PromoViewPendingRequestModal\n      :userData=\"userMultiple\"\n      :userRequest=\"userRequest\"\n      :dateRequested=\"dateCreated\"\n      @refetchUserData=\"fetchData\"\n    >\n    </PromoViewPendingRequestModal>\n    <PromoRequestBranchNotification></PromoRequestBranchNotification>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\nimport linkName from \"../../../../linkName\";\nimport { Select, Option, Table, TableColumn, Tooltip, Tag } from \"element-ui\";\nimport PromoRequestBranchConfirmationModal from \"./PromoRequestBranchConfirmationModal.vue\";\nimport PromoViewPendingRequestModal from \"./PromoViewPendingRequest.vue\";\nimport PromoRequestBranchNotification from \"./PromoRequestBranchNotification.vue\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    [Option.name]: Option,\n    [Select.name]: Select,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n    [Tooltip.name]: Tooltip,\n    [Tag.name]: Tag,\n    PromoRequestBranchConfirmationModal,\n    PromoViewPendingRequestModal,\n    PromoRequestBranchNotification,\n  },\n  data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        date: \"\",\n        status: \"\",\n        withRequest: null,\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n      },\n      userRequest: [],\n      userMultiple: [],\n      edit: {\n        Name: \"\",\n        Email: \"\",\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\",\n      },\n      dateCreated: \"\",\n      branchMultiple: [],\n      branchList: [],\n      companyList: [],\n      chainCodeList: [],\n      editMode: false,\n      disableUpdateProfile: true,\n      disableAddBranch: true,\n      editBranchMode: false,\n      editIndex: null,\n      isBranchChanged: true,\n      removeBranch: [],\n      additionalBranch: [],\n\n      tableColumns: [\n        {\n          prop: \"company\",\n          label: \"Company\",\n          minWidth: 130,\n        },\n        {\n          prop: \"chainCode\",\n          label: \"Chain Code\",\n          minWidth: 120,\n        },\n        {\n          prop: \"branchName\",\n          label: \"Branch Name\",\n          minWidth: 220,\n        },\n        // {\n        //   prop: \"request\",\n        //   label: \"Request Status\",\n        //   minWidth: 130,\n        // },\n        // {\n        //   prop: \"start_date\",\n        //   label: \"Start Date\",\n        //   minWidth: 150,\n        // },\n        // {\n        //   prop: \"end_date\",\n        //   label: \"End Date\",\n        //   minWidth: 120,\n        // },\n      ],\n      headerCellStyle: {\n        fontSize: \"10px\",\n      },\n      cellStyle: {\n        fontSize: \"12px !important\",\n      },\n      tableData: [],\n    };\n  },\n  watch: {\n    edit: {\n      handler() {\n        this.validateAddBranch();\n        // this.validateUpdateProfile();\n      },\n      deep: true,\n    },\n    branchMultiple: \"validateAddBranch\",\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\n    );\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"My Profile\";\n  },\n  methods: {\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.edit.Company,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      // this.notifyVue(\"bottom\", \"right\");\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.edit.ChainCode,\n            company: this.edit.Company,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Name Response:\", response.data);\n          this.branchList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      this.isBranchName = false;\n    },\n    editProfile() {\n      // alert(\"Your data: \" + JSON.stringify(this.user));\n      this.edit.Name = this.user.name;\n      this.edit.Email = this.user.email;\n      this.userMultiple.forEach((userM) => {\n        var company1 = userM.company.split(\"(\")[1];\n        var company = company1.split(\")\")[0];\n        this.branchMultiple.push({\n          id: userM.id,\n          company: company,\n          chainCode: userM.chainCode,\n          branch: userM.branchName,\n          permanent: userM.permanent,\n        });\n      });\n\n      this.editMode = true;\n      this.chainCodeList = [];\n      this.branchList = [];\n\n      axiosClient.get(\"/fetchCompany\").then((response) => {\n        this.companyList = response.data;\n      });\n    },\n    cancelProfile() {\n      this.editMode = false;\n      this.edit = {\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\",\n      };\n      this.branchMultiple = [];\n      console.log(\"Edit: \", this.edit);\n    },\n    addBranchInput() {\n      let temp = false;\n      for (let i = 0; i < this.branchMultiple.length; i++) {\n        if (this.editBranchMode) {\n          if (\n            i == this.editIndex &&\n            this.edit.BranchName != this.branchMultiple[i].branch\n          ) {\n            this.branchMultiple[i].company = this.edit.Company;\n            this.branchMultiple[i].chainCode = this.edit.ChainCode;\n            this.branchMultiple[i].branch = this.edit.BranchName;\n            this.branchMultiple[i].permanent = false;\n            break;\n          }\n        } else {\n          if (this.edit.BranchName != this.branchMultiple[i].branch) temp = true;\n          else {\n            temp = false;\n            break;\n          }\n        }\n      }\n      if (temp)\n        this.branchMultiple.push({\n          company: this.edit.Company,\n          chainCode: this.edit.ChainCode,\n          branch: this.edit.BranchName,\n        });\n      // this.branchMultiple.forEach((item) => {\n      //   if (this.editBranchMode && this.edit.BranchName != item.branch) {\n      //     item.company = this.edit.Company;\n      //     item.chainCode = this.edit.ChainCode;\n      //     item.branch = this.edit.BranchName;\n      //   } else if (item.branch != this.edit.BranchName)\n      //     this.branchMultiple.push({\n      //       company: this.edit.Company,\n      //       chainCode: this.edit.ChainCode,\n      //       branch: this.edit.BranchName,\n      //     });\n      // });\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n      this.chainCodeList = [];\n      this.branchList = [];\n      this.editBranchMode = false;\n\n      console.log(\"Add Branch\", this.branchMultiple);\n    },\n    removeBranchInput(index) {\n      this.branchMultiple.splice(index, 1);\n    },\n    editBranchInput(index) {\n      this.editBranchMode = true;\n      this.editIndex = index;\n      this.edit.Company = this.branchMultiple[index].company;\n      this.edit.ChainCode = this.branchMultiple[index].chainCode;\n      this.edit.BranchName = this.branchMultiple[index].branch;\n    },\n    cancelEditBranchInput() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n    },\n    fetchData() {\n      axiosClient\n        .get(\"/usersProfile\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\"),\n          },\n        })\n        .then((response) => {\n          this.user.name = response.data[0].name;\n          this.user.email = response.data[0].email;\n          this.user.date = response.data[0].date;\n          this.user.status = response.data[0].status;\n          this.user.withRequest = response.data[0].withRequest;\n          this.withRequest = response.data[0].withRequest;\n          if (response.data[0].position == \"User\") {\n            this.userMultiple = response.data;\n          }\n          this.tableData = [];\n          response.data.forEach((temp) => {\n            if (!temp.permanent) this.tableData.push(temp);\n            else {\n              this.user.company = temp.company;\n              this.user.chainCode = temp.chainCode;\n              this.user.branchName = temp.branchName;\n            }\n          });\n          console.log(\"PROMO: \", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchDataPromoRequest() {\n      axiosClient\n        .get(\"/usersMaintenanceRequestBranch\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\"),\n          },\n        })\n        .then((response) => {\n          console.log(\"Pull Out User Promo Request: \", response.data);\n          this.userRequest = response.data;\n          this.dateCreated = response.data[0].dateCreated;\n          console.log(\"User Reuest: \", this.dateCreated);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    updateProfileWithRequest(confirm) {\n      console.log(\" POST with remove branch \", this.removeBranch);\n      console.log(\" POST with add branch \", this.additionalBranch);\n      if (confirm) {\n        // this.branchMultiple.forEach((ctr) => {\n        this.removeBranch.forEach((ctr) => {\n          axiosClient\n            .post(\"/postPromoUserBranch\", {\n              userID: sessionStorage.getItem(\"UserID\"),\n              company: ctr.company,\n              chainCode: ctr.chainCode,\n              branchName: ctr.branch,\n              req: \"remove\",\n              id: ctr.id,\n            })\n            .then((response) => {\n              console.log(\"Success Remove Branch\", response.data);\n              this.cancelProfile();\n              this.fetchData();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        });\n        this.additionalBranch.forEach((ctr) => {\n          axiosClient\n            .post(\"/postPromoUserBranch\", {\n              userID: sessionStorage.getItem(\"UserID\"),\n              company: ctr.company,\n              chainCode: ctr.chainCode,\n              branchName: ctr.branch,\n              req: \"additional\",\n            })\n            .then((response) => {\n              console.log(\"Success Additional Branch\", response.data);\n              this.cancelProfile();\n              this.fetchData();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        });\n        const requestBranchNotificationModal = new bootstrap.Modal(\n          \"#requestBranchNotification\"\n        );\n        requestBranchNotificationModal.show();\n      }\n      //this.branchMultiple\n    },\n    updateProfile() {\n      console.log(this.userMultiple, this.branchMultiple, this.isBranchChanged);\n      if (\n        this.branchMultiple.length != this.userMultiple.length ||\n        this.isBranchChanged\n      ) {\n        let requestBranchModal = new bootstrap.Modal(\"#requestBranchConfirmation\");\n        requestBranchModal.show();\n\n        this.removeBranch = [];\n        this.userMultiple.forEach((temp) => {\n          var removeB = true;\n          for (let i = 1; i < this.branchMultiple.length; i++) {\n            if (temp.branchName == this.branchMultiple[i].branch) {\n              removeB = false;\n              break;\n            }\n          }\n          if (!temp.permanent && removeB) {\n            this.removeBranch.push({\n              id: temp.id,\n              company: temp.company,\n              chainCode: temp.chainCode,\n              branch: temp.branchName,\n            });\n          }\n        });\n\n        this.additionalBranch = [];\n        this.branchMultiple.forEach((req) => {\n          var additionalB = true;\n          for (let i = 1; i < this.userMultiple.length; i++) {\n            if (req.branch == this.userMultiple[i].branchName) {\n              additionalB = false;\n              break;\n            }\n          }\n          if (!req.permanent && additionalB) {\n            req.request = \"additional\";\n            this.additionalBranch.push({\n              company: req.company,\n              chainCode: req.chainCode,\n              branch: req.branch,\n            });\n          }\n        });\n      } else console.log(\"POST || update only name & email\");\n    },\n    validateAddBranch() {\n      if (this.edit.Company && this.edit.ChainCode && this.edit.BranchName)\n        this.disableAddBranch = false;\n      else this.disableAddBranch = true;\n\n      if (this.branchMultiple.length >= 3)\n        if (!this.editBranchMode) this.disableAddBranch = true;\n\n      this.validateUpdateProfile();\n    },\n    validateUpdateProfile() {\n      if (this.userMultiple.length == this.branchMultiple.length) {\n        let temp = false;\n        for (let i = 0; i < this.userMultiple.length; i++) {\n          for (let j = 0; j < this.branchMultiple.length; j++)\n            if (this.userMultiple[i].branchName == this.branchMultiple[j].branch) {\n              temp = true;\n              break;\n            } else temp = false;\n        }\n        if (temp) this.isBranchChanged = false;\n        else this.isBranchChanged = true;\n      }\n      if (\n        this.user.name === this.edit.Name &&\n        this.user.email === this.edit.Email &&\n        this.branchMultiple.length == this.userMultiple.length &&\n        !this.isBranchChanged\n      )\n        this.disableUpdateProfile = true;\n      else this.disableUpdateProfile = false;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.headerBranch {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  margin-bottom: 5px;\n}\n.mb-10px {\n  margin-bottom: 10px;\n}\n.selectBranch {\n  width: 100%;\n}\n.selectBtnBranch {\n  display: flex;\n  justify-content: end;\n  padding-left: 12px;\n  padding-right: 12px;\n}\n.inputBtnBranch {\n  display: flex;\n  justify-content: end;\n  padding-left: 0px;\n  padding-right: 12px;\n}\n.pl-24px {\n  padding-left: 12px;\n  padding-right: 24px;\n}\n.form-control-plaintext {\n  margin: 4px;\n  border: solid;\n  border-width: 1px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}