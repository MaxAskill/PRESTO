{"ast":null,"code":"import axiosClient from \"../../../../axios\";\nexport default {\n  components: {},\n  watch: {},\n  props: [\"promoData\"],\n  computed: {},\n  data: function data() {\n    return {\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: []\n    };\n  },\n  mounted: function mounted() {},\n  methods: {\n    fetchCompany: function fetchCompany() {\n      var _this = this;\n      if (\"User\" != sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchCompany\").then(function (response) {\n        _this.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else axiosClient.get(\"/fetchCompanyByUser\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\") this.showCategoryBrand = true;else this.showCategoryBrand = false;\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this2 = this;\n      if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") this.isNBFI = true;else this.isNBFI = false;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainByUser\", {\n        params: {\n          company: this.newTransaction.company,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this2.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        _this2.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isChainCode = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this3 = this;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainNameByUser\", {\n        params: {\n          chainCode: this.newTransaction.chainCode,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this3.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else {\n        axiosClient.get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n            company: this.newTransaction.company\n          }\n        }).then(function (response) {\n          _this3.branchNameList = response.data;\n        }).catch(function (error) {\n          console.error(error);\n        });\n        this.isBranchName = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","components","watch","props","computed","data","companyList","chainCodeList","branchNameList","mounted","methods","fetchCompany","_this","sessionStorage","getItem","get","then","response","catch","error","console","params","userID","company","showCategoryBrand","fetchChainCode","_this2","newTransaction","isNBFI","isChainCode","fetchChainName","_this3","chainCode","isBranchName"],"sources":["src/components/Dashboard/Views/PullOut/PromoAssignBranchByAgentModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"promoAssignBranchByAgentModal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"promoAssignBranchByAgentModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h6 class=\"modal-title\">\n            Assigning of Temporary Branch for promo: <b>{{ promoData.name }}</b>\n          </h6>\n        </div>\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Company\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Company\"\n                  v-model=\"newTransaction.company\"\n                >\n                  <el-option\n                    v-for=\"option in companyList\"\n                    class=\"select-default\"\n                    :value=\"option.shortName\"\n                    :label=\"option.name + ' (' + option.shortName + ') '\"\n                    :key=\"option.id\"\n                  >\n                  </el-option>\n                </el-select>\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Chain Code\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Chain Code\"\n                  v-model=\"newTransaction.chainCode\"\n                  :disabled=\"isChainCode\"\n                >\n                  <el-option\n                    v-for=\"option in chainCodeList\"\n                    class=\"select-default\"\n                    :value=\"option.chainCode\"\n                    :label=\"option.chainCode\"\n                    :key=\"option.chainCode\"\n                  >\n                  </el-option>\n                </el-select>\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Branch Name\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Branch Name\"\n                  v-model=\"newTransaction.branchName\"\n                >\n                  <el-option\n                    v-for=\"option in branchNameList\"\n                    class=\"select-default\"\n                    :value=\"option.branchName\"\n                    :label=\"option.branchName\"\n                    :key=\"option.branchName\"\n                  >\n                  </el-option>\n                </el-select>\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6 row\">\n              <div class=\"col-sm-6\">\n                <h4 class=\"label-size\">Start Date</h4>\n                <div class=\"form-group\">\n                  <el-date-picker\n                    v-model=\"datePicker\"\n                    type=\"date\"\n                    placeholder=\"Pick a date\"\n                  >\n                  </el-date-picker>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <h4 class=\"label-size\">End Date</h4>\n                <div class=\"form-group\">\n                  <el-date-picker\n                    v-model=\"datePicker\"\n                    type=\"date\"\n                    placeholder=\"Pick a date\"\n                  >\n                  </el-date-picker>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer d-flex justify-content-center\">\n          <button class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"deactivate()\">\n            Proceed\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\n\nexport default {\n  components: {},\n  watch: {},\n  props: [\"promoData\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n    };\n  },\n  mounted() {},\n  methods: {\n    fetchCompany() {\n      if (\"User\" != sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchCompany\")\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else\n        axiosClient\n          .get(\"/fetchCompanyByUser\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\")\n        this.showCategoryBrand = true;\n      else this.showCategoryBrand = false;\n\n      // if (sessionStorage.getItem(\"Position\") == \"Admin\") this.showUploadImage = true;\n    },\n    fetchChainCode() {\n      if (\n        this.newTransaction.company == \"NBFI\" ||\n        this.newTransaction.company == \"CMC\" ||\n        this.newTransaction.company == \"ASC\"\n      )\n        this.isNBFI = true;\n      else this.isNBFI = false;\n\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainByUser\", {\n            params: {\n              company: this.newTransaction.company,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n      else\n        axiosClient\n          .get(\"/fetchChain\", {\n            params: {\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainNameByUser\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else {\n        axiosClient\n          .get(\"/fetchChainName\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        this.isBranchName = false;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.tr_num {\n  font-size: 35px;\n  font-weight: 700;\n}\n</style>\n"],"mappings":"AAkHA,OAAAA,WAAA;AAEA;EACAC,UAAA;EACAC,KAAA;EACAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;MACAC,aAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;EACAC,OAAA;IACAC,YAAA,WAAAA,aAAA;MAAA,IAAAC,KAAA;MACA,cAAAC,cAAA,CAAAC,OAAA,cACAd,WAAA,CACAe,GAAA,kBACAC,IAAA,WAAAC,QAAA;QACAL,KAAA,CAAAN,WAAA,GAAAW,QAAA,CAAAZ,IAAA;MACA,GACAa,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,QAEAnB,WAAA,CACAe,GAAA;QACAM,MAAA;UACAC,MAAA,EAAAT,cAAA,CAAAC,OAAA;QACA;MACA,GACAE,IAAA,WAAAC,QAAA;QACAL,KAAA,CAAAN,WAAA,GAAAW,QAAA,CAAAZ,IAAA;MACA,GACAa,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;MACA,IAAAI,OAAA,GAAAV,cAAA,CAAAC,OAAA;MACA,IAAAS,OAAA,cAAAA,OAAA,aAAAA,OAAA,WACA,KAAAC,iBAAA,aACA,KAAAA,iBAAA;IAGA;IACAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,IACA,KAAAC,cAAA,CAAAJ,OAAA,cACA,KAAAI,cAAA,CAAAJ,OAAA,aACA,KAAAI,cAAA,CAAAJ,OAAA,WAEA,KAAAK,MAAA,aACA,KAAAA,MAAA;MAEA,cAAAf,cAAA,CAAAC,OAAA,cACAd,WAAA,CACAe,GAAA;QACAM,MAAA;UACAE,OAAA,OAAAI,cAAA,CAAAJ,OAAA;UACAD,MAAA,EAAAT,cAAA,CAAAC,OAAA;QACA;MACA,GACAE,IAAA,WAAAC,QAAA;QAEAS,MAAA,CAAAnB,aAAA,GAAAU,QAAA,CAAAZ,IAAA;MACA,GACAa,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,QAGAnB,WAAA,CACAe,GAAA;QACAM,MAAA;UACAE,OAAA,OAAAI,cAAA,CAAAJ;QACA;MACA,GACAP,IAAA,WAAAC,QAAA;QAEAS,MAAA,CAAAnB,aAAA,GAAAU,QAAA,CAAAZ,IAAA;MACA,GACAa,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;MAGA,KAAAU,WAAA;IACA;IACAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,cAAAlB,cAAA,CAAAC,OAAA,cACAd,WAAA,CACAe,GAAA;QACAM,MAAA;UACAW,SAAA,OAAAL,cAAA,CAAAK,SAAA;UACAV,MAAA,EAAAT,cAAA,CAAAC,OAAA;QACA;MACA,GACAE,IAAA,WAAAC,QAAA;QAEAc,MAAA,CAAAvB,cAAA,GAAAS,QAAA,CAAAZ,IAAA;MACA,GACAa,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,QACA;QACAnB,WAAA,CACAe,GAAA;UACAM,MAAA;YACAW,SAAA,OAAAL,cAAA,CAAAK,SAAA;YACAT,OAAA,OAAAI,cAAA,CAAAJ;UACA;QACA,GACAP,IAAA,WAAAC,QAAA;UAEAc,MAAA,CAAAvB,cAAA,GAAAS,QAAA,CAAAZ,IAAA;QACA,GACAa,KAAA,WAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA;QAEA,KAAAc,YAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}