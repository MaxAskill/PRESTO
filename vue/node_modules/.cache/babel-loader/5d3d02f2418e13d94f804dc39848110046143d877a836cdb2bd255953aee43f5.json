{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _components),\n  data: function data() {\n    return {\n      transferredData: \"\",\n      isDisabled: [false, true, true, true, false, true],\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      hoveredRow: null,\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"Concess Pull-Out Item Disposal\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"Concess Pull-Out - Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"Concess Pull-Out - Warehouse\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false\n    };\n  },\n  mounted: function mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    updateData: function updateData(updatedData) {\n      console.log(\"das\", updatedData);\n    },\n    openModal: function openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxLabel) {\n      console.log(\"New DATAs\", code, boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== code || item.boxLabel !== boxLabel;\n      });\n    },\n    fetchItems: function fetchItems() {\n      var _this = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      }\n    },\n    compareItemCode: function compareItemCode() {\n      var _this2 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        console.log(\"Success Item No:\", response.data);\n        console.log(\"Success Item Description\", response.data[0].ItemDescription);\n        _this2.newItemDescription = response.data[0].ItemDescription;\n        _this2.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this2.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          console.log(\"Success\", response.data);\n          _this2.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (error) {\n        _this2.missItemCode = 0;\n        !_this2.newItemInput ? true : _this2.isRightCode = true;\n        console.log(\"Not Equal\");\n        console.error(error);\n      });\n    },\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this3 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this3.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this4 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this4.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.notifyVue(\"bottom\", \"right\");\n      this.isDisabled[1] = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this5 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this5.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isDisabled[2] = false;\n    },\n    addItem: function addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem: function saveItem(label, boxID) {\n      var _this6 = this;\n      this.isNewItem = !this.newItemInput ? true : false;\n      console.log(\"item\", this.newItemInput);\n      console.log(\"condition\", this.isNewItem);\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n      var str = label.toLowerCase();\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this6.newTransaction.items.length; i++) {\n            if (_this6.newTransaction.items[i].code == response.data[x].ItemNo && _this6.newTransaction.items[i].boxLabel.toLowerCase() == str) {\n              _this6.newTransaction.items[i].quantity = parseInt(_this6.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n              categorybrand: _this6.newBrand,\n              quantity: 1,\n              boxLabel: label,\n              boxNumber: boxID\n            };\n            _this6.newTransaction.items.push(tempItem);\n          }\n          _this6.isRightCode = false;\n          _this6.isItem = false;\n          _this6.isAddItem = true;\n          _this6.newItemInput = \"\";\n          _this6.showItemInput = \"\";\n          _this6.notifyVue(\"bottom\", \"right\");\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(\"Items: \", this.newTransaction.items);\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        tempItem = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1\n        };\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      console.log(\"Console:\", this.newTransaction.boxLabels);\n      this.isDisabled[0] = true;\n      this.isDisabled[1] = true;\n      this.isDisabled[2] = true;\n      this.isDisabled[3] = true;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    submit: function submit() {\n      var _this7 = this;\n      this.isValid.company = !this.newTransaction.company ? true : false;\n      this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n      this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n      this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n      this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n      this.isValid.item = !this.newTransaction.items.length ? true : false;\n      console.log(\"Company: \", this.isValid.company);\n      console.log(\"company\", this.newTransaction.company);\n      axiosClient.post(\"/savePullOutBranchRequest\", {\n        chainCode: this.newTransaction.chainCode,\n        companyType: this.newTransaction.company,\n        branchName: this.newTransaction.branchName,\n        transactionType: this.newTransaction.transactionType,\n        email: sessionStorage.getItem(\"Email\")\n      }).then(function (response) {\n        console.log(\"Success Branch Save: \", response.data);\n        for (var x = 0; x < _this7.newTransaction.items.length; x++) {\n          axiosClient.post(\"/savePullOutItemRequest\", {\n            plID: response.data.id,\n            companyType: _this7.newTransaction.company,\n            brand: _this7.newTransaction.items[x].categorybrand,\n            boxNumber: _this7.newTransaction.items[x].boxNumber,\n            boxLabel: _this7.newTransaction.items[x].boxLabel,\n            itemCode: _this7.newTransaction.items[x].code,\n            quantity: _this7.newTransaction.items[x].quantity,\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            console.log(\"Success Items Save: \", response.data);\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxLabel) {\n      console.log(\"Item Code Edit:\", code, \" Quantity:\", quantity, \" Box Label\", boxLabel);\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxLabel === boxLabel;\n      });\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Label\", uniqueItems[0].boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxLabel !== uniqueItems[0].boxLabel;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","EditBoxLabelModal","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","transferredData","isDisabled","itemCodeList","isBoxLabel","isItem","isAddItem","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","hoveredRow","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","mounted","fetchCompany","methods","updateData","updatedData","console","log","openModal","closeModal","showButton","itemId","hideButton","removeItem","code","filter","fetchItems","_this","length","get","params","ItemNo","then","response","catch","error","compareItemCode","_this2","indexOf","parts","split","slice","companyType","ItemDescription","StyleCode","brandCode","toString","substr","brandNames","missItemCode","handleQuantity","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","props","customValue","_this3","fetchChainCode","_this4","fetchChainName","_this5","addItem","id","saveItem","boxID","_this6","str","toLowerCase","x","flag","i","quantity","parseInt","tempItem","description","Size","categorybrand","boxNumber","push","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","submit","_this7","post","email","sessionStorage","getItem","plID","brand","itemCode","editBoxLabel","filteredItems","uniqueItems","forEach","existingItem","find","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"fetchChainCode\"\n                :disabled=\"isDisabled[0]\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.shortName\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.company\" class=\"label-font\"\n                >Company is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"fetchChainName\"\n                :disabled=\"isDisabled[1]\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.chainCode\" class=\"label-font\"\n                >Chain Code is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n                @change=\"isDisabled[3] = false\"\n                :disabled=\"isDisabled[2]\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.branchName\" class=\"label-font\"\n                >Branch Name is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n                @change=\"isDisabled[4] = true\"\n                :disabled=\"isDisabled[3]\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.transactionType\" class=\"label-font\"\n                >Transaction Type is required.</label\n              >\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" v-show=\"isDisabled[4]\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#exampleModal\"\n                  @click=\"openModal(newTransaction)\"\n                >\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label\"\n                    v-model=\"newBoxLabel\"\n                    class=\"w-100\"\n                  ></fg-input>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"saveBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n                <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                  >Box Label is empty.</label\n                >\n              </div>\n              <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n                >Box Label is required.</label\n              >\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"boxLabel.boxLabel\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.id)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.id\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <input\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n                      <!-- <input\n                        :disabled=\"switchItemCode\"\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      /> -->\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"saveItem(boxLabel.boxLabel, boxLabel.id)\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n                    <label v-show=\"isRightCode\" class=\"label-font font-weight-normal\"\n                      >Invalid Item Code.</label\n                    >\n                    <label v-show=\"isNewItem\" class=\"label-font font-weight-normal\"\n                      >Item code is empty.</label\n                    >\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"nowrap\">Description</th>\n                        <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-show=\"boxLabel.boxLabel == item.boxLabel\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.code\"\n                      >\n                        <th scope=\"row\" class=\"px-3\">\n                          <button\n                            class=\"table-delete pull-left\"\n                            @click.prevent=\"removeItem(item.code, item.boxLabel)\"\n                          >\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </button>\n                          {{ item.code }}\n                        </th>\n                        <td class=\"cell px-3\">{{ item.description }}</td>\n                        <td class=\"cell px-3\">{{ item.categorybrand }}</td>\n                        <td class=\"cell\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                          />\n                        </td>\n                        <td class=\"cell\">\n                          <!-- <input\n                            type=\"text\"\n                            @blur=\"handleLabel(item.id)\"\n                            v-model=\"item.boxLabel\"\n                            class=\"table-input-box\"\n                          /> -->\n                          <el-select\n                            class=\"table-select-box\"\n                            size=\"large\"\n                            v-model=\"item.boxLabel\"\n                            @change=\"\n                              editBoxLabel(item.code, item.quantity, item.boxLabel)\n                            \"\n                          >\n                            <el-option\n                              v-for=\"boxLabel in newTransaction.boxLabels\"\n                              class=\"table-select-box\"\n                              :value=\"boxLabel.boxLabel\"\n                              :label=\"boxLabel.boxLabel\"\n                              :key=\"boxLabel.id\"\n                            >\n                            </el-option>\n                          </el-select>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n              <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n            </collapse>\n          </card>\n        </div>\n\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-warning btn-fill btn-wd\"\n            @click.prevent=\"draft\"\n          >\n            Draft\n          </button>\n          <button\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"submit\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n      <EditBoxLabelModal\n        :transferredData=\"transferredData\"\n        @closeModal=\"transferredData\"\n      ></EditBoxLabelModal>\n    </div>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    EditBoxLabelModal,\n  },\n  data() {\n    return {\n      transferredData: \"\",\n      isDisabled: [false, true, true, true, false, true],\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      hoveredRow: null,\n\n      transactionTypeList: [\n        { value: \"CPO - BranchDisposal\", label: \"Concess Pull-Out Item Disposal\" },\n        { value: \"CPO - Store\", label: \"Concess Pull-Out - Store\" },\n        { value: \"CPO - Warehouse\", label: \"Concess Pull-Out - Warehouse\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n    };\n  },\n  mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxLabel) {\n      console.log(\"New DATAs\", code, boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) => item.code !== code || item.boxLabel !== boxLabel\n      );\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Item No:\", response.data);\n          console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          !this.newItemInput ? true : (this.isRightCode = true);\n          console.log(\"Not Equal\");\n          console.error(error);\n        });\n    },\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      this.notifyVue(\"bottom\", \"right\");\n      this.isDisabled[1] = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      this.isDisabled[2] = false;\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(label, boxID) {\n      this.isNewItem = !this.newItemInput ? true : false;\n      console.log(\"item\", this.newItemInput);\n      console.log(\"condition\", this.isNewItem);\n\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n\n      let str = label.toLowerCase();\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxLabel.toLowerCase() == str\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description:\n                  response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                categorybrand: this.newBrand,\n                quantity: 1,\n                boxLabel: label,\n                boxNumber: boxID,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"bottom\", \"right\");\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      console.log(\"Items: \", this.newTransaction.items);\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        tempItem = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n        };\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      console.log(\"Console:\", this.newTransaction.boxLabels);\n      //Disable the above select buttons\n      this.isDisabled[0] = true;\n      this.isDisabled[1] = true;\n      this.isDisabled[2] = true;\n      this.isDisabled[3] = true;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    submit() {\n      this.isValid.company = !this.newTransaction.company ? true : false;\n      this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n      this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n      this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n      this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n      this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n      console.log(\"Company: \", this.isValid.company);\n\n      console.log(\"company\", this.newTransaction.company);\n      // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n      axiosClient\n        .post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          email: sessionStorage.getItem(\"Email\"),\n        })\n        .then((response) => {\n          console.log(\"Success Branch Save: \", response.data);\n\n          for (var x = 0; x < this.newTransaction.items.length; x++) {\n            axiosClient\n              .post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: this.newTransaction.company,\n                brand: this.newTransaction.items[x].categorybrand,\n                boxNumber: this.newTransaction.items[x].boxNumber,\n                boxLabel: this.newTransaction.items[x].boxLabel,\n                itemCode: this.newTransaction.items[x].code,\n                quantity: this.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n              })\n              .then((response) => {\n                console.log(\"Success Items Save: \", response.data);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    editBoxLabel(code, quantity, boxLabel) {\n      console.log(\n        \"Item Code Edit:\",\n        code,\n        \" Quantity:\",\n        quantity,\n        \" Box Label\",\n        boxLabel\n      );\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxLabel === boxLabel\n      );\n\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Label\", uniqueItems[0].boxLabel);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxLabel !== uniqueItems[0].boxLabel\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.table-delete {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}