{"ast":null,"code":"import _defineProperty from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _props$watch$computed;\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default (_props$watch$computed = {\n  props: [\"reasonDetail\"],\n  watch: {},\n  computed: {},\n  data: function data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\"\n      },\n      chainCodeList: [],\n      companyList: [],\n      Company: \"\",\n      reasonLabel: \"\",\n      isEmpty: false,\n      positionList: [{\n        id: 1,\n        company: \"NBFI\"\n      }, {\n        id: 2,\n        company: \"EPC\"\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.fetchChainCode();\n  }\n}, _defineProperty(_props$watch$computed, \"watch\", {}), _defineProperty(_props$watch$computed, \"methods\", {\n  handleBlur: function handleBlur(inputName) {\n    console.log(\"Clicked outside the specific input box\", inputName);\n    if (this[inputName] === \"\") {\n      this[inputName] = this.reasonDetail[inputName];\n    }\n  },\n  checking: function checking() {\n    this.Company === \"\" ? this.Company = this.reasonDetail.Company : \"\";\n    this.reasonLabel === \"\" ? this.reasonLabel = this.reasonDetail.reasonLabel : \"\";\n  },\n  convertToUppercase: function convertToUppercase() {\n    this.Company = this.Company.toUpperCase();\n    this.reasonLabel = this.reasonLabel.toUpperCase();\n  },\n  submit: function submit() {\n    console.log(\"before\", this.Company);\n    this.checking();\n    console.log(\"after\", this.Company);\n    console.log(\"before\", this.reasonLabel);\n    this.checking();\n    console.log(\"after\", this.reasonLabel);\n  },\n  closeModal: function closeModal() {\n    this.Company = \"\";\n    this.reasonLabel = \"\";\n  },\n  fetchChainCode: function fetchChainCode() {\n    var _this = this;\n    axiosClient.get(\"/fetchChainCodeAdmin\", {\n      params: {\n        company: this.company\n      }\n    }).then(function (response) {\n      _this.chainCodeList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n    axiosClient.get(\"/fetchCompany\").then(function (response) {\n      _this.companyList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n}), _props$watch$computed);","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","_props$watch$computed","props","watch","computed","data","newBranch","branchCode","chainCode","branchName","company","chainCodeList","companyList","Company","reasonLabel","isEmpty","positionList","id","mounted","fetchChainCode","_defineProperty","handleBlur","inputName","console","log","reasonDetail","checking","convertToUppercase","toUpperCase","submit","closeModal","_this","get","params","then","response","catch","error"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/ModalMaintenance/EditMaintenanceModal/EditReason.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"editreasonmodal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"editreasonmodalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"editreasonmodal\">\n            EDIT REASON {{ reasonDetail }}\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"row\">\n              <div class=\"mx-auto col-6\">\n                <fg-input label=\"Company\">\n                  <el-select\n                    class=\"select-default\"\n                    size=\"large\"\n                    :placeholder=\"personnelDetail.Company\"\n                    v-model=\"Company\"\n                    @blur=\"handleBlur('Company')\"\n                  >\n                    <el-option\n                      v-for=\"option in positionList\"\n                      class=\"select-default\"\n                      :value=\"option.position\"\n                      :label=\"option.position\"\n                      :key=\"option.id\"\n                    >\n                    </el-option>\n                  </el-select>\n                </fg-input>\n              </div>\n              <div class=\"mx-auto col-6\">\n                <fg-input\n                  label=\"Company\"\n                  :placeholder=\"reasonDetail.reasonLabel\"\n                  v-model.trim=\"reasonLabel\"\n                  @input=\"convertToUppercase\"\n                  @blur=\"handleBlur('reasonLabel')\"\n                ></fg-input>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            @click.prevent=\"closeModal()\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            :disabled=\"isEmpty\"\n            @click.prevent=\"submit\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  props: [\"reasonDetail\"],\n\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\",\n      },\n      chainCodeList: [],\n      companyList: [],\n      Company: \"\",\n      reasonLabel: \"\",\n      isEmpty: false,\n      positionList: [\n        {\n          id: 1,\n          company: \"NBFI\",\n        },\n        {\n          id: 2,\n          company: \"EPC\",\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    // brandNames: {\n    //   handler() {\n    //     this.checking();\n    //   },\n    //   deep: true,\n    // },\n  },\n  methods: {\n    handleBlur(inputName) {\n      console.log(\"Clicked outside the specific input box\", inputName);\n      if (this[inputName] === \"\") {\n        this[inputName] = this.reasonDetail[inputName];\n      }\n    },\n    checking() {\n      this.Company === \"\" ? (this.Company = this.reasonDetail.Company) : \"\";\n      this.reasonLabel === \"\" ? (this.reasonLabel = this.reasonDetail.reasonLabel) : \"\";\n    },\n    convertToUppercase() {\n      this.Company = this.Company.toUpperCase();\n      this.reasonLabel = this.reasonLabel.toUpperCase();\n    },\n    submit() {\n      console.log(\"before\", this.Company);\n      this.checking();\n      console.log(\"after\", this.Company);\n      \n      console.log(\"before\", this.reasonLabel);\n      this.checking();\n      console.log(\"after\", this.reasonLabel);\n      // axiosClient\n      //   .post(\"/addNewBranch\", {\n      //     branchCode: this.newBranch.branchCode,\n      //     chainCode: this.newBranch.chainCode,\n      //     branchName: this.newBranch.branchName,\n      //     userID: sessionStorage.getItem(\"UserID\"),\n      //     companyType: this.newBranch.company,\n      //     company: this.company,\n      //   })\n      //   .then((response) => {\n      //     // console.log(\"Response:\", response.data);\n      //     setTimeout(() => {\n      //       window.location.reload();\n      //     }, 3000); // Reload after 3 seconds\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n    closeModal() {\n      this.Company = \"\";\n      this.reasonLabel = \"\";\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChainCodeAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AA4EA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA,gBAAAC,qBAAA;EACAC,KAAA;EAEAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACAC,aAAA;MACAC,WAAA;MACAC,OAAA;MACAC,WAAA;MACAC,OAAA;MACAC,YAAA,GACA;QACAC,EAAA;QACAP,OAAA;MACA,GACA;QACAO,EAAA;QACAP,OAAA;MACA;IAEA;EACA;EACAQ,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;AAAA,GAAAC,eAAA,CAAAnB,qBAAA,WACA,CAOA,IAAAmB,eAAA,CAAAnB,qBAAA,aACA;EACAoB,UAAA,WAAAA,WAAAC,SAAA;IACAC,OAAA,CAAAC,GAAA,2CAAAF,SAAA;IACA,SAAAA,SAAA;MACA,KAAAA,SAAA,SAAAG,YAAA,CAAAH,SAAA;IACA;EACA;EACAI,QAAA,WAAAA,SAAA;IACA,KAAAb,OAAA,eAAAA,OAAA,QAAAY,YAAA,CAAAZ,OAAA;IACA,KAAAC,WAAA,eAAAA,WAAA,QAAAW,YAAA,CAAAX,WAAA;EACA;EACAa,kBAAA,WAAAA,mBAAA;IACA,KAAAd,OAAA,QAAAA,OAAA,CAAAe,WAAA;IACA,KAAAd,WAAA,QAAAA,WAAA,CAAAc,WAAA;EACA;EACAC,MAAA,WAAAA,OAAA;IACAN,OAAA,CAAAC,GAAA,gBAAAX,OAAA;IACA,KAAAa,QAAA;IACAH,OAAA,CAAAC,GAAA,eAAAX,OAAA;IAEAU,OAAA,CAAAC,GAAA,gBAAAV,WAAA;IACA,KAAAY,QAAA;IACAH,OAAA,CAAAC,GAAA,eAAAV,WAAA;EAmBA;EACAgB,UAAA,WAAAA,WAAA;IACA,KAAAjB,OAAA;IACA,KAAAC,WAAA;EACA;EACAK,cAAA,WAAAA,eAAA;IAAA,IAAAY,KAAA;IACApC,WAAA,CACAqC,GAAA;MACAC,MAAA;QACAvB,OAAA,OAAAA;MACA;IACA,GACAwB,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAApB,aAAA,GAAAwB,QAAA,CAAA9B,IAAA;IACA,GACA+B,KAAA,WAAAC,KAAA;MACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;IACA;IACA1C,WAAA,CACAqC,GAAA,kBACAE,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAAnB,WAAA,GAAAuB,QAAA,CAAA9B,IAAA;IACA,GACA+B,KAAA,WAAAC,KAAA;MACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;IACA;EACA;AACA,IAAApC,qBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}