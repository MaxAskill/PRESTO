{"ast":null,"code":"import UnprocessedPullOut from './PullOutRequests/UnprocessedPullOut.vue';\nimport Vue from 'vue';\nimport { Card, Tabs, TabPane } from 'src/components/UIComponents';\nimport axiosClient from '../../../../axios';\nexport default {\n  components: {\n    UnprocessedPullOut: UnprocessedPullOut,\n    Tabs: Tabs,\n    TabPane: TabPane,\n    Card: Card\n  }\n};","map":{"version":3,"names":["UnprocessedPullOut","Vue","Card","Tabs","TabPane","axiosClient","components"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <card>\n        <h5 slot=\"header\">Vertical Tabs</h5>\n        <tabs value=\"Description\" tab-content-classes=\"text-center\">\n          <tab-pane title=\"Unprocessed Pull-Out\" key=\"UPO\">\n          <unprocessed-pull-out></unprocessed-pull-out>\n            <!-- <div class=\"row align-items-center\">\n              <div class=\"col-sm-2\">\n                <el-select\n                  class=\"select-default\"\n                  v-model=\"pagination.perPage\"\n                  placeholder=\"Per page\">\n                  <el-option\n                    class=\"select-default\"\n                    v-for=\"item in pagination.perPageOptions\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                  </el-option>\n                </el-select>\n              </div>\n              <div class=\"col-sm-10\">\n                  <fg-input class=\"input-md\"\n                            placeholder=\"Search\"\n                            v-model=\"searchQuery\"\n                            addon-right-icon=\"nc-icon nc-zoom-split\">\n                  </fg-input>\n              </div>\n            </div>\n            <div class=\"col-sm-12 mt-2\">\n              <el-table class=\"table-striped\"\n                        :data=\"queriedData\"\n                        border\n                        style=\"width: 100%\">\n                <el-table-column v-for=\"column in tableColumns\"\n                                :key=\"column.label\"\n                                :min-width=\"column.minWidth\"\n                                :prop=\"column.prop\"\n                                :label=\"column.label\">\n                </el-table-column>\n                <el-table-column\n                  :min-width=\"120\"\n                  fixed=\"right\"\n                  class-name=\"td-actions\"\n                  label=\"Actions\">\n                  <template slot-scope=\"props\">\n                    <p-button type=\"info\" size=\"sm\" icon @click=\"handleLike(props.$index, props.row)\">\n                      <i class=\"fa fa-user\"></i>\n                    </p-button>\n                    <p-button type=\"success\" size=\"sm\" icon @click=\"handleEdit(props.$index, props.row)\">\n                      <i class=\"fa fa-edit\"></i>\n                    </p-button>\n                    <p-button type=\"danger\" size=\"sm\" icon @click=\"handleDelete(props.$index, props.row)\">\n                      <i class=\"fa fa-times\"></i>\n                    </p-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n            <div class=\"col-sm-6 pagination-info\">\n              <p class=\"category\">Showing {{from + 1}} to {{to}} of {{total}} entries</p>\n            </div>\n            <div class=\"col-sm-6\">\n              <p-pagination class=\"pull-right\"\n                            v-model=\"pagination.currentPage\"\n                            :per-page=\"pagination.perPage\"\n                            :total=\"pagination.total\">\n              </p-pagination>\n            </div> -->\n          </tab-pane>\n          <tab-pane title=\"Approved Pull-Out\" key=\"APO\">Here is your profile.</tab-pane>\n          <tab-pane title=\"Denied Pull-Out\" key=\"DPO\">Here are your messages.</tab-pane>\n        </tabs>\n      </card>\n    </div>\n  </div>\n</template>\n<script>\n  import UnprocessedPullOut from './PullOutRequests/UnprocessedPullOut.vue'\n  import Vue from 'vue'\n  // import {Table, TableColumn, Select, Option} from 'element-ui'\n  // import PPagination from '../../../UIComponents/Pagination.vue'\n  import {Card, Tabs, TabPane} from 'src/components/UIComponents'\n  // import users from '../Tables/users'\n  import axiosClient from '../../../../axios'\n  // Vue.use(Table)\n  // Vue.use(TableColumn)\n  // Vue.use(Select)\n  // Vue.use(Option)\n  export default{\n    components: {\n      UnprocessedPullOut,\n      // PPagination,\n      Tabs,\n      TabPane,\n      Card\n    },\n  }\n//     mounted() {\n//       this.fetchData();\n//     },\n//     computed: {\n//       pagedData () {\n\n\n//         return this.tableData.slice(this.from, this.to)\n//       },\n//       /***\n//        * Searches through table data and returns a paginated array.\n//        * Note that this should not be used for table with a lot of data as it might be slow!\n//        * Do the search and the pagination on the server and display the data retrieved from server instead.\n//        * @returns {computed.pagedData}\n//        */\n//       queriedData () {\n//         if (!this.searchQuery) {\n//           this.pagination.total = this.tableData.length\n//           return this.pagedData\n//         }\n//         let result = this.tableData\n//           .filter((row) => {\n//             let isIncluded = false\n//             for (let key of this.propsToSearch) {\n//               let rowValue = row[key].toString()\n//               if (rowValue.includes && rowValue.includes(this.searchQuery)) {\n//                 isIncluded = true\n//               }\n//             }\n//             return isIncluded\n//           })\n//         this.pagination.total = result.length\n//         return result.slice(this.from, this.to)\n//       },\n//       to () {\n//         let highBound = this.from + this.pagination.perPage\n//         if (this.total < highBound) {\n//           highBound = this.total\n//         }\n//         return highBound\n//       },\n//       from () {\n//         return this.pagination.perPage * (this.pagination.currentPage - 1)\n//       },\n//       total () {\n//         this.pagination.total = this.tableData.length\n//         return this.tableData.length\n//       }\n//     },\n//     data () {\n//       return {\n//         pagination: {\n//           perPage: 5,\n//           currentPage: 1,\n//           perPageOptions: [5, 10, 25, 50],\n//           total: 0\n//         },\n//         searchQuery: '',\n//         propsToSearch: ['name', 'email', 'age'],\n//         tableColumns: [\n//           {\n//             prop: 'plID',\n//             label: 'TRANSACTION ID',\n//             minWidth: 200\n//           },\n//           {\n//             prop: 'branchName',\n//             label: 'BRANCH NAME',\n//             minWidth: 250\n//           },\n//           {\n//             prop: 'transactionType',\n//             label: 'TRANSACTION TYPE',\n//             minWidth: 250\n//           },\n//           {\n//             prop: 'date',\n//             label: 'DATE',\n//             minWidth: 100\n//           },\n//           {\n//             prop: 'time',\n//             label: 'TIME',\n//             minWidth: 120\n//           }\n//         ],\n//         tableData: users\n//       }\n//     },\n//     methods: {\n//       fetchData(){\n//         axiosClient\n//         .get(\"/fetchPullOutRequestUnprocessed\", {\n//           params: {\n//             company: \"EPC\",\n//           },\n//         })\n//         .then((response) => {\n//           console.log(\"Pull Out Request\", response.data);\n//           this.tableData = response.data;\n//         })\n//         .catch((error) => {\n//           console.error(error);\n//         });\n//       },\n//       handleLike (index, row) {\n//         alert(`Your want to like ${row.branchName}`)\n//       },\n//       handleEdit (index, row) {\n//         alert(`Your want to edit ${row.branchName}`)\n//       },\n//       handleDelete (index, row) {\n//         let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id)\n//         if (indexToDelete >= 0) {\n//           this.tableData.splice(indexToDelete, 1)\n//         }\n//       }\n//     }\n//   }\n// </script>\n// <style lang=\"scss\">\n//   .el-table .td-actions{\n//   button.btn {\n//     margin-right: 5px;\n//   }\n//   }\n// </style>\n</script>"],"mappings":"AAgFA,OAAAA,kBAAA;AACA,OAAAC,GAAA;AAGA,SAAAC,IAAA,EAAAC,IAAA,EAAAC,OAAA;AAEA,OAAAC,WAAA;AAKA;EACAC,UAAA;IACAN,kBAAA,EAAAA,kBAAA;IAEAG,IAAA,EAAAA,IAAA;IACAC,OAAA,EAAAA,OAAA;IACAF,IAAA,EAAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}