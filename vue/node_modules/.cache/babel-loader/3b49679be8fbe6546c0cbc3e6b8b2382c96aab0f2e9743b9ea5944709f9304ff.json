{"ast":null,"code":"import axiosClient from \"../../../../axios\";\nexport default {\n  components: {},\n  watch: {},\n  props: [\"promoData\"],\n  computed: {},\n  data() {\n    return {};\n  },\n  mounted() {},\n  methods: {\n    deactivate() {\n      axiosClient.post(\"/updateUserBranch\", {\n        userID: this.promoData.id,\n        status: \"Deactivated\"\n      }).then(response => {\n        this.$emit(\"fetchUsers\");\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    fetchCompany() {\n      if (\"User\" != sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchCompany\").then(response => {\n        this.companyList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });else axiosClient.get(\"/fetchCompanyByUser\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        this.companyList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\") this.showCategoryBrand = true;else this.showCategoryBrand = false;\n    },\n    fetchChainCode() {\n      if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") this.isNBFI = true;else this.isNBFI = false;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainByUser\", {\n        params: {\n          company: this.newTransaction.company,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        this.chainCodeList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });else axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(response => {\n        this.chainCodeList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainNameByUser\", {\n        params: {\n          chainCode: this.newTransaction.chainCode,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        this.branchNameList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });else {\n        axiosClient.get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n            company: this.newTransaction.company\n          }\n        }).then(response => {\n          this.branchNameList = response.data;\n        }).catch(error => {\n          console.error(error);\n        });\n        this.isBranchName = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","components","watch","props","computed","data","mounted","methods","deactivate","post","userID","promoData","id","status","then","response","$emit","catch","error","console","fetchCompany","sessionStorage","getItem","get","companyList","params","company","showCategoryBrand","fetchChainCode","newTransaction","isNBFI","chainCodeList","isChainCode","fetchChainName","chainCode","branchNameList","isBranchName"],"sources":["src/components/Dashboard/Views/PullOut/PromoAssignBranchByAgentModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"promoAssignBranchByAgentModal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"promoAssignBranchByAgentModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h6 class=\"modal-title\">\n            Assigning of Temporary Branch for promo: <b>{{ promoData.name }}</b>\n          </h6>\n        </div>\n        <div class=\"modal-body text-center\">\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Company\" :disabled=\"isCompany\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Company\"\n                  v-model=\"newTransaction.company\"\n                  @change=\"\n                    fetchChainCode(),\n                      (newTransaction.chainCode = ''),\n                      (newTransaction.branchName = ''),\n                      (newTransaction.transactionType = '')\n                  \"\n                  :disabled=\"isCompany\"\n                >\n                  <el-option\n                    v-for=\"option in companyList\"\n                    class=\"select-default\"\n                    :value=\"option.shortName\"\n                    :label=\"option.name + ' (' + option.shortName + ') '\"\n                    :key=\"option.id\"\n                  >\n                  </el-option>\n                </el-select>\n                <label v-show=\"isValid.company\" class=\"label-font\"\n                  >Company is required.</label\n                >\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Chain Code\" :disabled=\"isChainCode\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Chain Code\"\n                  v-model=\"newTransaction.chainCode\"\n                  @change=\"\n                    fetchChainName(),\n                      (newTransaction.branchName = ''),\n                      (newTransaction.transactionType = '')\n                  \"\n                  :disabled=\"isChainCode\"\n                >\n                  <el-option\n                    v-for=\"option in chainCodeList\"\n                    class=\"select-default\"\n                    :value=\"option.chainCode\"\n                    :label=\"option.chainCode\"\n                    :key=\"option.chainCode\"\n                  >\n                  </el-option>\n                </el-select>\n                <label v-show=\"isValid.chainCode\" class=\"label-font\"\n                  >Chain Code is required.</label\n                >\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Branch Name\" :disabled=\"isBranchName\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Branch Name\"\n                  v-model=\"newTransaction.branchName\"\n                  @change=\"\n                    (isTransactionType = false), (newTransaction.transactionType = '')\n                  \"\n                  :disabled=\"isBranchName\"\n                >\n                  <el-option\n                    v-for=\"option in branchNameList\"\n                    class=\"select-default\"\n                    :value=\"option.branchName\"\n                    :label=\"option.branchName\"\n                    :key=\"option.branchName\"\n                  >\n                  </el-option>\n                </el-select>\n                <label v-show=\"isValid.branchName\" class=\"label-font\"\n                  >Branch Name is required.</label\n                >\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6 row\">\n              <div class=\"col-sm-6\">\n                <h4 class=\"label-size\">Start Date</h4>\n                <div class=\"form-group\">\n                  <el-date-picker\n                    v-model=\"datePicker\"\n                    type=\"date\"\n                    placeholder=\"Pick a date\"\n                    :picker-options=\"pickerOptions1\"\n                  >\n                  </el-date-picker>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <h4 class=\"label-size\">End Date</h4>\n                <div class=\"form-group\">\n                  <el-date-picker\n                    v-model=\"datePicker\"\n                    type=\"date\"\n                    placeholder=\"Pick a date\"\n                    :picker-options=\"pickerOptions1\"\n                  >\n                  </el-date-picker>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer d-flex justify-content-center\">\n          <button class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"deactivate()\">\n            Proceed\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\n\nexport default {\n  components: {},\n  watch: {},\n  props: [\"promoData\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {};\n  },\n  mounted() {},\n  methods: {\n    deactivate() {\n      axiosClient\n        .post(\"/updateUserBranch\", {\n          userID: this.promoData.id,\n          status: \"Deactivated\",\n        })\n        .then((response) => {\n          this.$emit(\"fetchUsers\");\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchCompany() {\n      if (\"User\" != sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchCompany\")\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else\n        axiosClient\n          .get(\"/fetchCompanyByUser\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\")\n        this.showCategoryBrand = true;\n      else this.showCategoryBrand = false;\n\n      // if (sessionStorage.getItem(\"Position\") == \"Admin\") this.showUploadImage = true;\n    },\n    fetchChainCode() {\n      if (\n        this.newTransaction.company == \"NBFI\" ||\n        this.newTransaction.company == \"CMC\" ||\n        this.newTransaction.company == \"ASC\"\n      )\n        this.isNBFI = true;\n      else this.isNBFI = false;\n\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainByUser\", {\n            params: {\n              company: this.newTransaction.company,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n      else\n        axiosClient\n          .get(\"/fetchChain\", {\n            params: {\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainNameByUser\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else {\n        axiosClient\n          .get(\"/fetchChainName\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        this.isBranchName = false;\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.tr_num {\n  font-size: 35px;\n  font-weight: 700;\n}\n</style>\n"],"mappings":"AA6IA,OAAAA,WAAA;AAEA;EACAC,UAAA;EACAC,KAAA;EACAC,KAAA;EACAC,QAAA,GAOA;EACAC,KAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,WAAA;MACAR,WAAA,CACAS,IAAA;QACAC,MAAA,OAAAC,SAAA,CAAAC,EAAA;QACAC,MAAA;MACA,GACAC,IAAA,CAAAC,QAAA;QACA,KAAAC,KAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACAE,aAAA;MACA,cAAAC,cAAA,CAAAC,OAAA,cACAtB,WAAA,CACAuB,GAAA,kBACAT,IAAA,CAAAC,QAAA;QACA,KAAAS,WAAA,GAAAT,QAAA,CAAAV,IAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,QAEAlB,WAAA,CACAuB,GAAA;QACAE,MAAA;UACAf,MAAA,EAAAW,cAAA,CAAAC,OAAA;QACA;MACA,GACAR,IAAA,CAAAC,QAAA;QACA,KAAAS,WAAA,GAAAT,QAAA,CAAAV,IAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;MACA,IAAAQ,OAAA,GAAAL,cAAA,CAAAC,OAAA;MACA,IAAAI,OAAA,cAAAA,OAAA,aAAAA,OAAA,WACA,KAAAC,iBAAA,aACA,KAAAA,iBAAA;IAGA;IACAC,eAAA;MACA,IACA,KAAAC,cAAA,CAAAH,OAAA,cACA,KAAAG,cAAA,CAAAH,OAAA,aACA,KAAAG,cAAA,CAAAH,OAAA,WAEA,KAAAI,MAAA,aACA,KAAAA,MAAA;MAEA,cAAAT,cAAA,CAAAC,OAAA,cACAtB,WAAA,CACAuB,GAAA;QACAE,MAAA;UACAC,OAAA,OAAAG,cAAA,CAAAH,OAAA;UACAhB,MAAA,EAAAW,cAAA,CAAAC,OAAA;QACA;MACA,GACAR,IAAA,CAAAC,QAAA;QAEA,KAAAgB,aAAA,GAAAhB,QAAA,CAAAV,IAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,QAGAlB,WAAA,CACAuB,GAAA;QACAE,MAAA;UACAC,OAAA,OAAAG,cAAA,CAAAH;QACA;MACA,GACAZ,IAAA,CAAAC,QAAA;QAEA,KAAAgB,aAAA,GAAAhB,QAAA,CAAAV,IAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;MAGA,KAAAc,WAAA;IACA;IACAC,eAAA;MACA,cAAAZ,cAAA,CAAAC,OAAA,cACAtB,WAAA,CACAuB,GAAA;QACAE,MAAA;UACAS,SAAA,OAAAL,cAAA,CAAAK,SAAA;UACAxB,MAAA,EAAAW,cAAA,CAAAC,OAAA;QACA;MACA,GACAR,IAAA,CAAAC,QAAA;QAEA,KAAAoB,cAAA,GAAApB,QAAA,CAAAV,IAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA,QACA;QACAlB,WAAA,CACAuB,GAAA;UACAE,MAAA;YACAS,SAAA,OAAAL,cAAA,CAAAK,SAAA;YACAR,OAAA,OAAAG,cAAA,CAAAH;UACA;QACA,GACAZ,IAAA,CAAAC,QAAA;UAEA,KAAAoB,cAAA,GAAApB,QAAA,CAAAV,IAAA;QACA,GACAY,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA;QAEA,KAAAkB,YAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}