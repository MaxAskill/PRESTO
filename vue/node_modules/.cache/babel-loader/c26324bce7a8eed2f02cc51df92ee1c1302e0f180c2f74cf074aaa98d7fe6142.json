{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\nimport axiosClient from \"../../../../../axios\";\nexport default {\n  components: (_components = {\n    Card: Card\n  }, _defineProperty(_components, Checkbox.name, Checkbox), _defineProperty(_components, Button.name, Button), _components),\n  methods: {\n    submit: function submit() {},\n    validatePassword: function validatePassword() {\n      if (/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/.test(this.password)) this.isConfirmPassword = false;else {\n        this.isConfirmPassword = true;\n        this.errorMsg = \"Password must be at least 8 characters long which contain of at least a lowercase letter, an uppercase letter, a number, and a special character.\";\n      }\n    },\n    matched: function matched() {\n      if (this.password == this.confirmPassword) this.isDisabled = false;else {\n        this.isDisabled = true;\n        this.errorMsg = \"Passwords does not match.\";\n      }\n    }\n  },\n  data: function data() {\n    return {\n      password: \"\",\n      confirmPassword: \"\",\n      isDisabled: true\n    };\n  }\n};","map":{"version":3,"names":["Card","Checkbox","Button","axiosClient","components","_components","_defineProperty","name","methods","submit","validatePassword","test","password","isConfirmPassword","errorMsg","matched","confirmPassword","isDisabled","data"],"sources":["src/components/Dashboard/Views/Pages/ForgotPassword/ResetPasswordForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"wrapper wrapper-full-page\">\n      <div class=\"full-page login-page section-image\">\n        <!--   you can change the color of the filter page using: data-color=\"blue | azure | green | orange | red | purple\" -->\n        <div class=\"content\">\n          <div class=\"container\">\n            <div class=\"col-lg-4 col-md-6 ml-auto mr-auto\">\n              <form @submit.prevent=\"submit\">\n                <card type=\"login\" class=\"m-0 p-0\">\n                  <p class=\"text-center font-size1\">\n                    Enter a new password for example@gmail.com\n                  </p>\n\n                  <fg-input label=\"Password\" class=\"mb-1\" v-model=\"Password\"></fg-input>\n                  <fg-input\n                    label=\"Confirm Password\"\n                    class=\"mb-0\"\n                    v-model=\"confirmPassword\"\n                  ></fg-input>\n\n                  <div class=\"card-footer pt-10px p-0 d-flex justify-content-center\">\n                    <p-button\n                      :disabled=\"isDisabled\"\n                      native-type=\"submit\"\n                      type=\"warning\"\n                      round\n                      >Reset Password\n                    </p-button>\n                  </div>\n                </card>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- <app-footer></app-footer> -->\n        <div\n          class=\"full-page-background\"\n          style=\"background-image: url(static/img/background/background-2.jpg)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\nimport axiosClient from \"../../../../../axios\";\n\nexport default {\n  components: {\n    Card,\n    [Checkbox.name]: Checkbox,\n    [Button.name]: Button,\n  },\n  methods: {\n    submit() {\n      //Reset User's Password\n    },\n    validatePassword() {\n      if (\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/.test(\n          this.password\n        )\n      )\n        this.isConfirmPassword = false;\n      else {\n        this.isConfirmPassword = true;\n        this.errorMsg =\n          \"Password must be at least 8 characters long which contain of at least a lowercase letter, an uppercase letter, a number, and a special character.\";\n      }\n    },\n    matched() {\n      if (this.password == this.confirmPassword) this.isDisabled = false;\n      else {\n        this.isDisabled = true;\n        this.errorMsg = \"Passwords does not match.\";\n      }\n    },\n  },\n  data() {\n    return {\n      password: \"\",\n      confirmPassword: \"\",\n      isDisabled: true,\n    };\n  },\n};\n</script>\n<style lang=\"scss\">\n.font-size1 {\n  font-size: 13px;\n}\n.pt-10px {\n  padding-top: 10px !important;\n}\n</style>\n"],"mappings":";;;;;AA6CA,SAAAA,IAAA,EAAAC,QAAA,EAAAC,MAAA;AACA,OAAAC,WAAA;AAEA;EACAC,UAAA,GAAAC,WAAA;IACAL,IAAA,EAAAA;EAAA,GAAAM,eAAA,CAAAD,WAAA,EACAJ,QAAA,CAAAM,IAAA,EAAAN,QAAA,GAAAK,eAAA,CAAAD,WAAA,EACAH,MAAA,CAAAK,IAAA,EAAAL,MAAA,GAAAG,WAAA,CACA;EACAG,OAAA;IACAC,MAAA,WAAAA,OAAA,GAEA;IACAC,gBAAA,WAAAA,iBAAA;MACA,IACA,oEAAAC,IAAA,CACA,KAAAC,QACA,GAEA,KAAAC,iBAAA,cACA;QACA,KAAAA,iBAAA;QACA,KAAAC,QAAA,GACA;MACA;IACA;IACAC,OAAA,WAAAA,QAAA;MACA,SAAAH,QAAA,SAAAI,eAAA,OAAAC,UAAA,cACA;QACA,KAAAA,UAAA;QACA,KAAAH,QAAA;MACA;IACA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA;MACAN,QAAA;MACAI,eAAA;MACAC,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}