{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Button2 from \"element-ui/lib/theme-chalk/button.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Button from \"element-ui/lib/button\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport VueAutosuggest from \"vue-autosuggest\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, _Button.name, _Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"VueAutosuggest\", VueAutosuggest), _components),\n  data: function data() {\n    return {\n      searchQuery: \"\",\n      selectedItem: \"\",\n      suggestions: [\"Apple\", \"Banana\", \"Cherry\", \"Date\", \"Elderberry\"],\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      tableData: [{\n        id: 1,\n        name: \"Dakota Rice\",\n        salary: \"$36.738\",\n        country: \"Niger\",\n        city: \"Oud-Turnhout\"\n      }, {\n        id: 2,\n        name: \"Minerva Hooper\",\n        salary: \"$23,789\",\n        country: \"Curaçao\",\n        city: \"Sinaai-Waas\"\n      }, {\n        id: 3,\n        name: \"Sage Rodriguez\",\n        salary: \"$56,142\",\n        country: \"Netherlands\",\n        city: \"Baileux\"\n      }, {\n        id: 4,\n        name: \"Philip Chaney\",\n        salary: \"$38,735\",\n        country: \"Korea, South\",\n        city: \"Overland Park\"\n      }, {\n        id: 5,\n        name: \"Doris Greene\",\n        salary: \"$63,542\",\n        country: \"Malawi\",\n        city: \"Feldkirchen in Kärnten\"\n      }],\n      newListBoxLabel: [{\n        id: 1,\n        boxLabel: \"Box Label One\"\n      }, {\n        id: 2,\n        boxLabel: \"Box Label Two\"\n      }, {\n        id: 3,\n        boxLabel: \"Box Label Three\"\n      }, {\n        id: 4,\n        boxLabel: \"Box Label Four\"\n      }],\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"Concess Pull-Out Item Disposal\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"Concess Pull-Out - Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"Concess Pull-Out - Warehouse\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchCompany();\n  },\n  computed: {\n    filteredSuggestions: function filteredSuggestions() {\n      var _this = this;\n      return this.suggestions.filter(function (suggestion) {\n        return suggestion.toLowerCase().includes(_this.searchQuery.toLowerCase());\n      });\n    }\n  },\n  methods: {\n    handleInput: function handleInput() {},\n    getSuggestionValue: function getSuggestionValue(suggestion) {\n      return suggestion;\n    },\n    handleSelected: function handleSelected(value) {\n      console.log(\"Selected:\", value);\n    },\n    fetchItems: function fetchItems() {\n      var _this2 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this2.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this2.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      }\n    },\n    compareItemCode: function compareItemCode() {\n      var _this3 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        console.log(\"Success Item No:\", response.data);\n        console.log(\"Success Item Description\", response.data[0].ItemDescription);\n        _this3.newItemDescription = response.data[0].ItemDescription;\n        _this3.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this3.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          console.log(\"Success\", response.data);\n          _this3.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (error) {\n        _this3.missItemCode = 0;\n        console.log(\"Not Equal\");\n        console.error(error);\n      });\n    },\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    handleLabel: function handleLabel() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this4 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this4.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this5 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this5.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainName: function fetchChainName() {\n      var _this6 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this6.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    addItem: function addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem: function saveItem(label) {\n      var _this7 = this;\n      this.isItem = false;\n      this.isAddItem = true;\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n      var str = label.toLowerCase();\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this7.newTransaction.items.length; i++) {\n            if (_this7.newTransaction.items[i].code == response.data[x].ItemNo && _this7.newTransaction.items[i].boxLabel.toLowerCase() == str) {\n              _this7.newTransaction.items[i].quantity = parseInt(_this7.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n              categorybrand: _this7.newBrand,\n              quantity: 1,\n              boxLabel: label\n            };\n            _this7.newTransaction.items.push(tempItem);\n          }\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(\"Items: \", this.newTransaction.items);\n      this.notifyVue(\"bottom\", \"right\");\n      this.newItemInput = \"\";\n      this.showItemInput = \"\";\n    },\n    cancelItem: function cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      var tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel\n      };\n      var tempItem = {\n        id: this.newTransaction.boxLabels.length + 1\n      };\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      console.log(\"itemBox:\", this.newItemInputBox);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    updateProfile: function updateProfile() {\n      console.log(\"company\", this.newTransaction.company);\n      alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","VueAutosuggest","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Button","_Option","_Select","data","searchQuery","selectedItem","suggestions","itemCodeList","isBoxLabel","isItem","isAddItem","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","tableData","id","salary","country","city","newListBoxLabel","boxLabel","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","notifications","topCenter","modals","classic","notice","mini","mounted","fetchCompany","computed","filteredSuggestions","_this","filter","suggestion","toLowerCase","includes","methods","handleInput","getSuggestionValue","handleSelected","console","log","fetchItems","_this2","length","get","params","ItemNo","then","response","catch","error","compareItemCode","_this3","indexOf","parts","split","slice","companyType","ItemDescription","StyleCode","brandCode","toString","substr","brandNames","missItemCode","handleQuantity","notifyVue","handleLabel","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","props","customValue","_this4","fetchChainCode","_this5","fetchChainName","_this6","addItem","saveItem","_this7","str","x","flag","i","code","quantity","parseInt","tempItem","description","Size","categorybrand","push","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","updateProfile","alert","JSON","stringify"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"fetchChainCode\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.shortName\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"fetchChainName\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button type=\"default\" link class=\"font-weight-bold\">\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label\"\n                    v-model=\"newBoxLabel\"\n                    class=\"w-100\"\n                  ></fg-input>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"saveBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n              </div>\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"boxLabel.boxLabel\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.id)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <input\n                    v-model=\"searchQuery\"\n                    @input=\"handleInput\"\n                    placeholder=\"Search\"\n                  />\n                  <VueAutosuggest\n                    v-model=\"selectedItem\"\n                    :suggestions=\"filteredSuggestions\"\n                    :get-suggestion-value=\"getSuggestionValue\"\n                    @selected=\"handleSelected\"\n                  >\n                    <template slot-scope=\"{ suggestion }\">\n                      <div>{{ suggestion }}</div>\n                    </template>\n                  </VueAutosuggest>\n                </div>\n                <div>\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.id\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <!-- <input\n                          :disabled=\"switchItemCode\"\n                          type=\"text\"\n                          v-model=\"newItemInput\"\n                          @input=\"fetchItems\"\n                          @change=\"compareItemCode\"\n                          list=\"items\"\n                          class=\"input-datalist\"\n                        /> -->\n                      <input\n                        :disabled=\"switchItemCode\"\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"saveItem(boxLabel.boxLabel)\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"nowrap\">Description</th>\n                        <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-show=\"boxLabel.boxLabel == item.boxLabel\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.id\"\n                      >\n                        <th scope=\"row\" class=\"px-3\">{{ item.code }}</th>\n                        <td class=\"cell px-3\">{{ item.description }}</td>\n                        <td class=\"cell px-3\">{{ item.categorybrand }}</td>\n                        <td class=\"cell\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                          />\n                        </td>\n                        <td class=\"cell\">\n                          <!-- <input\n                            type=\"text\"\n                            @blur=\"handleLabel(item.id)\"\n                            v-model=\"item.boxLabel\"\n                            class=\"table-input-box\"\n                          /> -->\n                          <el-select\n                            class=\"select-default table-select-box\"\n                            size=\"large\"\n                            placeholder=\"Select Company\"\n                            v-model=\"newTransaction.company\"\n                            @change=\"fetchChainCode\"\n                          >\n                            <el-option\n                              v-for=\"option in companyList\"\n                              class=\"table-select-box\"\n                              :value=\"option.shortName\"\n                              :label=\"option.shortName\"\n                              :key=\"option.id\"\n                            >\n                            </el-option>\n                          </el-select>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n            </collapse>\n          </card>\n        </div>\n\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"updateProfile\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from \"src/components/UIComponents\";\nimport {\n  DatePicker,\n  TimeSelect,\n  Slider,\n  Tag,\n  Input,\n  Button,\n  Select,\n  Option,\n} from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport VueAutosuggest from \"vue-autosuggest\";\n\nVue.use(Table);\nVue.use(TableColumn);\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    VueAutosuggest,\n  },\n  data() {\n    return {\n      searchQuery: \"\",\n      selectedItem: \"\",\n      suggestions: [\"Apple\", \"Banana\", \"Cherry\", \"Date\", \"Elderberry\"],\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      tableData: [\n        {\n          id: 1,\n          name: \"Dakota Rice\",\n          salary: \"$36.738\",\n          country: \"Niger\",\n          city: \"Oud-Turnhout\",\n        },\n        {\n          id: 2,\n          name: \"Minerva Hooper\",\n          salary: \"$23,789\",\n          country: \"Curaçao\",\n          city: \"Sinaai-Waas\",\n        },\n        {\n          id: 3,\n          name: \"Sage Rodriguez\",\n          salary: \"$56,142\",\n          country: \"Netherlands\",\n          city: \"Baileux\",\n        },\n        {\n          id: 4,\n          name: \"Philip Chaney\",\n          salary: \"$38,735\",\n          country: \"Korea, South\",\n          city: \"Overland Park\",\n        },\n        {\n          id: 5,\n          name: \"Doris Greene\",\n          salary: \"$63,542\",\n          country: \"Malawi\",\n          city: \"Feldkirchen in Kärnten\",\n        },\n      ],\n      newListBoxLabel: [\n        {\n          id: 1,\n          boxLabel: \"Box Label One\",\n        },\n        {\n          id: 2,\n          boxLabel: \"Box Label Two\",\n        },\n        {\n          id: 3,\n          boxLabel: \"Box Label Three\",\n        },\n        {\n          id: 4,\n          boxLabel: \"Box Label Four\",\n        },\n      ],\n\n      transactionTypeList: [\n        { value: \"CPO - BranchDisposal\", label: \"Concess Pull-Out Item Disposal\" },\n        { value: \"CPO - Store\", label: \"Concess Pull-Out - Store\" },\n        { value: \"CPO - Warehouse\", label: \"Concess Pull-Out - Warehouse\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n    };\n  },\n  mounted() {\n    this.fetchCompany();\n  },\n  computed: {\n    filteredSuggestions() {\n      return this.suggestions.filter((suggestion) =>\n        suggestion.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n  },\n  methods: {\n    handleInput() {\n      // Perform any additional logic on input change\n    },\n    getSuggestionValue(suggestion) {\n      return suggestion;\n    },\n    handleSelected(value) {\n      // Handle the selected suggestion\n      console.log(\"Selected:\", value);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Item No:\", response.data);\n          console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          console.log(\"Not Equal\");\n          console.error(error);\n        });\n    },\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    handleLabel() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(label) {\n      this.isItem = false;\n      this.isAddItem = true;\n\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n\n      let str = label.toLowerCase();\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxLabel.toLowerCase() == str\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description:\n                  response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                categorybrand: this.newBrand,\n                quantity: 1,\n                boxLabel: label,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      console.log(\"Items: \", this.newTransaction.items);\n      this.notifyVue(\"bottom\", \"right\");\n\n      this.newItemInput = \"\";\n      this.showItemInput = \"\";\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel,\n      };\n\n      let tempItem = {\n        id: this.newTransaction.boxLabels.length + 1,\n      };\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      console.log(\"itemBox:\", this.newItemInputBox);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      // console.log(\"Console:\",this.newItem);\n    },\n    cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    updateProfile() {\n      console.log(\"company\", this.newTransaction.company);\n      alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n}\n\n.table-select-box input {\n  border-radius: 0px !important;\n  border: 5px solid yellow;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\n/* .th-itemcode{\n\n    } */\n.table-select-box:focus {\n  border-width: 5px;\n  border: 5px solid blue !important;\n  outline: none;\n}\n\n.table-input-box:focus {\n  border-width: 5px;\n  border: 1px solid blue !important;\n  outline: none;\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}