{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport PButton from \"../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../axios\";\nimport { Badge } from \"src/components/UIComponents\";\nimport linkName from \"../../../../linkName\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PButton,\n    PPagination,\n    Badge\n  },\n  mounted() {\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"All Pull-Out Requests\";\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter(row => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"chainCode\", \"branchCode\", \"branchName\", \"status\"],\n      tableColumns: [{\n        prop: \"plID\",\n        label: \"Transaction NO.\",\n        minWidth: 50\n      }, {\n        prop: \"branchName\",\n        label: \"Branch Name\",\n        minWidth: 200\n      }, {\n        prop: \"transactionType\",\n        label: \"Transaction Type\",\n        minWidth: 200\n      }, {\n        prop: \"date\",\n        label: \"Creation Date\",\n        minWidth: 50\n      }, {\n        prop: \"time\",\n        label: \"Creation Time\",\n        minWidth: 50\n      }, {\n        prop: \"name\",\n        label: \"Name\",\n        minWidth: 100\n      }],\n      headerCellStyle: {\n        fontSize: \"10px\"\n      },\n      cellStyle: {\n        fontSize: \"12px\"\n      },\n      tableData: []\n    };\n  },\n  methods: {\n    denied(row) {\n      console.log(\"Company\", row);\n      this.$router.push({\n        path: \"/pull-out/requisition-form\",\n        query: {\n          transactionID: row.plID,\n          company: row.company\n        }\n      });\n    },\n    fetchData() {\n      axiosClient.get(\"/fetchUserRequestTransactionListAdmin\", {\n        params: {\n          company: this.company\n        }\n      }).then(response => {\n        console.log(\"Pull Out Request\", response.data);\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    handleEdit(index, row) {\n      var tempStatus = \"\";\n      if (row.status === \"Active\") {\n        row.status = \"Inactive\";\n        tempStatus = \"Inactive\";\n      } else {\n        row.status = \"Active\";\n        tempStatus = \"Active\";\n      }\n      console.log(\"Branch ID:\", row.id);\n      console.log(\"BranchCode:\", row.branchCode);\n      axiosClient.post(\"/updateBranch\", {\n        company: this.company,\n        id: row.id,\n        status: tempStatus,\n        userID: sessionStorage.getItem(\"UserID\")\n      }).then(response => {\n        console.log(\"Success Update Branch:\", response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    handleDelete(index, row) {\n      console.log(\"ID:\", row.id, row.company);\n      let indexToDelete = this.tableData.findIndex(tableRow => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Vue","PButton","PPagination","axiosClient","Badge","linkName","use","_Table","_TableColumn","_Select","_Option","components","mounted","fetchData","window","resolveRouteChange","val","computed","pagedData","tableData","slice","from","to","queriedData","searchQuery","pagination","total","length","result","filter","row","isIncluded","key","propsToSearch","rowValue","toString","toLowerCase","includes","highBound","perPage","currentPage","data","company","perPageOptions","tableColumns","prop","label","minWidth","headerCellStyle","fontSize","cellStyle","methods","denied","console","log","$router","push","path","query","transactionID","plID","get","params","then","response","catch","error","handleEdit","index","tempStatus","status","id","branchCode","post","userID","sessionStorage","getItem","handleDelete","indexToDelete","findIndex","tableRow","splice"],"sources":["src/components/Dashboard/Views/PullOut/AdminPullOutTransaction.vue"],"sourcesContent":["<template>\n  <div class=\"card card-transactions\">\n    <div class=\"card-body\">\n      <!-- <div class=\"card-header\">\n        <h4 class=\"title\">Pull-Out Transactions</h4>\n      </div> -->\n      <div class=\"row mx-2 justify-content-between\">\n        <div class=\"col-4\">\n          <fg-input\n            class=\"input-md\"\n            placeholder=\"Search\"\n            v-model=\"searchQuery\"\n            addon-right-icon=\"nc-icon nc-zoom-split\"\n          >\n          </fg-input>\n        </div>\n        <div class=\"col-3 row\">\n          <div class=\"col-6\">\n            <el-select\n              class=\"select-default el-select-w\"\n              placeholder=\"Select Company\"\n              v-model=\"company\"\n              @change=\"fetchData\"\n            >\n              <el-option class=\"select-default\" value=\"EPC\" label=\"EPC\">EPC</el-option>\n              <el-option class=\"select-default\" value=\"NBFI\" label=\"NBFI\">NBFI</el-option>\n            </el-select>\n          </div>\n          <div class=\"col-6\">\n            <el-select\n              class=\"select-default\"\n              v-model=\"pagination.perPage\"\n              placeholder=\"Per page\"\n            >\n              <el-option\n                class=\"select-default\"\n                v-for=\"item in pagination.perPageOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              >\n              </el-option>\n            </el-select>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mx-2\">\n        <el-table\n          class=\"table-striped pad-tbl\"\n          :data=\"queriedData\"\n          border\n          style=\"width: 100%\"\n          :header-cell-style=\"headerCellStyle\"\n          :cell-style=\"cellStyle\"\n        >\n          <!-- Index Column -->\n          <el-table-column label=\"\" class=\"el-table-mod\" width=\"40\">\n            <template slot-scope=\"scope\">\n              <span>{{\n                (pagination.currentPage - 1) * pagination.perPage + scope.$index + 1\n              }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column\n            v-for=\"column in tableColumns\"\n            :key=\"column.label\"\n            :min-width=\"column.minWidth\"\n            :prop=\"column.prop\"\n            :label=\"column.label\"\n            header-align=\"center\"\n          >\n          </el-table-column>\n          <el-table-column\n            :min-width=\"60\"\n            class-name=\"td-actions\"\n            label=\"Status\"\n            header-align=\"center\"\n          >\n            <template slot-scope=\"props\">\n              <!-- {{ props.row.status }} -->\n              <badge\n                v-if=\"props.row.status === 'approved'\"\n                slot=\"header\"\n                type=\"success\"\n                >{{ props.row.status }}</badge\n              >\n              <badge\n                v-else-if=\"props.row.status === 'unprocessed'\"\n                slot=\"header\"\n                type=\"warning\"\n                >{{ props.row.status }}</badge\n              >\n              <badge\n                v-else-if=\"props.row.status === 'For Approval'\"\n                slot=\"header\"\n                type=\"primary\"\n                >{{ props.row.status }}</badge\n              >\n              <!-- <badge v-else slot=\"header\" type=\"success\" @click=\"openModal(props.row)\">{{\n                props.row.status\n              }}</badge> -->\n              <!-- <p-button\n                v-else\n                type=\"danger\"\n                size=\"sm\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#approvedModal\"\n                @click=\"openModal(props.row)\"\n              >\n                {{ props.row.status }}\n              </p-button> -->\n              <button v-else class=\"denied-btn\" @click=\"denied(props.row)\">\n                {{ props.row.status }}\n              </button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div class=\"d-flex justify-content-end pagination-info\">\n        <p class=\"category p-margin\">\n          Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n        </p>\n      </div>\n      <div class=\"d-flex justify-content-center\">\n        <p-pagination\n          class=\"pull-center\"\n          v-model=\"pagination.currentPage\"\n          :per-page=\"pagination.perPage\"\n          :total=\"pagination.total\"\n        >\n        </p-pagination>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\n// import {\n//   Collapse,\n//   CollapseItem,\n//   Tabs,\n//   TabPane,\n//   Card,\n//   Button,\n// } from \"src/components/UIComponents\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\n// import PButton from \"../../../../UIComponents/Button.vue\";\nimport PButton from \"../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../axios\";\nimport { Badge } from \"src/components/UIComponents\";\nimport linkName from \"../../../../linkName\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\n\nexport default {\n  components: {\n    PButton,\n    PPagination,\n    Badge,\n  },\n  mounted() {\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"All Pull-Out Requests\";\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"chainCode\", \"branchCode\", \"branchName\", \"status\"],\n      tableColumns: [\n        {\n          prop: \"plID\",\n          label: \"Transaction NO.\",\n          minWidth: 50,\n        },\n        {\n          prop: \"branchName\",\n          label: \"Branch Name\",\n          minWidth: 200,\n        },\n        {\n          prop: \"transactionType\",\n          label: \"Transaction Type\",\n          minWidth: 200,\n        },\n        {\n          prop: \"date\",\n          label: \"Creation Date\",\n          minWidth: 50,\n        },\n        {\n          prop: \"time\",\n          label: \"Creation Time\",\n          minWidth: 50,\n        },\n        {\n          prop: \"name\",\n          label: \"Name\",\n          minWidth: 100,\n        },\n      ],\n      headerCellStyle: {\n        fontSize: \"10px\",\n      },\n      cellStyle: {\n        fontSize: \"12px\",\n      },\n      tableData: [],\n    };\n  },\n  methods: {\n    denied(row) {\n      console.log(\"Company\", row);\n      // location.href =\n      //   \"http://192.168.0.7:4040/#/pull-out/requisition-form?transactionID=\" +\n      //   row.plID +\n      //   \"&company=\" +\n      //   row.company;\n\n      this.$router.push({\n        path: \"/pull-out/requisition-form\",\n        query: {\n          transactionID: row.plID,\n          company: row.company,\n        },\n      });\n    },\n    fetchData() {\n      axiosClient\n        .get(\"/fetchUserRequestTransactionListAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Pull Out Request\", response.data);\n          this.tableData = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleEdit(index, row) {\n      var tempStatus = \"\";\n      if (row.status === \"Active\") {\n        row.status = \"Inactive\";\n        tempStatus = \"Inactive\";\n      } else {\n        row.status = \"Active\";\n        tempStatus = \"Active\";\n      }\n\n      console.log(\"Branch ID:\", row.id);\n      console.log(\"BranchCode:\", row.branchCode);\n\n      axiosClient\n        .post(\"/updateBranch\", {\n          company: this.company,\n          id: row.id,\n          status: tempStatus,\n          userID: sessionStorage.getItem(\"UserID\"),\n        })\n        .then((response) => {\n          console.log(\"Success Update Branch:\", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      // alert(`Your want to edit ${row.status}`);\n    },\n    handleDelete(index, row) {\n      console.log(\"ID:\", row.id, row.company);\n\n      let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n\n.nav-center {\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n}\n.pad-tbl {\n  padding: 0px 0px;\n}\n.btn-margin {\n  margin: 0px 0px;\n}\n.p-margin {\n  margin-bottom: 0px;\n}\n.el-select-w {\n  width: 91%;\n  margin-right: 10px;\n}\n.first-btn {\n  padding-left: 4px;\n  padding-right: 12px;\n}\n.last-btn {\n  margin-left: 10px;\n}\n.denied-btn {\n  background-color: #ef8157;\n  font-size: 10px;\n  border-radius: 10px;\n  border: none;\n  text-transform: uppercase;\n  color: white;\n}\n.card-transactions {\n  margin-top: 100px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}