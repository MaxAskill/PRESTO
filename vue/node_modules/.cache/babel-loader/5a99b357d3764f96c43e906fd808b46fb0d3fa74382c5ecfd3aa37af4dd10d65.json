{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _components),\n  data: function data() {\n    return {\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      tableData: [{\n        id: 1,\n        name: \"Dakota Rice\",\n        salary: \"$36.738\",\n        country: \"Niger\",\n        city: \"Oud-Turnhout\"\n      }, {\n        id: 2,\n        name: \"Minerva Hooper\",\n        salary: \"$23,789\",\n        country: \"Curaçao\",\n        city: \"Sinaai-Waas\"\n      }, {\n        id: 3,\n        name: \"Sage Rodriguez\",\n        salary: \"$56,142\",\n        country: \"Netherlands\",\n        city: \"Baileux\"\n      }, {\n        id: 4,\n        name: \"Philip Chaney\",\n        salary: \"$38,735\",\n        country: \"Korea, South\",\n        city: \"Overland Park\"\n      }, {\n        id: 5,\n        name: \"Doris Greene\",\n        salary: \"$63,542\",\n        country: \"Malawi\",\n        city: \"Feldkirchen in Kärnten\"\n      }],\n      newListBoxLabel: [{\n        id: 1,\n        boxLabel: \"Box Label One\"\n      }, {\n        id: 2,\n        boxLabel: \"Box Label Two\"\n      }, {\n        id: 3,\n        boxLabel: \"Box Label Three\"\n      }, {\n        id: 4,\n        boxLabel: \"Box Label Four\"\n      }],\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"Concess Pull-Out Item Disposal\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"Concess Pull-Out - Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"Concess Pull-Out - Warehouse\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    removeItem: function removeItem(code, boxLabel) {\n      console.log(\"New DATAs\", code, boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== code || item.boxLabel !== boxLabel;\n      });\n    },\n    fetchItems: function fetchItems() {\n      var _this = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      }\n    },\n    compareItemCode: function compareItemCode() {\n      var _this2 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        console.log(\"Success Item No:\", response.data);\n        console.log(\"Success Item Description\", response.data[0].ItemDescription);\n        _this2.newItemDescription = response.data[0].ItemDescription;\n        _this2.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this2.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          console.log(\"Success\", response.data);\n          _this2.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (error) {\n        _this2.missItemCode = 0;\n        console.log(\"Not Equal\");\n        console.error(error);\n      });\n    },\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this3 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this3.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this4 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this4.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    fetchChainName: function fetchChainName() {\n      var _this5 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this5.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    addItem: function addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem: function saveItem(label) {\n      var _this6 = this;\n      this.isItem = false;\n      this.isAddItem = true;\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n      var str = label.toLowerCase();\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this6.newTransaction.items.length; i++) {\n            if (_this6.newTransaction.items[i].code == response.data[x].ItemNo && _this6.newTransaction.items[i].boxLabel.toLowerCase() == str) {\n              _this6.newTransaction.items[i].quantity = parseInt(_this6.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n              categorybrand: _this6.newBrand,\n              quantity: 1,\n              boxLabel: label\n            };\n            _this6.newTransaction.items.push(tempItem);\n          }\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(\"Items: \", this.newTransaction.items);\n      this.notifyVue(\"bottom\", \"right\");\n      this.newItemInput = \"\";\n      this.showItemInput = \"\";\n    },\n    cancelItem: function cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      var tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel\n      };\n      var tempItem = {\n        id: this.newTransaction.boxLabels.length + 1\n      };\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      console.log(\"itemBox:\", this.newItemInputBox);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    submit: function submit() {\n      console.log(\"company\", this.newTransaction.company);\n      axiosClient.post(\"/savePullOutBranchRequest\", {\n        chainCode: this.newTransaction.chainCode,\n        companyType: this.newTransaction.company,\n        branchName: this.newTransaction.branchName,\n        transactionType: this.newTransaction.transactionType,\n        email: sessionStorage.getItem(\"Email\")\n      }).then(function (response) {\n        console.log(\"Success Branch Save: \", response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxLabel) {\n      console.log(\"Item Code Edit:\", code, \" Quantity:\", quantity, \" Box Label\", boxLabel);\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxLabel === boxLabel;\n      });\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Label\", uniqueItems[0].boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxLabel !== uniqueItems[0].boxLabel;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","itemCodeList","isBoxLabel","isItem","isAddItem","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","tableData","id","salary","country","city","newListBoxLabel","boxLabel","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","notifications","topCenter","modals","classic","notice","mini","mounted","fetchCompany","methods","removeItem","code","console","log","filter","item","fetchItems","_this","length","get","params","ItemNo","then","response","catch","error","compareItemCode","_this2","indexOf","parts","split","slice","companyType","ItemDescription","StyleCode","brandCode","toString","substr","brandNames","missItemCode","handleQuantity","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","props","customValue","_this3","fetchChainCode","_this4","fetchChainName","_this5","addItem","saveItem","_this6","str","toLowerCase","x","flag","i","quantity","parseInt","tempItem","description","Size","categorybrand","push","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","submit","post","email","sessionStorage","getItem","editBoxLabel","filteredItems","uniqueItems","forEach","existingItem","find","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"fetchChainCode\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.shortName\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"fetchChainName\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button type=\"default\" link class=\"font-weight-bold\">\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label\"\n                    v-model=\"newBoxLabel\"\n                    class=\"w-100\"\n                  ></fg-input>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"saveBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n              </div>\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"boxLabel.boxLabel\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.id)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.id\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <input\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n                      <!-- <input\n                        :disabled=\"switchItemCode\"\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      /> -->\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"saveItem(boxLabel.boxLabel)\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"nowrap\">Description</th>\n                        <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        @mouseover=\"showButton(item.code)\"\n                        @mouseleave=\"hideButton(item.code)\"\n                        v-show=\"boxLabel.boxLabel == item.boxLabel\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.code\"\n                      >\n                        <th scope=\"row\" class=\"px-3\">\n                          {{ item.code }}\n                          <button\n                            class=\"table-delete pull-right\"\n                            @click.prevent=\"removeItem(item.code, item.boxLabel)\"\n                          >\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </button>\n                        </th>\n                        <td class=\"cell px-3\">{{ item.description }}</td>\n                        <td class=\"cell px-3\">{{ item.categorybrand }}</td>\n                        <td class=\"cell\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                          />\n                        </td>\n                        <td class=\"cell\">\n                          <!-- <input\n                            type=\"text\"\n                            @blur=\"handleLabel(item.id)\"\n                            v-model=\"item.boxLabel\"\n                            class=\"table-input-box\"\n                          /> -->\n                          <el-select\n                            class=\"table-select-box\"\n                            size=\"large\"\n                            v-model=\"item.boxLabel\"\n                            @change=\"\n                              editBoxLabel(item.code, item.quantity, item.boxLabel)\n                            \"\n                          >\n                            <el-option\n                              v-for=\"boxLabel in newTransaction.boxLabels\"\n                              class=\"table-select-box\"\n                              :value=\"boxLabel.boxLabel\"\n                              :label=\"boxLabel.boxLabel\"\n                              :key=\"boxLabel.id\"\n                            >\n                            </el-option>\n                          </el-select>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n            </collapse>\n          </card>\n        </div>\n\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"submit\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n  },\n  data() {\n    return {\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      tableData: [\n        {\n          id: 1,\n          name: \"Dakota Rice\",\n          salary: \"$36.738\",\n          country: \"Niger\",\n          city: \"Oud-Turnhout\",\n        },\n        {\n          id: 2,\n          name: \"Minerva Hooper\",\n          salary: \"$23,789\",\n          country: \"Curaçao\",\n          city: \"Sinaai-Waas\",\n        },\n        {\n          id: 3,\n          name: \"Sage Rodriguez\",\n          salary: \"$56,142\",\n          country: \"Netherlands\",\n          city: \"Baileux\",\n        },\n        {\n          id: 4,\n          name: \"Philip Chaney\",\n          salary: \"$38,735\",\n          country: \"Korea, South\",\n          city: \"Overland Park\",\n        },\n        {\n          id: 5,\n          name: \"Doris Greene\",\n          salary: \"$63,542\",\n          country: \"Malawi\",\n          city: \"Feldkirchen in Kärnten\",\n        },\n      ],\n      newListBoxLabel: [\n        {\n          id: 1,\n          boxLabel: \"Box Label One\",\n        },\n        {\n          id: 2,\n          boxLabel: \"Box Label Two\",\n        },\n        {\n          id: 3,\n          boxLabel: \"Box Label Three\",\n        },\n        {\n          id: 4,\n          boxLabel: \"Box Label Four\",\n        },\n      ],\n\n      transactionTypeList: [\n        { value: \"CPO - BranchDisposal\", label: \"Concess Pull-Out Item Disposal\" },\n        { value: \"CPO - Store\", label: \"Concess Pull-Out - Store\" },\n        { value: \"CPO - Warehouse\", label: \"Concess Pull-Out - Warehouse\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n    };\n  },\n  mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    removeItem(code, boxLabel) {\n      console.log(\"New DATAs\", code, boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) => item.code !== code || item.boxLabel !== boxLabel\n      );\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Item No:\", response.data);\n          console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          console.log(\"Not Equal\");\n          console.error(error);\n        });\n    },\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(label) {\n      this.isItem = false;\n      this.isAddItem = true;\n\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n\n      let str = label.toLowerCase();\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxLabel.toLowerCase() == str\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description:\n                  response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                categorybrand: this.newBrand,\n                quantity: 1,\n                boxLabel: label,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      console.log(\"Items: \", this.newTransaction.items);\n      this.notifyVue(\"bottom\", \"right\");\n\n      this.newItemInput = \"\";\n      this.showItemInput = \"\";\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel,\n      };\n\n      let tempItem = {\n        id: this.newTransaction.boxLabels.length + 1,\n      };\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      console.log(\"itemBox:\", this.newItemInputBox);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      // console.log(\"Console:\",this.newItem);\n    },\n    cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    submit() {\n      console.log(\"company\", this.newTransaction.company);\n      // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n      axiosClient\n        .post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          email: sessionStorage.getItem(\"Email\"),\n        })\n        .then((response) => {\n          console.log(\"Success Branch Save: \", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    editBoxLabel(code, quantity, boxLabel) {\n      console.log(\n        \"Item Code Edit:\",\n        code,\n        \" Quantity:\",\n        quantity,\n        \" Box Label\",\n        boxLabel\n      );\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxLabel === boxLabel\n      );\n\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Label\", uniqueItems[0].boxLabel);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxLabel !== uniqueItems[0].boxLabel\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.table-delete {\n  background-color: transparent;\n  color: transparent;\n  border: none;\n}\n\n.table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}