{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\nimport axiosClient from \"../../../../../axios\";\nexport default {\n  components: (_components = {\n    Card: Card\n  }, _defineProperty(_components, Checkbox.name, Checkbox), _defineProperty(_components, Button.name, Button), _components),\n  methods: {\n    toggleNavbar: function toggleNavbar() {\n      document.body.classList.toggle(\"nav-open\");\n    },\n    closeMenu: function closeMenu() {\n      document.body.classList.remove(\"nav-open\");\n      document.body.classList.remove(\"off-canvas-sidebar\");\n    },\n    snedOTP: function snedOTP() {\n      var _this = this;\n      console.log(\"HashCode:\", sessionStorage.getItem(\"HashCode\"));\n      console.log(\"OTP:\", this.OTP);\n      axiosClient.get(\"/confirmCode\", {\n        params: {\n          verCode: this.OTP,\n          hashCode: sessionStorage.getItem(\"HashCode\")\n        }\n      }).then(function (response) {\n        console.log(\"Success Equal Response:\", response.data);\n        axiosClient.post(\"/register\", {\n          name: sessionStorage.getItem(\"Name\"),\n          email: sessionStorage.getItem(\"Email\"),\n          password: sessionStorage.getItem(\"Password\"),\n          position: sessionStorage.getItem(\"Position\"),\n          company: sessionStorage.getItem(\"Company\")\n        }).then(function (response) {\n          console.log(response.data);\n          sessionStorage.clear();\n          _this.$router.push({\n            name: \"LoginOTPForm\"\n          });\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (err) {\n        console.error(err);\n      });\n    },\n    validateEmail: function validateEmail() {\n      if (/^[\\w.-]+@[a-zA-Z_-]+?\\.[a-zA-Z]{2,3}$/.test(this.email)) {\n        this.isEmail = false;\n      } else this.isEmail = true;\n    }\n  },\n  data: function data() {\n    return {\n      email: \"\",\n      isEmail: true\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.closeMenu();\n  }\n};","map":{"version":3,"names":["Card","Checkbox","Button","axiosClient","components","_components","_defineProperty","name","methods","toggleNavbar","document","body","classList","toggle","closeMenu","remove","snedOTP","_this","console","log","sessionStorage","getItem","OTP","get","params","verCode","hashCode","then","response","data","post","email","password","position","company","clear","$router","push","catch","error","err","validateEmail","test","isEmail","beforeDestroy"],"sources":["src/components/Dashboard/Views/Pages/ForgotPassword/ForgotPassword.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"wrapper wrapper-full-page\">\n      <div class=\"full-page login-page section-image\">\n        <!--   you can change the color of the filter page using: data-color=\"blue | azure | green | orange | red | purple\" -->\n        <div class=\"content\">\n          <div class=\"container\">\n            <div class=\"col-lg-4 col-md-6 ml-auto mr-auto\">\n              <form @submit.prevent=\"sendOTP\">\n                <card type=\"login\" class=\"card-margin\">\n                  <p class=\"text-center font-size1\">\n                    Forgot your password? No problem. Just let us know your email address\n                    and we will email you an OTP that will allow you to create a new one.\n                  </p>\n\n                  <fg-input\n                    label=\"Email\"\n                    class=\"fg-margin\"\n                    v-model=\"email\"\n                    @input=\"validateEmail\"\n                  ></fg-input>\n\n                  <p-button :disabled=\"isEmail\" native-type=\"submit\" type=\"warning\" round\n                    >Send OTP\n                  </p-button>\n                </card>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- <app-footer></app-footer> -->\n        <div\n          class=\"full-page-background\"\n          style=\"background-image: url(static/img/background/background-2.jpg)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\n// import AppFooter from './Layout/AppFooter'\n\nimport axiosClient from \"../../../../../axios\";\n\nexport default {\n  components: {\n    Card,\n    // AppFooter,\n    [Checkbox.name]: Checkbox,\n    [Button.name]: Button,\n  },\n  methods: {\n    toggleNavbar() {\n      document.body.classList.toggle(\"nav-open\");\n    },\n    closeMenu() {\n      document.body.classList.remove(\"nav-open\");\n      document.body.classList.remove(\"off-canvas-sidebar\");\n    },\n    snedOTP() {\n      console.log(\"HashCode:\", sessionStorage.getItem(\"HashCode\"));\n      console.log(\"OTP:\", this.OTP);\n\n      axiosClient\n        .get(\"/confirmCode\", {\n          params: {\n            verCode: this.OTP,\n            hashCode: sessionStorage.getItem(\"HashCode\"),\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Equal Response:\", response.data);\n          axiosClient\n            .post(\"/register\", {\n              name: sessionStorage.getItem(\"Name\"),\n              email: sessionStorage.getItem(\"Email\"),\n              password: sessionStorage.getItem(\"Password\"),\n              position: sessionStorage.getItem(\"Position\"),\n              company: sessionStorage.getItem(\"Company\"),\n            })\n            .then((response) => {\n              console.log(response.data);\n              sessionStorage.clear();\n              this.$router.push({ name: \"LoginOTPForm\" });\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n    validateEmail() {\n      if (/^[\\w.-]+@[a-zA-Z_-]+?\\.[a-zA-Z]{2,3}$/.test(this.email)) {\n        this.isEmail = false;\n      } else this.isEmail = true;\n    },\n  },\n  data() {\n    return {\n      email: \"\",\n      isEmail: true,\n    };\n  },\n  beforeDestroy() {\n    this.closeMenu();\n  },\n};\n</script>\n<style lang=\"scss\">\n.font-size1 {\n  font-size: 13px;\n}\n.fg-margin {\n  margin: 0px !important;\n}\n.card-margin {\n  margin: 0px !important;\n  padding: 0px !important;\n}\n</style>\n"],"mappings":";;;;;AAwCA,SAAAA,IAAA,EAAAC,QAAA,EAAAC,MAAA;AAGA,OAAAC,WAAA;AAEA;EACAC,UAAA,GAAAC,WAAA;IACAL,IAAA,EAAAA;EAAA,GAAAM,eAAA,CAAAD,WAAA,EAEAJ,QAAA,CAAAM,IAAA,EAAAN,QAAA,GAAAK,eAAA,CAAAD,WAAA,EACAH,MAAA,CAAAK,IAAA,EAAAL,MAAA,GAAAG,WAAA,CACA;EACAG,OAAA;IACAC,YAAA,WAAAA,aAAA;MACAC,QAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MACAJ,QAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAG,MAAA;MACAL,QAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAG,MAAA;IACA;IACAC,OAAA,WAAAA,QAAA;MAAA,IAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,cAAAC,cAAA,CAAAC,OAAA;MACAH,OAAA,CAAAC,GAAA,cAAAG,GAAA;MAEAnB,WAAA,CACAoB,GAAA;QACAC,MAAA;UACAC,OAAA,OAAAH,GAAA;UACAI,QAAA,EAAAN,cAAA,CAAAC,OAAA;QACA;MACA,GACAM,IAAA,WAAAC,QAAA;QACAV,OAAA,CAAAC,GAAA,4BAAAS,QAAA,CAAAC,IAAA;QACA1B,WAAA,CACA2B,IAAA;UACAvB,IAAA,EAAAa,cAAA,CAAAC,OAAA;UACAU,KAAA,EAAAX,cAAA,CAAAC,OAAA;UACAW,QAAA,EAAAZ,cAAA,CAAAC,OAAA;UACAY,QAAA,EAAAb,cAAA,CAAAC,OAAA;UACAa,OAAA,EAAAd,cAAA,CAAAC,OAAA;QACA,GACAM,IAAA,WAAAC,QAAA;UACAV,OAAA,CAAAC,GAAA,CAAAS,QAAA,CAAAC,IAAA;UACAT,cAAA,CAAAe,KAAA;UACAlB,KAAA,CAAAmB,OAAA,CAAAC,IAAA;YAAA9B,IAAA;UAAA;QACA,GACA+B,KAAA,WAAAC,KAAA;UACArB,OAAA,CAAAqB,KAAA,CAAAA,KAAA;QACA;MACA,GACAD,KAAA,WAAAE,GAAA;QACAtB,OAAA,CAAAqB,KAAA,CAAAC,GAAA;MACA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,4CAAAC,IAAA,MAAAX,KAAA;QACA,KAAAY,OAAA;MACA,YAAAA,OAAA;IACA;EACA;EACAd,IAAA,WAAAA,KAAA;IACA;MACAE,KAAA;MACAY,OAAA;IACA;EACA;EACAC,aAAA,WAAAA,cAAA;IACA,KAAA9B,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}