{"ast":null,"code":"import _defineProperty from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _props$watch$computed;\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default (_props$watch$computed = {\n  props: [\"branchDetail\"],\n  watch: {},\n  computed: {},\n  data: function data() {\n    return _defineProperty({\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\"\n      },\n      chainCodeList: [],\n      companyList: [],\n      branchCode: \"\",\n      branchName: \"\",\n      isEmpty: false\n    }, \"chainCodeList\", [{\n      id: 1,\n      brand: \"ALL HOME\"\n    }, {\n      id: 2,\n      brand: \"METRO\"\n    }, {\n      id: 3,\n      brand: \"WDS\"\n    }]);\n  },\n  mounted: function mounted() {\n    this.fetchChainCode();\n  }\n}, _defineProperty(_props$watch$computed, \"watch\", {}), _defineProperty(_props$watch$computed, \"methods\", {\n  handleBlur: function handleBlur(inputName) {\n    console.log(\"Clicked outside the specific input box\", inputName);\n    if (this[inputName] === \"\") {\n      this[inputName] = this.branchDetail[inputName];\n    }\n  },\n  checking: function checking() {\n    this.branchCode === \"\" ? this.branchCode = this.branchDetail.branchCode : \"\";\n    this.branchName === \"\" ? this.branchName = this.branchDetail.branchName : \"\";\n  },\n  convertToUppercase: function convertToUppercase() {\n    this.branchCode = this.branchCode.toUpperCase();\n    this.branchName = this.branchName.toUpperCase();\n  },\n  submit: function submit() {\n    console.log(\"before\", this.branchCode, this.branchName);\n    this.checking();\n    console.log(\"after\", this.branchCode, this.branchName);\n  },\n  closeModal: function closeModal() {\n    this.branchName = \"\";\n    this.branchCode = \"\";\n  },\n  fetchChainCode: function fetchChainCode() {\n    var _this = this;\n    axiosClient.get(\"/fetchChainCodeAdmin\", {\n      params: {\n        company: this.company\n      }\n    }).then(function (response) {\n      _this.chainCodeList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n    axiosClient.get(\"/fetchCompany\").then(function (response) {\n      _this.companyList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n}), _props$watch$computed);","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","_props$watch$computed","props","watch","computed","data","_defineProperty","newBranch","branchCode","chainCode","branchName","company","chainCodeList","companyList","isEmpty","id","brand","mounted","fetchChainCode","handleBlur","inputName","console","log","branchDetail","checking","convertToUppercase","toUpperCase","submit","closeModal","_this","get","params","then","response","catch","error"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/ModalMaintenance/EditMaintenanceModal/EditBranchModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"editbranchmodal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"editbranchmodalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"editbranchmodalLabel\">\n            EDIT BRANCH\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"row\">\n              <div class=\"col-4 pull-left\">\n                <!-- <fg-input\n                  label=\"Chain Code\"\n                  :disabled=\"true\"\n                  v-model=\"branchDetail.chainCode\"\n                ></fg-input> -->\n                <fg-input label=\"Brand Name\">\n                  <el-select\n                    class=\"select-default\"\n                    size=\"large\"\n                    :placeholder=\"branchDetail.chainCode\"\n                    v-model=\"brandNames\"\n                    @blur=\"handleBlur('brandNames')\"\n                  >\n                    <el-option\n                      v-for=\"option in chainCodeList\"\n                      class=\"select-default\"\n                      :value=\"option.brand\"\n                      :label=\"option.brand\"\n                      :key=\"option.id\"\n                    >\n                    </el-option>\n                  </el-select>\n                </fg-input>\n              </div>\n              <div class=\"col-4\">\n                <fg-input\n                  label=\"Branch Code\"\n                  :placeholder=\"branchDetail.branchCode\"\n                  v-model.trim=\"branchCode\"\n                  @input=\"convertToUppercase\"\n                  @blur=\"handleBlur('branchCode')\"\n                ></fg-input>\n              </div>\n              <div class=\"col-4\">\n                <fg-input\n                  label=\"Branch Name\"\n                  :placeholder=\"branchDetail.branchName\"\n                  v-model.trim=\"branchName\"\n                  @input=\"convertToUppercase\"\n                  @blur=\"handleBlur('branchName')\"\n                ></fg-input>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            @click.prevent=\"closeModal()\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            :disabled=\"isEmpty\"\n            @click.prevent=\"submit\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  props: [\"branchDetail\"],\n  // props: [\"branchDetail\"],\n\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\",\n      },\n      chainCodeList: [],\n      companyList: [],\n      branchCode: \"\",\n      branchName: \"\",\n      isEmpty: false,\n      chainCodeList: [\n        {\n          id: 1,\n          brand: \"ALL HOME\",\n        },\n        {\n          id: 2,\n          brand: \"METRO\",\n        },\n        {\n          id: 3,\n          brand: \"WDS\",\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    // branchCode: {\n    //   handler() {\n    //     this.checking();\n    //   },\n    //   deep: true,\n    // },\n    // branchName: {\n    //   handler() {\n    //     this.checking();\n    //   },\n    //   deep: true,\n    // },\n  },\n  methods: {\n    handleBlur(inputName) {\n      console.log(\"Clicked outside the specific input box\", inputName);\n      if (this[inputName] === \"\") {\n        this[inputName] = this.branchDetail[inputName];\n      }\n    },\n    checking() {\n      // if (this.newBranchCode === \"\" || this.newBranchName === \"\") {\n      //   this.isEmpty = true;\n      // } else {\n      //   this.isEmpty = false;\n      // }\n\n      this.branchCode === \"\" ? (this.branchCode = this.branchDetail.branchCode) : \"\";\n      this.branchName === \"\" ? (this.branchName = this.branchDetail.branchName) : \"\";\n    },\n    convertToUppercase() {\n      this.branchCode = this.branchCode.toUpperCase();\n      this.branchName = this.branchName.toUpperCase();\n    },\n    submit() {\n      console.log(\"before\", this.branchCode, this.branchName);\n      this.checking();\n      console.log(\"after\", this.branchCode, this.branchName);\n      // axiosClient\n      //   .post(\"/addNewBranch\", {\n      //     branchCode: this.newBranch.branchCode,\n      //     chainCode: this.newBranch.chainCode,\n      //     branchName: this.newBranch.branchName,\n      //     userID: sessionStorage.getItem(\"UserID\"),\n      //     companyType: this.newBranch.company,\n      //     company: this.company,\n      //   })\n      //   .then((response) => {\n      //     // console.log(\"Response:\", response.data);\n      //     setTimeout(() => {\n      //       window.location.reload();\n      //     }, 3000); // Reload after 3 seconds\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n    closeModal() {\n      this.branchName = \"\";\n      this.branchCode = \"\";\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChainCodeAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AA0FA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA,gBAAAC,qBAAA;EACAC,KAAA;EAGAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA,OAAAC,eAAA;MACAC,SAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACAC,aAAA;MACAC,WAAA;MACAL,UAAA;MACAE,UAAA;MACAI,OAAA;IAAA,oBACA,CACA;MACAC,EAAA;MACAC,KAAA;IACA,GACA;MACAD,EAAA;MACAC,KAAA;IACA,GACA;MACAD,EAAA;MACAC,KAAA;IACA,EACA;EAEA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;AAAA,GAAAZ,eAAA,CAAAL,qBAAA,WACA,CAaA,IAAAK,eAAA,CAAAL,qBAAA,aACA;EACAkB,UAAA,WAAAA,WAAAC,SAAA;IACAC,OAAA,CAAAC,GAAA,2CAAAF,SAAA;IACA,SAAAA,SAAA;MACA,KAAAA,SAAA,SAAAG,YAAA,CAAAH,SAAA;IACA;EACA;EACAI,QAAA,WAAAA,SAAA;IAOA,KAAAhB,UAAA,eAAAA,UAAA,QAAAe,YAAA,CAAAf,UAAA;IACA,KAAAE,UAAA,eAAAA,UAAA,QAAAa,YAAA,CAAAb,UAAA;EACA;EACAe,kBAAA,WAAAA,mBAAA;IACA,KAAAjB,UAAA,QAAAA,UAAA,CAAAkB,WAAA;IACA,KAAAhB,UAAA,QAAAA,UAAA,CAAAgB,WAAA;EACA;EACAC,MAAA,WAAAA,OAAA;IACAN,OAAA,CAAAC,GAAA,gBAAAd,UAAA,OAAAE,UAAA;IACA,KAAAc,QAAA;IACAH,OAAA,CAAAC,GAAA,eAAAd,UAAA,OAAAE,UAAA;EAmBA;EACAkB,UAAA,WAAAA,WAAA;IACA,KAAAlB,UAAA;IACA,KAAAF,UAAA;EACA;EACAU,cAAA,WAAAA,eAAA;IAAA,IAAAW,KAAA;IACAlC,WAAA,CACAmC,GAAA;MACAC,MAAA;QACApB,OAAA,OAAAA;MACA;IACA,GACAqB,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAAjB,aAAA,GAAAqB,QAAA,CAAA5B,IAAA;IACA,GACA6B,KAAA,WAAAC,KAAA;MACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;IACA;IACAxC,WAAA,CACAmC,GAAA,kBACAE,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAAhB,WAAA,GAAAoB,QAAA,CAAA5B,IAAA;IACA,GACA6B,KAAA,WAAAC,KAAA;MACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;IACA;EACA;AACA,IAAAlC,qBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}