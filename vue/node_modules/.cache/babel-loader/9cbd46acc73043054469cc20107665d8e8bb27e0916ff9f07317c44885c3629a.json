{"ast":null,"code":"import _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport Vue from 'vue';\nimport PButton from '../../../../UIComponents/Button.vue';\nimport PPagination from '../../../../UIComponents/Pagination.vue';\nimport users from '../../Tables/users';\nimport axiosClient from '../../../../../axios';\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PButton: PButton,\n    PPagination: PPagination\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData: function pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData: function queriedData() {\n      var _this = this;\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      var result = this.tableData.filter(function (row) {\n        var isIncluded = false;\n        var _iterator = _createForOfIteratorHelper(_this.propsToSearch),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            var rowValue = row[key].toString();\n            if (rowValue.includes && rowValue.includes(_this.searchQuery)) {\n              isIncluded = true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: '',\n      propsToSearch: ['name', 'email', 'age'],\n      tableColumns: [{\n        prop: 'name',\n        label: 'User Name',\n        minWidth: 100\n      }, {\n        prop: 'action_type',\n        label: 'Action',\n        minWidth: 100\n      }, {\n        prop: 'table_affected',\n        label: 'Table Affected',\n        minWidth: 150\n      }, {\n        prop: 'creation_date',\n        label: 'Created Date',\n        minWidth: 100\n      }, {\n        prop: 'time',\n        label: 'Created Time',\n        minWidth: 100\n      }, {\n        prop: 'old_data',\n        label: 'Old Data',\n        minWidth: 200\n      }, {\n        prop: 'new_data',\n        label: 'New Data',\n        minWidth: 200\n      }],\n      tableData: users\n    };\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n      axiosClient.get(\"/fetchTransactionLogs\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\")\n        }\n      }).then(function (response) {\n        console.log(\"Pull Out Request\", response.data);\n        _this2.tableData = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Vue","PButton","PPagination","users","axiosClient","use","_Table","_TableColumn","_Select","_Option","components","mounted","fetchData","computed","pagedData","tableData","slice","from","to","queriedData","_this","searchQuery","pagination","total","length","result","filter","row","isIncluded","_iterator","_createForOfIteratorHelper","propsToSearch","_step","s","n","done","key","value","rowValue","toString","includes","err","e","f","highBound","perPage","currentPage","data","perPageOptions","tableColumns","prop","label","minWidth","methods","_this2","get","params","company","sessionStorage","getItem","then","response","console","log","catch","error"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/LogHistory.vue"],"sourcesContent":["<template>\n    <div>\n        <div class =\"row\">\n            <div class=\"col-lg-12\">\n                <fg-input class=\"input-md\"\n                    placeholder=\"Search\"\n                    addon-right-icon=\"nc-icon nc-zoom-split\">\n                </fg-input>\n            </div>\n        </div>\n        <div class=\"row col-sm-12 mt-2\">\n            <el-table class=\"table-striped\"\n                    :data=\"queriedData\"\n                    border\n                    style=\"width: 100%\">\n            <el-table-column v-for=\"column in tableColumns\"\n                            :key=\"column.label\"\n                            :min-width=\"column.minWidth\"\n                            :prop=\"column.prop\"\n                            :label=\"column.label\">\n            </el-table-column>\n            </el-table>\n        </div>\n        <div class=\"col-sm-6 pagination-info\">\n            <p class=\"category\">Showing {{from + 1}} to {{to}} of {{total}} entries</p>\n        </div>\n        <div class=\"col-sm-12 nav-center\">\n            <p-pagination class=\"pull-right\"\n                        v-model=\"pagination.currentPage\"\n                        :per-page=\"pagination.perPage\"\n                        :total=\"pagination.total\">\n            </p-pagination>\n        </div>\n    </div>\n</template>\n<script>\n    import Vue from 'vue'\n    import {Table, TableColumn, Select, Option} from 'element-ui'\n    import PButton from '../../../../UIComponents/Button.vue'\n    import PPagination from '../../../../UIComponents/Pagination.vue'\n    import users from '../../Tables/users'\n    import axiosClient from '../../../../../axios'\n\n    Vue.use(Table)\n    Vue.use(TableColumn)\n    Vue.use(Select)\n    Vue.use(Option)\n\n    export default{\n        components: {\n            PButton,\n            PPagination\n        },\n        mounted() {\n            this.fetchData();\n        },\n        computed: {\n            pagedData () {\n                return this.tableData.slice(this.from, this.to)\n            },\n        /***\n         * Searches through table data and returns a paginated array.\n         * Note that this should not be used for table with a lot of data as it might be slow!\n         * Do the search and the pagination on the server and display the data retrieved from server instead.\n         * @returns {computed.pagedData}\n         */\n            queriedData () {\n                if (!this.searchQuery) {\n                this.pagination.total = this.tableData.length\n                return this.pagedData\n                }\n                let result = this.tableData\n                .filter((row) => {\n                    let isIncluded = false\n                    for (let key of this.propsToSearch) {\n                    let rowValue = row[key].toString()\n                    if (rowValue.includes && rowValue.includes(this.searchQuery)) {\n                        isIncluded = true\n                    }\n                    }\n                    return isIncluded\n                })\n                this.pagination.total = result.length\n                return result.slice(this.from, this.to)\n            },\n            to () {\n                let highBound = this.from + this.pagination.perPage\n                if (this.total < highBound) {\n                highBound = this.total\n                }\n                return highBound\n            },\n            from () {\n                return this.pagination.perPage * (this.pagination.currentPage - 1)\n            },\n            total () {\n                this.pagination.total = this.tableData.length\n                return this.tableData.length\n            }\n        },\n        data () {\n            return {\n                pagination: {\n                perPage: 5,\n                currentPage: 1,\n                perPageOptions: [5, 10, 25, 50],\n                total: 0\n                },\n                searchQuery: '',\n                propsToSearch: ['name', 'email', 'age'],\n                tableColumns: [\n                {\n                    prop: 'name',\n                    label: 'User Name',\n                    minWidth: 100\n                },\n                {\n                    prop: 'action_type',\n                    label: 'Action',\n                    minWidth: 100\n                },\n                {\n                    prop: 'table_affected',\n                    label: 'Table Affected',\n                    minWidth: 150\n                },\n                {\n                    prop: 'creation_date',\n                    label: 'Created Date',\n                    minWidth: 100\n                },\n                {\n                    prop: 'time',\n                    label: 'Created Time',\n                    minWidth: 100\n                },\n                {\n                    prop: 'old_data',\n                    label: 'Old Data',\n                    minWidth: 200\n                },\n                {\n                    prop: 'new_data',\n                    label: 'New Data',\n                    minWidth: 200\n                },\n                ],\n                tableData: users\n            }\n        },\n        methods: {\n            fetchData(){\n                axiosClient\n                .get(\"/fetchTransactionLogs\", {\n                params: {\n                    company: sessionStorage.getItem(\"Company\"),\n                },\n                })\n                .then((response) => {\n                console.log(\"Pull Out Request\", response.data);\n                this.tableData = response.data;\n                })\n                .catch((error) => {\n                console.error(error);\n                });\n            },\n        }\n    }\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}