{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Button2 from \"element-ui/lib/theme-chalk/button.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Button from \"element-ui/lib/button\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from 'src/components/UIComponents';\nimport PProgress from 'src/components/UIComponents/Progress.vue';\nimport PSwitch from 'src/components/UIComponents/Switch.vue';\nimport Vue from 'vue';\nimport NotificationTemplate from '../Components/NotificationTemplate';\nimport Swal from 'sweetalert2';\nimport axiosClient from '../../../../axios';\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, _Button.name, _Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _components),\n  data: function data() {\n    return {\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItem: [],\n      tableData: [{\n        id: 1,\n        name: 'Dakota Rice',\n        salary: '$36.738',\n        country: 'Niger',\n        city: 'Oud-Turnhout'\n      }, {\n        id: 2,\n        name: 'Minerva Hooper',\n        salary: '$23,789',\n        country: 'Curaçao',\n        city: 'Sinaai-Waas'\n      }, {\n        id: 3,\n        name: 'Sage Rodriguez',\n        salary: '$56,142',\n        country: 'Netherlands',\n        city: 'Baileux'\n      }, {\n        id: 4,\n        name: 'Philip Chaney',\n        salary: '$38,735',\n        country: 'Korea, South',\n        city: 'Overland Park'\n      }, {\n        id: 5,\n        name: 'Doris Greene',\n        salary: '$63,542',\n        country: 'Malawi',\n        city: 'Feldkirchen in Kärnten'\n      }],\n      newListBoxLabel: [{\n        id: 1,\n        boxLabel: \"Box Label One\"\n      }, {\n        id: 2,\n        boxLabel: \"Box Label Two\"\n      }, {\n        id: 3,\n        boxLabel: \"Box Label Three\"\n      }, {\n        id: 4,\n        boxLabel: \"Box Label Four\"\n      }],\n      transactionTypeList: [{\n        value: 'CPO - BranchDisposal',\n        label: 'Concess Pull-Out Item Disposal'\n      }, {\n        value: 'CPO - Store',\n        label: 'Concess Pull-Out - Store'\n      }, {\n        value: 'CPO - Warehouse',\n        label: 'Concess Pull-Out - Warehouse'\n      }, {\n        value: 'CPO - Warehouse(DC)',\n        label: 'Concess Direct Pull-Out'\n      }],\n      newBoxLabel: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: 'Success Add Box'\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this = this;\n      axiosClient.get('/fetchCompany').then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this2 = this;\n      axiosClient.get('/fetchChain', {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this2.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainName: function fetchChainName() {\n      var _this3 = this;\n      axiosClient.get('/fetchChainName', {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this3.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    addItem: function addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem: function saveItem(label) {\n      this.isItem = false;\n      this.isAddItem = true;\n      console.log(this.newTransaction.items.length);\n      var tempItem = {\n        id: this.newTransaction.items.length + 1,\n        item: \"\",\n        quantity: 1,\n        boxLabel: label\n      };\n      this.newTransaction.items.push(tempItem);\n      this.newItem = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      console.log(this.newListBoxLabel);\n    },\n    cancelItem: function cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.newItem = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      var tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel\n      };\n      var tempItem = {\n        id: this.newTransaction.boxLabels.length + 1,\n        item: \"\"\n      };\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItem.push(tempItem);\n      console.log(\"Console:\", this.newItem);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    updateProfile: function updateProfile() {\n      console.log(\"company\", this.newTransaction.company);\n      alert('Your data: ' + JSON.stringify(this.newTransaction));\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Button","_Option","_Select","data","isBoxLabel","isItem","isAddItem","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItem","tableData","id","salary","country","city","newListBoxLabel","boxLabel","transactionTypeList","value","label","newBoxLabel","notifications","topCenter","modals","classic","notice","mini","mounted","fetchCompany","methods","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","props","customValue","_this","get","then","response","console","log","catch","error","fetchChainCode","_this2","params","fetchChainName","_this3","addItem","saveItem","length","tempItem","item","quantity","push","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","updateProfile","alert","JSON","stringify"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"row\">\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Company\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Company\"\n                            v-model=\"newTransaction.company\"\n                            @change=\"fetchChainCode\">\n                        <el-option v-for=\"option in companyList\"\n                            class=\"select-default\"\n                            :value=\"option.shortName\"\n                            :label=\"option.shortName\"\n                            :key=\"option.id\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Chain Code\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Chain Code\"\n                            v-model=\"newTransaction.chainCode\"\n                            @change=\"fetchChainName\">\n                        <el-option v-for=\"option in chainCodeList\"\n                            class=\"select-default\"\n                            :value=\"option.chainCode\"\n                            :label=\"option.chainCode\"\n                            :key=\"option.chainCode\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Branch Name\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Branch Name\"\n                            v-model=\"newTransaction.branchName\">\n                        <el-option v-for=\"option in branchNameList\"\n                            class=\"select-default\"\n                            :value=\"option.branchName\"\n                            :label=\"option.branchName\"\n                            :key=\"option.branchName\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Transaction Type\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Transaction Type\"\n                            v-model=\"newTransaction.transactionType\">\n                        <el-option v-for=\"option in transactionTypeList\"\n                            class=\"select-default\"\n                            :value=\"option.value\"\n                            :label=\"option.label\"\n                            :key=\"option.label\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n            </div>\n            <div class=\"col-sm-12\">\n                <card type=\"plain\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <p-button type=\"default\" link class=\"font-weight-bold\" @click.prevent=\"addBoxLabel()\">\n                                <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                            </p-button>\n                            <p-button type=\"default\" link class=\"font-weight-bold\">\n                                <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                            </p-button>\n                        </div>\n                        <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                            <div class=\"col-sm-12\">\n                                <fg-input placeholder=\"Box Label\" v-model=\"newBoxLabel\" class=\"w-100\"></fg-input>\n                            </div>\n                            <div class=\"col-sm-2 mt-n3\">\n                                <p-button type=\"default\" size=\"sm\" outline class=\"font-weight-bold\" @click.prevent=\"saveBoxLabel()\">\n                                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                                </p-button>\n                                <p-button type=\"default\" size=\"sm\" outline class=\"font-weight-bold\" @click.prevent=\"cancelBoxLabel()\">\n                                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                                </p-button>\n                            </div>\n                        </div>\n                    </div>\n                <collapse>\n                    <collapse-item v-for=\"boxLabel in newTransaction.boxLabels\" :key=\"boxLabel.id\" :title=\"boxLabel.boxLabel\"  name=\"1\" class=\"font-weight-bold\">\n                      \n\n                      <div class=\"row\" v-show=\"isAddItem\">\n                        <button class=\"btn btn-transparent text-left\" @click.prevent=\"addItem(boxLabel.id)\"><i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item</button>\n                      </div>\n                      <div class=\"row\" v-for=\"newItem in newItem\" >\n                        <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id === isItem\">\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ isItem }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div>\n                      </div>\n\n                    <div class=\"row\">\n                      <table class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                            <th scope=\"col\" class=\"nowrap\">Description</th>\n                            <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                            <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                            <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr v-show=\"boxLabel.boxLabel == item.boxLabel\" v-for=\"item in newTransaction.items\" :key=\"item.id\">\n                            <th scope=\"row\" class=\"px-3\">{{item.id}}</th>\n                            <td class=\"cell\"><input type=\"text\" @blur=\"handleItem(item.id)\" v-model=\"item.item\" class=\"table-input-box\"></td>\n                            <td class=\"cell\"><input type=\"text\" @blur=\"handleCategory(item.id)\" v-model=\"item.category\" class=\"table-input-box\"></td>\n                            <td class=\"cell\"><input type=\"text\" @blur=\"handleQuantity(item.id)\" v-model=\"item.quantity\" class=\"table-input-box\"></td>\n                            <td class=\"cell\"><input type=\"text\" @blur=\"handleLabel(item.id)\" v-model=\"item.boxLabel\" class=\"table-input-box\"></td>\n                          </tr>\n                        </tbody>\n                      </table>          \n                    </div>\n\n                    </collapse-item>\n                </collapse>\n                </card>\n            </div>\n\n            <div class=\"text-center\">\n            <button type=\"submit\" class=\"btn btn-info btn-fill btn-wd\" @click.prevent=\"updateProfile\">\n                Submit\n            </button>\n            </div>\n            <div class=\"clearfix\"></div>\n        </form>\n    </div>\n  </div>\n\n</template>\n<script>\n  import {Collapse, CollapseItem, Tabs, TabPane, Card} from 'src/components/UIComponents'\n  import {DatePicker, TimeSelect, Slider, Tag, Input, Button, Select, Option} from 'element-ui'\n  import PProgress from 'src/components/UIComponents/Progress.vue'\n  import PSwitch from 'src/components/UIComponents/Switch.vue'\n  import Vue from 'vue'\n  import NotificationTemplate from '../Components/NotificationTemplate'\n  import Swal from 'sweetalert2';\n  import {Table, TableColumn} from 'element-ui'\n  import axiosClient from '../../../../axios'\n\n  Vue.use(Table)\n  Vue.use(TableColumn)\n  export default {\n    components: {\n      [DatePicker.name]: DatePicker,\n      [TimeSelect.name]: TimeSelect,\n      [Slider.name]: Slider,\n      [Tag.name]: Tag,\n      [Input.name]: Input,\n      [Button.name]: Button,\n      [Option.name]: Option,\n      [Select.name]: Select,\n      PSwitch,\n      PProgress,\n      TabPane,\n      Tabs,\n      CollapseItem,\n      Collapse,\n      Card,\n      NotificationTemplate\n    },\n    data () {\n      return {\n        isBoxLabel: false,\n        isItem: false,\n        isAddItem: true,\n        showItemInput: \"\",\n        companyList: [],\n        chainCodeList: [],\n        branchNameList: [],\n        newTransaction: { //input variable\n            company: \"\",\n            chainCode: \"\",\n            branchName: \"\",\n            transactionType: \"\",\n            boxLabels: [], //list of inputted box label\n            items: [] //list of inputted item\n        },\n        newItem: [],\n        tableData: [{\n          id: 1,\n          name: 'Dakota Rice',\n          salary: '$36.738',\n          country: 'Niger',\n          city: 'Oud-Turnhout'\n        },\n        {\n          id: 2,\n          name: 'Minerva Hooper',\n          salary: '$23,789',\n          country: 'Curaçao',\n          city: 'Sinaai-Waas'\n        },\n        {\n          id: 3,\n          name: 'Sage Rodriguez',\n          salary: '$56,142',\n          country: 'Netherlands',\n          city: 'Baileux'\n        },\n        {\n          id: 4,\n          name: 'Philip Chaney',\n          salary: '$38,735',\n          country: 'Korea, South',\n          city: 'Overland Park'\n        },\n        {\n          id: 5,\n          name: 'Doris Greene',\n          salary: '$63,542',\n          country: 'Malawi',\n          city: 'Feldkirchen in Kärnten'\n        }],\n        newListBoxLabel:[{\n            id: 1,\n            boxLabel: \"Box Label One\"\n        },\n        {\n            id: 2,\n            boxLabel: \"Box Label Two\"\n        },\n        {\n            id: 3,\n            boxLabel: \"Box Label Three\"\n        },\n        {\n            id: 4,\n            boxLabel: \"Box Label Four\"\n        },\n      ],\n\n          transactionTypeList: [{value: 'CPO - BranchDisposal', label: 'Concess Pull-Out Item Disposal'},\n            {value: 'CPO - Store', label: 'Concess Pull-Out - Store'},\n            {value: 'CPO - Warehouse', label: 'Concess Pull-Out - Warehouse'},\n            {value: 'CPO - Warehouse(DC)', label: 'Concess Direct Pull-Out'}],\n        newBoxLabel: \"\",\n        // newItem: \"\",\n        notifications: {\n          topCenter: false\n        },\n        modals: {\n          classic: false,\n          notice: false,\n          mini: false\n        }\n      }\n    },\n    mounted() {\n      this.fetchCompany();\n    },\n    methods: {\n\n      notifyVue(verticalAlign, horizontalAlign) {\n        const color = Math.floor((Math.random() * 4) + 1)\n        this.$notify(\n          {\n            component: NotificationTemplate,\n            // icon: 'nc-icon nc-app',\n            horizontalAlign: horizontalAlign,\n            verticalAlign: verticalAlign,\n            type: \"success\",\n            props: {\n              customValue: 'Success Add Box',\n            }\n          })\n      },\n      fetchCompany(){\n        axiosClient.get('/fetchCompany')\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        }).catch((error) => {\n          console.error(error);\n        });\n      },\n      fetchChainCode(){\n        axiosClient.get('/fetchChain', {\n          params: {\n            company: this.newTransaction.company,\n          }\n        })\n          .then((response) => {\n            console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          }).catch((error) => {\n            console.error(error);\n          });\n      },\n      fetchChainName(){\n        axiosClient.get('/fetchChainName', {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          }\n        })\n          .then((response) => {\n            console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          }).catch((error) => {\n            console.error(error);\n          })\n      },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\",this.showItemInput);\n\n    },\n    saveItem(label) {\n      this.isItem = false;\n      this.isAddItem = true\n      console.log(this.newTransaction.items.length);\n\n      let tempItem = {\n        id: this.newTransaction.items.length+1,\n        // item: this.newItem,\n        item: \"\",\n        quantity: 1,\n        boxLabel: label,\n      }\n\n\n      this.newTransaction.items.push(tempItem);\n      this.newItem = \"\";\n      this.notifyVue(\"bottom\",\"right\");\n      console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true\n      this.newItem = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length+1,\n        boxLabel: this.newBoxLabel,\n      }\n\n      let tempItem = {\n        id: this.newTransaction.boxLabels.length+1,\n        item: \"\",\n      }\n\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItem.push(tempItem);\n      console.log(\"Console:\",this.newItem);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\",\"right\");\n      // console.log(\"Console:\",this.newItem);\n    },\n    cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n      updateProfile () {\n        console.log(\"company\", this.newTransaction.company);\n        alert('Your data: ' + JSON.stringify(this.newTransaction))\n      },\n    }\n  }\n\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n      background-color: transparent;\n      border: none;\n      color: #000000;\n    }\n\n    .btn-transparent:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n      color: #ffffff;\n    }\n\n    .table-font-size{\n      font-size: 14px;\n    }\n\n    .table-input-box{\n      width: 100%;\n      height: 100%;\n      box-sizing: border-box;\n      padding: 14px;\n      border: 1px solid transparent;\n      transition: border-color 0.3s ease-in-out;\n      background-color: transparent;\n    }\n    td {\n      display: table-cell !important;\n      padding: 0px !important;\n      /* background-color: #111111 !important; */\n    }\n    /* .th-itemcode{\n      \n    } */\n  .table-input-box:focus {\n    border-color: blue;\n    border-width: 1px;\n    outline: none;\n  }\n  table {\n    border-collapse: collapse !important;\n  }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}