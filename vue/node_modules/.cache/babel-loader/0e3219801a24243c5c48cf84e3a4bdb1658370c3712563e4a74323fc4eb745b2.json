{"ast":null,"code":"import _toConsumableArray from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport axiosClient from \"../../../../axios\";\nimport PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\nexport default {\n  components: {\n    PromoRequestBranchApproveConfirmationModal: PromoRequestBranchApproveConfirmationModal\n  },\n  watch: {\n    dateEnd: \"validateApprove\",\n    promoRequest: {\n      handler: function handler() {\n        this.promoDetailsTransfer();\n      },\n      deep: true\n    }\n  },\n  props: [\"promoData\", \"promoDetails\", \"promoRequest\"],\n  computed: {},\n  data: function data() {\n    return {\n      dateEnd: null,\n      disableApprove: true,\n      checkedBranch: [],\n      rejectMode: false\n    };\n  },\n  mounted: function mounted() {\n    console.log(\"DSAFSAF\");\n  },\n  methods: {\n    approveRequest: function approveRequest(confirm) {\n      var _this = this;\n      if (confirm) axiosClient.post(\"/updateUserBranchByRequest\", {\n        userID: this.promoData.id,\n        dateEnd: this.dateEnd\n      }).then(function (response) {\n        _this.$emit(\"fetchUsers\");\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    rejectBranch: function rejectBranch() {\n      var _this2 = this;\n      var selectedBranchReject = this.checkedBranch.map(function (i) {\n        return _this2.promoRequest[i];\n      });\n      selectedBranchReject.forEach(function (reject) {\n        axiosClient.post(\"/deleteUserBranch\", {\n          userID: _this2.promoData.id,\n          userType: \"Agent\",\n          company: reject.company,\n          chainCode: reject.chainCode,\n          branchName: reject.branchName\n        }).then(function (response) {\n          _this2.$emit(\"fetchPromoRequest\", _this2.promoData.id);\n          if (_this2.promoRequest.length <= 0) {\n            window.location.reload();\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      });\n      console.log(\"PR Length: \", this.promoRequest.length, this.promoRequest);\n      if (this.promoRequest.length <= 0) {\n        window.location.reload();\n      }\n      this.$emit(\"fetchUsers\");\n      this.rejectMode = false;\n      this.checkedBranch = [];\n    },\n    promoDetailsTransfer: function promoDetailsTransfer() {\n      this.tempPromoRequest = _toConsumableArray(this.promoRequest);\n      console.log(this.tempPromoRequest);\n    },\n    validateApprove: function validateApprove() {\n      console.log(this.dateEnd);\n      if (this.dateEnd) this.disableApprove = false;else this.disableApprove = true;\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","PromoRequestBranchApproveConfirmationModal","components","watch","dateEnd","promoRequest","handler","promoDetailsTransfer","deep","props","computed","data","disableApprove","checkedBranch","rejectMode","mounted","console","log","methods","approveRequest","confirm","_this","post","userID","promoData","id","then","response","$emit","catch","error","rejectBranch","_this2","selectedBranchReject","map","i","forEach","reject","userType","company","chainCode","branchName","length","window","location","reload","tempPromoRequest","_toConsumableArray","validateApprove"],"sources":["src/components/Dashboard/Views/PullOut/PromoRequestBranchModal.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"promoRequestBranchModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"promoRequestBranchModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header py-3\">\n            <span style=\"font-size: 16px\"\n              >Promo Name:\n              <b style=\"font-size: 16px; text-transform: uppercase\">{{\n                promoData.name\n              }}</b></span\n            ><br />\n            <span\n              >Email: <b>{{ promoData.email }}</b></span\n            >\n          </div>\n          <div class=\"modal-body row pt-2 pb-3 px-4\">\n            <span class=\"text-center mb-2\" style=\"font-size: 13px\">\n              <b>{{ promoDetails.length }} Assigned Branch:</b>\n            </span>\n            <div class=\"d-flex\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"details in promoDetails\">\n              <span class=\"col-3\">{{ details.company }}</span>\n              <span class=\"col-3\">{{ details.chainCode }}</span>\n              <span class=\"col-6\">{{ details.branchName }}</span>\n            </div>\n            <div class=\"d-flex mt-3 text-center\">\n              <span class=\"col-12 mb-2\" style=\"font-size: 13px\"\n                ><b>This Promo wants to Update the Assigned Branch to: </b></span\n              >\n            </div>\n            <div class=\"d-flex mt-1\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"(request, key) in promoRequest\">\n              <span class=\"col-3\">{{ request.company }}</span>\n              <span class=\"col-3\">{{ request.chainCode }}</span>\n              <span class=\"col-6\">{{ request.branchName }}</span>\n              <input\n                v-show=\"rejectMode\"\n                class=\"align-self-start\"\n                type=\"checkbox\"\n                v-model=\"checkedBranch\"\n                :value=\"key\"\n              />\n            </div>\n            <div class=\"mt-3\">\n              <fg-input label=\"Date End Promo\" class=\"col-12 text-center mb-0\"\n                ><el-date-picker v-model=\"dateEnd\" type=\"date\" placeholder=\"Select a Day\">\n                </el-date-picker\n              ></fg-input>\n            </div>\n          </div>\n          <div class=\"modal-footer d-flex justify-content-center\">\n            <button v-show=\"!rejectMode\" class=\"btn btn-default\" data-bs-dismiss=\"modal\">\n              Cancel\n            </button>\n            <button\n              v-show=\"rejectMode\"\n              class=\"btn btn-default\"\n              @click=\"(rejectMode = false), (checkedBranch = [])\"\n            >\n              Back\n            </button>\n            <button\n              v-show=\"!rejectMode\"\n              class=\"btn btn-danger\"\n              @click=\"rejectMode = true\"\n            >\n              Reject\n            </button>\n            <button v-show=\"rejectMode\" class=\"btn btn-danger\" @click=\"rejectBranch\">\n              Reject Selected Branch\n            </button>\n            <button\n              v-show=\"!rejectMode\"\n              class=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#requestBranchApproveConfirmation\"\n              @click=\"approveRequest()\"\n              :disabled=\"disableApprove\"\n            >\n              Approve this Request\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <PromoRequestBranchApproveConfirmationModal\n      :promoData=\"promoData\"\n      @confirm=\"approveRequest($event)\"\n    ></PromoRequestBranchApproveConfirmationModal>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\nimport PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\n\nexport default {\n  components: {\n    PromoRequestBranchApproveConfirmationModal,\n  },\n  watch: {\n    dateEnd: \"validateApprove\",\n    promoRequest: {\n      handler() {\n        this.promoDetailsTransfer();\n      },\n      deep: true,\n    },\n  },\n  props: [\"promoData\", \"promoDetails\", \"promoRequest\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      dateEnd: null,\n      disableApprove: true,\n      checkedBranch: [],\n      rejectMode: false,\n    };\n  },\n  mounted() {\n    console.log(\"DSAFSAF\");\n  },\n  methods: {\n    approveRequest(confirm) {\n      if (confirm)\n        axiosClient\n          .post(\"/updateUserBranchByRequest\", {\n            userID: this.promoData.id,\n            dateEnd: this.dateEnd,\n          })\n          .then((response) => {\n            this.$emit(\"fetchUsers\");\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n    },\n    rejectBranch() {\n      let selectedBranchReject = this.checkedBranch.map((i) => this.promoRequest[i]);\n      selectedBranchReject.forEach((reject) => {\n        axiosClient\n          .post(\"/deleteUserBranch\", {\n            userID: this.promoData.id,\n            userType: \"Agent\",\n            company: reject.company,\n            chainCode: reject.chainCode,\n            branchName: reject.branchName,\n          })\n          .then((response) => {\n            this.$emit(\"fetchPromoRequest\", this.promoData.id);\n            if (this.promoRequest.length <= 0) {\n              window.location.reload();\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      });\n\n      console.log(\"PR Length: \", this.promoRequest.length, this.promoRequest);\n      if (this.promoRequest.length <= 0) {\n        window.location.reload();\n      }\n      this.$emit(\"fetchUsers\");\n\n      this.rejectMode = false;\n      this.checkedBranch = [];\n    },\n    promoDetailsTransfer() {\n      this.tempPromoRequest = [...this.promoRequest];\n      console.log(this.tempPromoRequest);\n    },\n    validateApprove() {\n      console.log(this.dateEnd);\n      if (this.dateEnd) this.disableApprove = false;\n      else this.disableApprove = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.tr_num {\n  font-size: 35px;\n  font-weight: 700;\n}\n.labelRows {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  // margin-bottom: 5px;\n}\n</style>\n"],"mappings":";;;;AA6GA,OAAAA,WAAA;AACA,OAAAC,0CAAA;AAEA;EACAC,UAAA;IACAD,0CAAA,EAAAA;EACA;EACAE,KAAA;IACAC,OAAA;IACAC,YAAA;MACAC,OAAA,WAAAA,QAAA;QACA,KAAAC,oBAAA;MACA;MACAC,IAAA;IACA;EACA;EACAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAP,OAAA;MACAQ,cAAA;MACAC,aAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAAC,OAAA;MAAA,IAAAC,KAAA;MACA,IAAAD,OAAA,EACApB,WAAA,CACAsB,IAAA;QACAC,MAAA,OAAAC,SAAA,CAAAC,EAAA;QACArB,OAAA,OAAAA;MACA,GACAsB,IAAA,WAAAC,QAAA;QACAN,KAAA,CAAAO,KAAA;MACA,GACAC,KAAA,WAAAC,KAAA;QACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;MACA;IACA;IACAC,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,oBAAA,QAAApB,aAAA,CAAAqB,GAAA,WAAAC,CAAA;QAAA,OAAAH,MAAA,CAAA3B,YAAA,CAAA8B,CAAA;MAAA;MACAF,oBAAA,CAAAG,OAAA,WAAAC,MAAA;QACArC,WAAA,CACAsB,IAAA;UACAC,MAAA,EAAAS,MAAA,CAAAR,SAAA,CAAAC,EAAA;UACAa,QAAA;UACAC,OAAA,EAAAF,MAAA,CAAAE,OAAA;UACAC,SAAA,EAAAH,MAAA,CAAAG,SAAA;UACAC,UAAA,EAAAJ,MAAA,CAAAI;QACA,GACAf,IAAA,WAAAC,QAAA;UACAK,MAAA,CAAAJ,KAAA,sBAAAI,MAAA,CAAAR,SAAA,CAAAC,EAAA;UACA,IAAAO,MAAA,CAAA3B,YAAA,CAAAqC,MAAA;YACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;UACA;QACA,GACAhB,KAAA,WAAAC,KAAA;UACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;QACA;MACA;MAEAd,OAAA,CAAAC,GAAA,qBAAAZ,YAAA,CAAAqC,MAAA,OAAArC,YAAA;MACA,SAAAA,YAAA,CAAAqC,MAAA;QACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA;MACA,KAAAjB,KAAA;MAEA,KAAAd,UAAA;MACA,KAAAD,aAAA;IACA;IACAN,oBAAA,WAAAA,qBAAA;MACA,KAAAuC,gBAAA,GAAAC,kBAAA,MAAA1C,YAAA;MACAW,OAAA,CAAAC,GAAA,MAAA6B,gBAAA;IACA;IACAE,eAAA,WAAAA,gBAAA;MACAhC,OAAA,CAAAC,GAAA,MAAAb,OAAA;MACA,SAAAA,OAAA,OAAAQ,cAAA,cACA,KAAAA,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}