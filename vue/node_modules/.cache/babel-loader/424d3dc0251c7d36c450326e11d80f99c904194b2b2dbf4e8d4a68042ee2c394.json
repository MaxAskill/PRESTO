{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  props: [\"brandDetail\"],\n  watch: {},\n  computed: {},\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\"\n      },\n      chainCodeList: [],\n      companyList: [],\n      brandNames: \"\",\n      isEmpty: false\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {},\n  methods: {\n    handleBlur(inputName) {\n      console.log(\"Clicked outside the specific input box\", inputName);\n      if (this[inputName] === \"\") {\n        this[inputName] = this.brandDetail[inputName];\n      }\n    },\n    checking() {\n      this.brandNames === \"\" ? this.brandNames = this.brandDetail.brandNames : \"\";\n    },\n    convertToUppercase() {\n      this.brandNames = this.brandNames.toUpperCase();\n    },\n    submit() {\n      console.log(\"before\", this.brandNames);\n      this.checking();\n      console.log(\"after\", this.brandNames);\n    },\n    closeModal() {\n      this.brandNames = \"\";\n    },\n    fetchChainCode() {\n      axiosClient.get(\"/fetchChainCodeAdmin\", {\n        params: {\n          company: this.company\n        }\n      }).then(response => {\n        this.chainCodeList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n      axiosClient.get(\"/fetchCompany\").then(response => {\n        this.companyList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","props","watch","computed","data","newBranch","branchCode","chainCode","branchName","company","chainCodeList","companyList","brandNames","isEmpty","mounted","fetchChainCode","methods","handleBlur","inputName","console","log","brandDetail","checking","convertToUppercase","toUpperCase","submit","closeModal","get","params","then","response","catch","error"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/ModalMaintenance/EditMaintenanceModal/EditBrandModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"editbrandmodal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"editbrandmodalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"editbrandmodal\">\n            EDIT BRAND\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"row\">\n              <div class=\"mx-auto col-12\">\n                <fg-input\n                  label=\"Brand Name\"\n                  :placeholder=\"brandDetail.brandNames\"\n                  v-model.trim=\"brandNames\"\n                  @input=\"convertToUppercase\"\n                  @blur=\"handleBlur('brandNames')\"\n                ></fg-input>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            @click.prevent=\"closeModal()\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            :disabled=\"isEmpty\"\n            @click.prevent=\"submit\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  props: [\"brandDetail\"],\n\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\",\n      },\n      chainCodeList: [],\n      companyList: [],\n      brandNames: \"\",\n      isEmpty: false,\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    // brandNames: {\n    //   handler() {\n    //     this.checking();\n    //   },\n    //   deep: true,\n    // },\n  },\n  methods: {\n    handleBlur(inputName) {\n      console.log(\"Clicked outside the specific input box\", inputName);\n      if (this[inputName] === \"\") {\n        this[inputName] = this.brandDetail[inputName];\n      }\n    },\n    checking() {\n      this.brandNames === \"\" ? (this.brandNames = this.brandDetail.brandNames) : \"\";\n    },\n    convertToUppercase() {\n      this.brandNames = this.brandNames.toUpperCase();\n    },\n    submit() {\n      console.log(\"before\", this.brandNames);\n      this.checking();\n      console.log(\"after\", this.brandNames);\n      // axiosClient\n      //   .post(\"/addNewBranch\", {\n      //     branchCode: this.newBranch.branchCode,\n      //     chainCode: this.newBranch.chainCode,\n      //     branchName: this.newBranch.branchName,\n      //     userID: sessionStorage.getItem(\"UserID\"),\n      //     companyType: this.newBranch.company,\n      //     company: this.company,\n      //   })\n      //   .then((response) => {\n      //     // console.log(\"Response:\", response.data);\n      //     setTimeout(() => {\n      //       window.location.reload();\n      //     }, 3000); // Reload after 3 seconds\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n    closeModal() {\n      this.brandNames = \"\";\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChainCodeAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;AAwDA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA;EACAC,KAAA;EAEAC,KAAA;EACAC,QAAA,GAOA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACAC,aAAA;MACAC,WAAA;MACAC,UAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAb,KAAA,GAOA;EACAc,OAAA;IACAC,WAAAC,SAAA;MACAC,OAAA,CAAAC,GAAA,2CAAAF,SAAA;MACA,SAAAA,SAAA;QACA,KAAAA,SAAA,SAAAG,WAAA,CAAAH,SAAA;MACA;IACA;IACAI,SAAA;MACA,KAAAV,UAAA,eAAAA,UAAA,QAAAS,WAAA,CAAAT,UAAA;IACA;IACAW,mBAAA;MACA,KAAAX,UAAA,QAAAA,UAAA,CAAAY,WAAA;IACA;IACAC,OAAA;MACAN,OAAA,CAAAC,GAAA,gBAAAR,UAAA;MACA,KAAAU,QAAA;MACAH,OAAA,CAAAC,GAAA,eAAAR,UAAA;IAmBA;IACAc,WAAA;MACA,KAAAd,UAAA;IACA;IACAG,eAAA;MACApB,WAAA,CACAgC,GAAA;QACAC,MAAA;UACAnB,OAAA,OAAAA;QACA;MACA,GACAoB,IAAA,CAAAC,QAAA;QACA,KAAApB,aAAA,GAAAoB,QAAA,CAAA1B,IAAA;MACA,GACA2B,KAAA,CAAAC,KAAA;QACAb,OAAA,CAAAa,KAAA,CAAAA,KAAA;MACA;MACArC,WAAA,CACAgC,GAAA,kBACAE,IAAA,CAAAC,QAAA;QACA,KAAAnB,WAAA,GAAAmB,QAAA,CAAA1B,IAAA;MACA,GACA2B,KAAA,CAAAC,KAAA;QACAb,OAAA,CAAAa,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}