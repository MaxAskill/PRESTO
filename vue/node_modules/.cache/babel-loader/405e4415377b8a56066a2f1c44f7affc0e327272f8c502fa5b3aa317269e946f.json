{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../axios\";\nimport NotificationTemplate from \"../../../Components/Notification/NotificationSuccessfulRename.vue\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  props: [\"transferredData\", \"itemData\"],\n  components: {\n    NotificationTemplate: NotificationTemplate\n  },\n  mounted: function mounted() {},\n  watch: {\n    transferredData: function transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    }\n  },\n  computed: {\n    transfer: function transfer() {\n      return this.itemData;\n    }\n  },\n  data: function data() {\n    return {\n      tableColumns: [{\n        prop: \"brand\",\n        label: \"Brand\",\n        minWidth: 200\n      }, {\n        prop: \"boxLabel\",\n        label: \"Box Label\",\n        minWidth: 250\n      }, {\n        prop: \"boxNumber\",\n        label: \"Box Number\",\n        minWidth: 125\n      }, {\n        prop: \"itemCode\",\n        label: \"Item Code\",\n        minWidth: 175\n      }, {\n        prop: \"quantity\",\n        label: \"Quantity\",\n        minWidth: 100\n      }],\n      itemsData: []\n    };\n  },\n  methods: {\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\"\n        }\n      });\n    },\n    handleEdit: function handleEdit(index, row) {\n      alert(\"Your want to edit \".concat(row.id));\n    },\n    handleDelete: function handleDelete(index, row) {\n      var _this = this;\n      var indexToDelete = this.itemData.findIndex(function (tableRow) {\n        return tableRow.id === row.id;\n      });\n      console.log(\"ID to be deleted\", row.id);\n      if (indexToDelete >= 0) {\n        this.itemData.splice(indexToDelete, 1);\n        console.log(\"Delete ID: \", this.itemData);\n      }\n      axios.post(\"/updateStatus\", {\n        company: localStorage.getItem(\"Company\"),\n        id: row.id,\n        status: \"deleted\",\n        userID: this.userID\n      }).then(function (response) {\n        console.log(\"Success Delete: \", response.data);\n        _this.showToatDeleteSuccess();\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","NotificationTemplate","use","_Table","_TableColumn","_Select","_Option","props","components","mounted","watch","transferredData","newValue","$emit","computed","transfer","itemData","data","tableColumns","prop","label","minWidth","itemsData","methods","handleQuantity","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","customValue","handleEdit","index","row","alert","concat","id","handleDelete","_this","indexToDelete","findIndex","tableRow","console","log","splice","axios","post","company","localStorage","getItem","status","userID","then","response","showToatDeleteSuccess","catch","error"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/ModalPullOut/UnprocessModal.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    <button\n      type=\"button\"\n      class=\"btn btn-info btn-sm\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#exampleModal\"\n    >\n\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"text-white h-5 w-5\"\n        viewBox=\"0 0 512 512\"\n      >\n        <path\n          d=\"M336 64h32a48 48 0 0148 48v320a48 48 0 01-48 48H144a48 48 0 01-48-48V112a48 48 0 0148-48h32\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"32\"\n        />\n        <rect\n          x=\"176\"\n          y=\"32\"\n          width=\"160\"\n          height=\"64\"\n          rx=\"26.13\"\n          ry=\"26.13\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"32\"\n        />\n      </svg>\n    </button> -->\n  <div\n    class=\"modal fade\"\n    id=\"unprocessModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"unprocessModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"unprocessModalLabel\">\n            {{ transferredData.branchName }}\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"col-sm-12 mt-2\">\n            <el-table class=\"table-striped\" :data=\"itemData\" border style=\"width: 100%\">\n              <el-table-column\n                v-for=\"column in tableColumns\"\n                :key=\"column.label\"\n                :min-width=\"column.minWidth\"\n                :prop=\"column.prop\"\n                :label=\"column.label\"\n              >\n              </el-table-column>\n              <el-table-column :min-width=\"120\" class-name=\"td-actions\" label=\"Actions\">\n                <template slot-scope=\"props\">\n                  <p-button\n                    type=\"success\"\n                    size=\"sm\"\n                    icon\n                    @click=\"handleEdit(props.$index, props.row)\"\n                  >\n                    <i class=\"fa fa-edit\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"danger\"\n                    size=\"sm\"\n                    icon\n                    @click=\"handleDelete(props.$index, props.row)\"\n                  >\n                    <i class=\"fa fa-times\"></i>\n                  </p-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            Close\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../axios\";\nimport NotificationTemplate from \"../../../Components/Notification/NotificationSuccessfulRename.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  // mounted() {\n  //   this.fetchData();\n  // },\n  props: [\"transferredData\", \"itemData\"],\n  components: {\n    NotificationTemplate,\n  },\n\n  mounted() {\n    // this.itemsData = this.transfer();\n    // console.log(\"Item Data: \", this.itemsData);\n  },\n  watch: {\n    transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    },\n  },\n  computed: {\n    transfer() {\n      return this.itemData;\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      tableColumns: [\n        {\n          prop: \"brand\",\n          label: \"Brand\",\n          minWidth: 200,\n        },\n        {\n          prop: \"boxLabel\",\n          label: \"Box Label\",\n          minWidth: 250,\n        },\n        {\n          prop: \"boxNumber\",\n          label: \"Box Number\",\n          minWidth: 125,\n        },\n        {\n          prop: \"itemCode\",\n          label: \"Item Code\",\n          minWidth: 175,\n        },\n        {\n          prop: \"quantity\",\n          label: \"Quantity\",\n          minWidth: 100,\n        },\n      ],\n      itemsData: [],\n    };\n  },\n  methods: {\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\",\n        },\n      });\n    },\n    handleEdit(index, row) {\n      alert(`Your want to edit ${row.id}`);\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.itemData.findIndex((tableRow) => tableRow.id === row.id);\n      console.log(\"ID to be deleted\", row.id);\n      if (indexToDelete >= 0) {\n        this.itemData.splice(indexToDelete, 1);\n        console.log(\"Delete ID: \", this.itemData);\n      }\n\n      axios\n        .post(\"/updateStatus\", {\n          company: localStorage.getItem(\"Company\"),\n          id: row.id,\n          status: \"deleted\",\n          userID: this.userID,\n        })\n        .then((response) => {\n          console.log(\"Success Delete: \", response.data);\n          this.showToatDeleteSuccess();\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AA+FA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AACA,OAAAC,oBAAA;AAEAF,GAAA,CAAAG,GAAA,CAAAC,MAAA;AACAJ,GAAA,CAAAG,GAAA,CAAAE,YAAA;AACAL,GAAA,CAAAG,GAAA,CAAAG,OAAA;AACAN,GAAA,CAAAG,GAAA,CAAAI,OAAA;AACA;EAIAC,KAAA;EACAC,UAAA;IACAP,oBAAA,EAAAA;EACA;EAEAQ,OAAA,WAAAA,QAAA,GAGA;EACAC,KAAA;IACAC,eAAA,WAAAA,gBAAAC,QAAA;MACA,IAAAA,QAAA;QACA,KAAAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,QAAA,WAAAA,SAAA;MACA,YAAAC,QAAA;IACA;EAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,EACA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MACA,KAAAC,SAAA;IACA;IACAA,SAAA,WAAAA,UAAAC,aAAA,EAAAC,eAAA;MACA,IAAAC,KAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;MACA,KAAAC,OAAA;QACAC,SAAA,EAAAhC,oBAAA;QAEA0B,eAAA,EAAAA,eAAA;QACAD,aAAA,EAAAA,aAAA;QACAQ,IAAA;QACA3B,KAAA;UACA4B,WAAA;QACA;MACA;IACA;IACAC,UAAA,WAAAA,WAAAC,KAAA,EAAAC,GAAA;MACAC,KAAA,sBAAAC,MAAA,CAAAF,GAAA,CAAAG,EAAA;IACA;IACAC,YAAA,WAAAA,aAAAL,KAAA,EAAAC,GAAA;MAAA,IAAAK,KAAA;MACA,IAAAC,aAAA,QAAA5B,QAAA,CAAA6B,SAAA,WAAAC,QAAA;QAAA,OAAAA,QAAA,CAAAL,EAAA,KAAAH,GAAA,CAAAG,EAAA;MAAA;MACAM,OAAA,CAAAC,GAAA,qBAAAV,GAAA,CAAAG,EAAA;MACA,IAAAG,aAAA;QACA,KAAA5B,QAAA,CAAAiC,MAAA,CAAAL,aAAA;QACAG,OAAA,CAAAC,GAAA,qBAAAhC,QAAA;MACA;MAEAkC,KAAA,CACAC,IAAA;QACAC,OAAA,EAAAC,YAAA,CAAAC,OAAA;QACAb,EAAA,EAAAH,GAAA,CAAAG,EAAA;QACAc,MAAA;QACAC,MAAA,OAAAA;MACA,GACAC,IAAA,WAAAC,QAAA;QACAX,OAAA,CAAAC,GAAA,qBAAAU,QAAA,CAAAzC,IAAA;QACA0B,KAAA,CAAAgB,qBAAA;MACA,GACAC,KAAA,WAAAC,KAAA;QACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}