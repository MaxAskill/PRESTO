{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PButton,\n    PPagination\n  },\n  mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter(row => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"id\", \"brandNames\", \"status\"],\n      tableColumns: [{\n        prop: \"id\",\n        label: \"ID\",\n        minWidth: 100\n      }, {\n        prop: \"brandNames\",\n        label: \"Brand Name\",\n        minWidth: 250\n      }],\n      tableData: []\n    };\n  },\n  methods: {\n    fetchData() {\n      axiosClient.get(\"/fetchBrandMaintenance\", {\n        params: {\n          company: this.company\n        }\n      }).then(response => {\n        console.log(\"Brand Response:\", response.data);\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    handleEdit(index, row) {\n      var tempStatus = \"\";\n      if (row.status === \"Active\") {\n        row.status = \"Inactive\";\n        tempStatus = \"N\";\n      } else {\n        row.status = \"Active\";\n        tempStatus = \"Y\";\n      }\n      axiosClient.post(\"/updateBrand\", {\n        id: row.id,\n        status: tempStatus,\n        userID: sessionStorage.getItem(\"UserID\")\n      }).then(response => {\n        console.log(\"Success Update Brand\");\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.tableData.findIndex(tableRow => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Vue","PButton","PPagination","axiosClient","use","_Table","_TableColumn","_Select","_Option","components","mounted","fetchData","computed","pagedData","tableData","slice","from","to","queriedData","searchQuery","pagination","total","length","result","filter","row","isIncluded","key","propsToSearch","rowValue","toString","toLowerCase","includes","highBound","perPage","currentPage","data","company","perPageOptions","tableColumns","prop","label","minWidth","methods","get","params","then","response","console","log","catch","error","handleEdit","index","tempStatus","status","post","id","userID","sessionStorage","getItem","handleDelete","indexToDelete","findIndex","tableRow","splice"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/BrandMaintenance.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row mx-1\">\n      <div class=\"col-3 px-1\">\n        <el-select\n          class=\"select-default el-select-w\"\n          placeholder=\"Select Company\"\n          v-model=\"company\"\n          @change=\"fetchData\"\n        >\n          <el-option class=\"select-default\" value=\"EPC\" label=\"EPC\">EPC</el-option>\n          <el-option class=\"select-default\" value=\"NBFI\" label=\"NBFI\">NBFI</el-option>\n        </el-select>\n      </div>\n      <div class=\"col-7\">\n        <fg-input\n          class=\"input-md\"\n          placeholder=\"Search\"\n          v-model=\"searchQuery\"\n          addon-right-icon=\"nc-icon nc-zoom-split\"\n        >\n        </fg-input>\n      </div>\n      <div class=\"col-2 px-1 whitespace-nowrap\">\n        <PButton type=\"primary\" class=\"btn-margin\">Add Brand</PButton>\n      </div>\n    </div>\n    <div class=\"row mx-2\">\n      <el-table class=\"table-striped\" :data=\"queriedData\" border style=\"width: 100%\">\n        <el-table-column\n          v-for=\"column in tableColumns\"\n          :key=\"column.label\"\n          :min-width=\"column.minWidth\"\n          :prop=\"column.prop\"\n          :label=\"column.label\"\n        >\n        </el-table-column>\n        <el-table-column :width=\"200\" class-name=\"td-actions\" label=\"Status\">\n          <template slot-scope=\"props\">\n            <p-button\n              v-if=\"props.row.status === 'Active'\"\n              type=\"success\"\n              size=\"sm\"\n              @click=\"handleEdit(props.$index, props.row)\"\n            >\n              Active\n            </p-button>\n            <p-button\n              v-else\n              type=\"danger\"\n              size=\"sm\"\n              @click=\"handleEdit(props.$index, props.row)\"\n            >\n              Inactive\n            </p-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"d-flex justify-content-end pagination-info\">\n      <p class=\"category p-margin\">\n        Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n      </p>\n    </div>\n    <div class=\"nav-center\">\n      <p-pagination\n        class=\"pull-center\"\n        v-model=\"pagination.currentPage\"\n        :per-page=\"pagination.perPage\"\n        :total=\"pagination.total\"\n      >\n      </p-pagination>\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\n\nexport default {\n  components: {\n    PButton,\n    PPagination,\n  },\n  mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"id\", \"brandNames\", \"status\"],\n      tableColumns: [\n        {\n          prop: \"id\",\n          label: \"ID\",\n          minWidth: 100,\n        },\n        {\n          prop: \"brandNames\",\n          label: \"Brand Name\",\n          minWidth: 250,\n        },\n      ],\n      tableData: [],\n    };\n  },\n  methods: {\n    fetchData() {\n      axiosClient\n        .get(\"/fetchBrandMaintenance\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Brand Response:\", response.data);\n          this.tableData = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleEdit(index, row) {\n      // alert(`Your want to edit ${row.branchName}`);\n      var tempStatus = \"\";\n      if (row.status === \"Active\") {\n        row.status = \"Inactive\";\n        tempStatus = \"N\";\n      } else {\n        row.status = \"Active\";\n        tempStatus = \"Y\";\n      }\n\n      axiosClient\n        .post(\"/updateBrand\", {\n          id: row.id,\n          status: tempStatus,\n          userID: sessionStorage.getItem(\"UserID\"),\n        })\n        .then((response) => {\n          console.log(\"Success Update Brand\");\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n\n.nav-center {\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n}\n.btn-margin {\n  margin: 0px 0px;\n  width: 100%;\n}\n.p-margin {\n  margin-bottom: 0px;\n  margin-right: 15px;\n}\n.el-select-w {\n  width: 100%;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}