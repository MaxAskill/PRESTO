{"ast":null,"code":"import axios from \"axios\";\nimport router from \"./routes/routes.js\";\nvar axiosClient = axios.create({\n  baseURL: \"http://192.168.0.7:40/api\"\n});\naxiosClient.interceptors.request.use(function (config) {\n  config.headers.Authorization = \"Bearer \".concat(sessionStorage.getItem(\"Token\"));\n  return config;\n});\nexport default axiosClient;","map":{"version":3,"names":["axios","router","axiosClient","create","baseURL","interceptors","request","use","config","headers","Authorization","concat","sessionStorage","getItem"],"sources":["/var/www/html/PRESTOv1/vue/src/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport router from \"./routes/routes.js\"\n\nconst axiosClient = axios.create({\n  baseURL: `http://192.168.0.7:40/api`\n  // headers: {\n  //   'Content-Type': 'application/json',\n  //   'Access-Control-Allow-Origin': '*'\n  //   },\n  //   xsrfCookieName: 'XSRF-TOKEN',\n  //   xsrfHeaderName: 'X-XSRF-TOKEN',\n  //   withCredentials: false\n\n});\n\naxiosClient.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${sessionStorage.getItem(\"Token\")}`\n  return config;\n})\n\n// axiosClient.interceptors.response.use(response => {\n//   return response;\n// }, error => {\n//   if (error.response.status === 401) {\n//     sessionStorage.removeItem('TOKEN')\n//     router.push({name: 'Login'})\n//   } else if (error.response.status === 404) {\n//     router.push({name: 'NotFound'})\n//   }\n//   return error;\n// })\n\nexport default axiosClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,IAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO;AAST,CAAC,CAAC;AAEFF,WAAW,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAAC,MAAM,EAAI;EAC7CA,MAAM,CAACC,OAAO,CAACC,aAAa,aAAAC,MAAA,CAAaC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;EAC1E,OAAOL,MAAM;AACf,CAAC,CAAC;AAcF,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}