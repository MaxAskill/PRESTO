{"ast":null,"code":"import _MessageBox2 from \"element-ui/lib/theme-chalk/message-box.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _MessageBox from \"element-ui/lib/message-box\";\nimport _Message2 from \"element-ui/lib/theme-chalk/message.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Message from \"element-ui/lib/message\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport axiosClient from \"../../../../axios\";\nexport default {\n  components: {},\n  props: [\"promoData\", \"promoDetails\"],\n  computed: {},\n  data: function data() {\n    return {\n      assignBranch: [],\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      form: {\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\",\n        StartDate: \"\",\n        EndDate: \"\"\n      },\n      editBranchMode: false,\n      editIndex: null,\n      disableAddBranch: true,\n      disableSendRequest: true\n    };\n  },\n  watch: {\n    form: {\n      handler: function handler() {\n        this.validateAddBranch();\n      },\n      deep: true\n    },\n    assignBranch: {\n      handler: function handler() {\n        this.validateAddBranch();\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    if (sessionStorage.getItem(\"Position\") == \"Reviewer\" || sessionStorage.getItem(\"Position\") == \"Approver\") this.fetchCompanyByRA();else this.fetchCompany();\n    console.log(\"Promo Details\", this.promoDetails);\n  },\n  methods: {\n    fetchCompany: function fetchCompany() {\n      var _this = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        _this.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchCompanyByRA: function fetchCompanyByRA() {\n      var _this2 = this;\n      axiosClient.get(\"/fetchCompanyByRA\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\")\n        }\n      }).then(function (response) {\n        _this2.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this3 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.form.Company\n        }\n      }).then(function (response) {\n        _this3.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainName: function fetchChainName() {\n      var _this4 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.form.ChainCode,\n          company: this.form.Company\n        }\n      }).then(function (response) {\n        _this4.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    validateAddBranch: function validateAddBranch() {\n      if (this.form.BranchName && this.form.ChainCode && this.form.Company && this.form.StartDate && this.form.EndDate) this.disableAddBranch = false;else this.disableAddBranch = true;\n      this.validateSendRequest();\n    },\n    addBranchInput: function addBranchInput() {\n      var _this5 = this;\n      function padZero(number) {\n        return number.toString().padStart(2, \"0\");\n      }\n      var startDate = new Date(this.form.StartDate);\n      var year = startDate.getFullYear();\n      var month = padZero(startDate.getMonth() + 1);\n      var day = padZero(startDate.getDate());\n      this.form.StartDate = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n      var endDate = new Date(this.form.EndDate);\n      var yearE = endDate.getFullYear();\n      var monthE = padZero(endDate.getMonth() + 1);\n      var dayE = padZero(endDate.getDate());\n      this.form.EndDate = \"\".concat(yearE, \"-\").concat(monthE, \"-\").concat(dayE);\n      var isStartDate = new Date(this.form.StartDate);\n      var isEndDate = new Date(this.form.EndDate);\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      if (this.promoDetails.some(function (branch) {\n        return branch.branchName === _this5.form.BranchName && !branch.expired;\n      })) {\n        _Message.error(\"Selected Branch was already assigned for this Promo. Kindly choose another one.\");\n      } else if (isStartDate < today) {\n        _Message.error(\"Start Date must be today or any date later than today's date.\");\n      } else if (isEndDate < isStartDate) {\n        _Message.error(\"End Date must be equal or any date later than Start date.\");\n      } else {\n        var temp = false;\n        if (this.assignBranch.length == 0) temp = true;\n        for (var i = 0; i < this.assignBranch.length; i++) {\n          if (this.editBranchMode) {\n            if (i == this.editIndex && this.form.BranchName != this.assignBranch[i].branch) {\n              this.assignBranch[i].company = this.form.Company;\n              this.assignBranch[i].chainCode = this.form.ChainCode;\n              this.assignBranch[i].branch = this.form.BranchName;\n              this.assignBranch[i].date_start = this.form.StartDate;\n              this.assignBranch[i].date_end = this.form.EndDate;\n              this.assignBranch[i].permanent = false;\n              break;\n            }\n          } else {\n            if (this.form.BranchName != this.assignBranch[i].branch) temp = true;else {\n              temp = false;\n              break;\n            }\n          }\n        }\n        if (temp) this.assignBranch.push({\n          company: this.form.Company,\n          chainCode: this.form.ChainCode,\n          branch: this.form.BranchName,\n          date_start: this.form.StartDate,\n          date_end: this.form.EndDate\n        });\n        this.form.Company = \"\";\n        this.form.ChainCode = \"\";\n        this.form.BranchName = \"\";\n        this.form.StartDate = \"\";\n        this.form.EndDate = \"\";\n        this.chainCodeList = [];\n        this.branchList = [];\n        this.editBranchMode = false;\n        this.editIndex = null;\n      }\n    },\n    editBranchInput: function editBranchInput(index, row) {\n      this.editBranchMode = true;\n      this.editIndex = index;\n      this.form.Company = this.assignBranch[index].company;\n      this.form.ChainCode = this.assignBranch[index].chainCode;\n      this.form.BranchName = this.assignBranch[index].branch;\n      this.form.StartDate = this.assignBranch[index].date_start;\n      this.form.EndDate = this.assignBranch[index].date_end;\n      this.fetchChainCode();\n      this.fetchChainName();\n    },\n    cancelEditBranchInput: function cancelEditBranchInput() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.form.Company = \"\";\n      this.form.ChainCode = \"\";\n      this.form.BranchName = \"\";\n      this.form.StartDate = \"\";\n      this.form.EndDate = \"\";\n    },\n    removeBranchInput: function removeBranchInput(index) {\n      this.assignBranch.splice(index, 1);\n    },\n    validateSendRequest: function validateSendRequest() {\n      if (this.assignBranch.length != 0) this.disableSendRequest = false;else this.disableSendRequest = true;\n    },\n    CancelRequest: function CancelRequest() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.form.Company = \"\";\n      this.form.ChainCode = \"\";\n      this.form.BranchName = \"\";\n      this.form.StartDate = \"\";\n      this.form.EndDate = \"\";\n    },\n    SendRequestConfirmation: function SendRequestConfirmation() {\n      var _this6 = this;\n      _MessageBox.confirm(\"Do you want to continue?\", \"Assigning of Temporary Branch\", {\n        confirmButtonText: \"CONFIRM\",\n        cancelButtonText: \"CANCEL\",\n        center: true,\n        showClose: false,\n        closeOnClickModal: false,\n        closeOnPressEscape: false\n      }).then(function () {\n        _this6.SendRequest();\n      }).catch(function () {\n        _Message({\n          type: \"info\",\n          message: \"Assigning of Branch canceled.\"\n        });\n      });\n    },\n    SendRequest: function SendRequest() {\n      var _this7 = this;\n      var requests = this.assignBranch.map(function (ctr) {\n        return axiosClient.post(\"/postPromoUserBranch\", {\n          userID: _this7.promoData.id,\n          company: ctr.company,\n          chainCode: ctr.chainCode,\n          branchName: ctr.branch,\n          date_start: ctr.date_start,\n          date_end: ctr.date_end,\n          req: null\n        });\n      });\n      Promise.all(requests).then(function () {\n        _Message({\n          message: \"Assigning of Temporary Branch completed.\",\n          type: \"success\"\n        });\n        setTimeout(function () {\n          location.reload();\n        }, 500);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","components","props","computed","data","assignBranch","companyList","chainCodeList","branchNameList","form","Company","ChainCode","BranchName","StartDate","EndDate","editBranchMode","editIndex","disableAddBranch","disableSendRequest","watch","handler","validateAddBranch","deep","mounted","sessionStorage","getItem","fetchCompanyByRA","fetchCompany","console","log","promoDetails","methods","_this","get","then","response","catch","error","_this2","params","company","fetchChainCode","_this3","fetchChainName","_this4","chainCode","validateSendRequest","addBranchInput","_this5","padZero","number","toString","padStart","startDate","Date","year","getFullYear","month","getMonth","day","getDate","concat","endDate","yearE","monthE","dayE","isStartDate","isEndDate","today","setHours","some","branch","branchName","expired","_Message","temp","length","i","date_start","date_end","permanent","push","branchList","editBranchInput","index","row","cancelEditBranchInput","removeBranchInput","splice","CancelRequest","SendRequestConfirmation","_this6","_MessageBox","confirm","confirmButtonText","cancelButtonText","center","showClose","closeOnClickModal","closeOnPressEscape","SendRequest","type","message","_this7","requests","map","ctr","post","userID","promoData","id","req","Promise","all","setTimeout","location","reload"],"sources":["src/components/Dashboard/Views/PullOut/PromoAssignBranchByAgentModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"promoAssignBranchByAgentModal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"promoAssignBranchByAgentModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h6 class=\"modal-title\">\n            Assigning of Temporary Branch for promo: <b>{{ promoData.name }}</b>\n          </h6>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Company\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Company\"\n                  v-model=\"form.Company\"\n                  @change=\"fetchChainCode\"\n                >\n                  <el-option\n                    v-for=\"option in companyList\"\n                    class=\"select-default\"\n                    :value=\"option.shortName\"\n                    :label=\"option.name + ' (' + option.shortName + ') '\"\n                    :key=\"option.id\"\n                  >\n                  </el-option>\n                </el-select>\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Chain Name\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Chain Name\"\n                  v-model=\"form.ChainCode\"\n                  @change=\"fetchChainName\"\n                >\n                  <el-option\n                    v-for=\"option in chainCodeList\"\n                    class=\"select-default\"\n                    :value=\"option.chainCode\"\n                    :label=\"option.chainCode\"\n                    :key=\"option.chainCode\"\n                  >\n                  </el-option>\n                </el-select>\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6\">\n              <fg-input label=\"Branch Name\">\n                <el-select\n                  class=\"select-default\"\n                  size=\"large\"\n                  placeholder=\"Select Branch Name\"\n                  v-model=\"form.BranchName\"\n                >\n                  <el-option\n                    v-for=\"option in branchNameList\"\n                    class=\"select-default\"\n                    :value=\"option.branchName\"\n                    :label=\"option.branchName\"\n                    :key=\"option.branchName\"\n                  >\n                  </el-option>\n                </el-select>\n              </fg-input>\n            </div>\n            <div class=\"col-sm-6 row\">\n              <div class=\"col-sm-6\">\n                <label class=\"date-label\">Start Date</label>\n                <div class=\"form-group\">\n                  <el-date-picker\n                    v-model=\"form.StartDate\"\n                    type=\"date\"\n                    placeholder=\"Pick a date\"\n                  >\n                  </el-date-picker>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <label class=\"date-label\">End Date</label>\n                <div class=\"form-group\">\n                  <el-date-picker\n                    v-model=\"form.EndDate\"\n                    type=\"date\"\n                    placeholder=\"Pick a date\"\n                  >\n                  </el-date-picker>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center\">\n            <button\n              class=\"btn btn-success\"\n              @click=\"addBranchInput\"\n              :disabled=\"disableAddBranch\"\n            >\n              Add This Branch\n            </button>\n          </div>\n          <div class=\"d-flex justify-content-center\">\n            <div style=\"overflow-x: auto; min-width: 350px\">\n              <el-table\n                class=\"table-striped p-0\"\n                :data=\"assignBranch\"\n                border\n                max-height=\"350\"\n                style=\"width: 100%\"\n              >\n                <el-table-column prop=\"branch\" label=\"Branch\" min-width=\"300\" />\n                <el-table-column prop=\"date_start\" label=\"Start Date\" width=\"150\" />\n                <el-table-column prop=\"date_end\" label=\"End Date\" width=\"150\" />\n                <el-table-column label=\"Actions\" width=\"100\">\n                  <template slot-scope=\"props\">\n                    <p-button\n                      v-if=\"props.$index != editIndex\"\n                      type=\"warning\"\n                      size=\"sm\"\n                      icon\n                      @click=\"editBranchInput(props.$index, props.row)\"\n                    >\n                      <i class=\"fa fa-edit\"></i>\n                    </p-button>\n                    <p-button\n                      v-if=\"props.$index == editIndex\"\n                      class=\"ml-1\"\n                      type=\"default\"\n                      size=\"sm\"\n                      icon\n                      @click=\"cancelEditBranchInput()\"\n                    >\n                      <i class=\"fa fa-times\"></i>\n                    </p-button>\n                    <p-button\n                      class=\"ml-1\"\n                      type=\"danger\"\n                      size=\"sm\"\n                      icon\n                      @click=\"removeBranchInput(props.$index)\"\n                    >\n                      <i class=\"fa fa-trash\"></i>\n                    </p-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer d-flex justify-content-center\">\n          <button\n            class=\"btn btn-secondary\"\n            @click=\"CancelRequest\"\n            data-bs-dismiss=\"modal\"\n          >\n            Cancel\n          </button>\n          <button\n            class=\"btn btn-primary\"\n            @click=\"SendRequestConfirmation\"\n            :disabled=\"disableSendRequest\"\n          >\n            Proceed\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\nimport { Message, MessageBox } from \"element-ui\";\n\nexport default {\n  components: {},\n  props: [\"promoData\", \"promoDetails\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      assignBranch: [],\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      form: {\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\",\n        StartDate: \"\",\n        EndDate: \"\",\n      },\n      editBranchMode: false,\n      editIndex: null,\n      disableAddBranch: true,\n      disableSendRequest: true,\n    };\n  },\n  watch: {\n    form: {\n      handler() {\n        this.validateAddBranch();\n      },\n      deep: true,\n    },\n    assignBranch: {\n      handler() {\n        this.validateAddBranch();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    if (\n      sessionStorage.getItem(\"Position\") == \"Reviewer\" ||\n      sessionStorage.getItem(\"Position\") == \"Approver\"\n    )\n      this.fetchCompanyByRA();\n    else this.fetchCompany();\n\n    console.log(\"Promo Details\", this.promoDetails);\n  },\n  methods: {\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchCompanyByRA() {\n      axiosClient\n        .get(\"/fetchCompanyByRA\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n          },\n        })\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.form.Company,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Name Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.form.ChainCode,\n            company: this.form.Company,\n          },\n        })\n        .then((response) => {\n          // console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    validateAddBranch() {\n      if (\n        this.form.BranchName &&\n        this.form.ChainCode &&\n        this.form.Company &&\n        this.form.StartDate &&\n        this.form.EndDate\n      )\n        this.disableAddBranch = false;\n      else this.disableAddBranch = true;\n\n      //Limit to 3 branch\n      // if (this.assignBranch.length >= 3)\n      //   if (!this.editBranchMode) this.disableAddBranch = true;\n\n      this.validateSendRequest();\n    },\n    addBranchInput() {\n      // Function to pad a single digit with a leading zero\n      function padZero(number) {\n        return number.toString().padStart(2, \"0\");\n      }\n      // Convert StartDate\n      const startDate = new Date(this.form.StartDate);\n\n      // Extract year, month, and day components\n      const year = startDate.getFullYear();\n      const month = padZero(startDate.getMonth() + 1); // Months are zero-based, so we add 1\n      const day = padZero(startDate.getDate());\n\n      // Format the date as \"yyyy-MM-dd\"\n      this.form.StartDate = `${year}-${month}-${day}`;\n\n      // Convert EndDate\n      const endDate = new Date(this.form.EndDate);\n      const yearE = endDate.getFullYear();\n      const monthE = padZero(endDate.getMonth() + 1); // Months are zero-based, so we add 1\n      const dayE = padZero(endDate.getDate());\n\n      // Format the date as \"yyyy-MM-dd\"\n      this.form.EndDate = `${yearE}-${monthE}-${dayE}`;\n\n      var isStartDate = new Date(this.form.StartDate); //dd-mm-YYYY\n      var isEndDate = new Date(this.form.EndDate); //dd-mm-YYYY\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      // if (this.permBranch == this.form.BranchName) {\n      //   Message.error(\n      //     \"Selected Branch is already the Permanent Branch of this Promo. Kindly select other branch.\"\n      //   );\n      // }\n      if (\n        this.promoDetails.some(\n          (branch) => branch.branchName === this.form.BranchName && !branch.expired\n        )\n      ) {\n        Message.error(\n          \"Selected Branch was already assigned for this Promo. Kindly choose another one.\"\n        );\n      } else if (isStartDate < today) {\n        Message.error(\"Start Date must be today or any date later than today's date.\");\n      } else if (isEndDate < isStartDate) {\n        Message.error(\"End Date must be equal or any date later than Start date.\");\n      } else {\n        let temp = false;\n        if (this.assignBranch.length == 0) temp = true;\n        for (let i = 0; i < this.assignBranch.length; i++) {\n          if (this.editBranchMode) {\n            if (\n              i == this.editIndex &&\n              this.form.BranchName != this.assignBranch[i].branch\n            ) {\n              this.assignBranch[i].company = this.form.Company;\n              this.assignBranch[i].chainCode = this.form.ChainCode;\n              this.assignBranch[i].branch = this.form.BranchName;\n              this.assignBranch[i].date_start = this.form.StartDate;\n              this.assignBranch[i].date_end = this.form.EndDate;\n              this.assignBranch[i].permanent = false;\n              break;\n            }\n          } else {\n            if (this.form.BranchName != this.assignBranch[i].branch) temp = true;\n            else {\n              temp = false;\n              break;\n            }\n          }\n        }\n        if (temp)\n          this.assignBranch.push({\n            company: this.form.Company,\n            chainCode: this.form.ChainCode,\n            branch: this.form.BranchName,\n            date_start: this.form.StartDate,\n            date_end: this.form.EndDate,\n          });\n        this.form.Company = \"\";\n        this.form.ChainCode = \"\";\n        this.form.BranchName = \"\";\n        this.form.StartDate = \"\";\n        this.form.EndDate = \"\";\n        this.chainCodeList = [];\n        this.branchList = [];\n        this.editBranchMode = false;\n        this.editIndex = null;\n      }\n    },\n    editBranchInput(index, row) {\n      this.editBranchMode = true;\n      this.editIndex = index;\n      this.form.Company = this.assignBranch[index].company;\n      this.form.ChainCode = this.assignBranch[index].chainCode;\n      this.form.BranchName = this.assignBranch[index].branch;\n      this.form.StartDate = this.assignBranch[index].date_start;\n      this.form.EndDate = this.assignBranch[index].date_end;\n      this.fetchChainCode();\n      this.fetchChainName();\n    },\n    cancelEditBranchInput() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.form.Company = \"\";\n      this.form.ChainCode = \"\";\n      this.form.BranchName = \"\";\n      this.form.StartDate = \"\";\n      this.form.EndDate = \"\";\n    },\n    removeBranchInput(index) {\n      this.assignBranch.splice(index, 1);\n    },\n    validateSendRequest() {\n      if (this.assignBranch.length != 0) this.disableSendRequest = false;\n      else this.disableSendRequest = true;\n    },\n    CancelRequest() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.form.Company = \"\";\n      this.form.ChainCode = \"\";\n      this.form.BranchName = \"\";\n      this.form.StartDate = \"\";\n      this.form.EndDate = \"\";\n    },\n    SendRequestConfirmation() {\n      MessageBox.confirm(\"Do you want to continue?\", \"Assigning of Temporary Branch\", {\n        confirmButtonText: \"CONFIRM\",\n        cancelButtonText: \"CANCEL\",\n        center: true,\n        showClose: false,\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n      })\n        .then(() => {\n          this.SendRequest();\n          // setTimeout(location.reload(), 500);\n        })\n        .catch(() => {\n          Message({\n            type: \"info\",\n            message: \"Assigning of Branch canceled.\",\n          });\n        });\n    },\n    SendRequest() {\n      const requests = this.assignBranch.map((ctr) => {\n        return axiosClient.post(\"/postPromoUserBranch\", {\n          userID: this.promoData.id,\n          company: ctr.company,\n          chainCode: ctr.chainCode,\n          branchName: ctr.branch,\n          date_start: ctr.date_start,\n          date_end: ctr.date_end,\n          req: null,\n        });\n      });\n\n      // Use Promise.all to wait for all requests to complete\n      Promise.all(requests)\n        .then(() => {\n          Message({\n            message: \"Assigning of Temporary Branch completed.\",\n            type: \"success\",\n          });\n\n          // Reload the page after all requests have completed\n          setTimeout(() => {\n            location.reload();\n          }, 500);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.date-label {\n  font-size: 12px;\n  color: gray;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}