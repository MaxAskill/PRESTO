{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\nimport axiosClient from \"../../../../../axios\";\nexport default {\n  components: (_components = {\n    Card: Card\n  }, _defineProperty(_components, Checkbox.name, Checkbox), _defineProperty(_components, Button.name, Button), _components),\n  mounted: function mounted() {\n    this.fetchEmail();\n  },\n  methods: {\n    fetchEmail: function fetchEmail() {\n      this.email = sessionStorage.getItem(\"Email\");\n      console.log(\"Email\", thi.email);\n    },\n    submit: function submit() {\n      axiosClient.post(\"/updatePasswordUser\", {\n        email: sessionStorage.getItem(\"Email\"),\n        password: this.password\n      }).then(function (response) {\n        console.log(\"Success Changed Password\", response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    validatePassword: function validatePassword() {\n      if (/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/.test(this.password)) {\n        this.isConfirmPassword = false;\n        this.errorMsg = \"\";\n      } else {\n        this.confirmPassword = \"\";\n        this.isConfirmPassword = true;\n        this.errorMsg = \"Password must be at least 8 characters long which contain of at least a lowercase letter, an uppercase letter, a number, and a special character.\";\n      }\n    },\n    matched: function matched() {\n      if (this.password == this.confirmPassword) {\n        this.isDisabled = false;\n        this.errorMsg = \"\";\n      } else {\n        this.isDisabled = true;\n        this.errorMsg = \"The password confirmation does not match.\";\n      }\n    }\n  },\n  data: function data() {\n    return {\n      password: \"\",\n      confirmPassword: \"\",\n      isConfirmPassword: true,\n      errorMsg: \"\",\n      isDisabled: true,\n      email: \"\"\n    };\n  }\n};","map":{"version":3,"names":["Card","Checkbox","Button","axiosClient","components","_components","_defineProperty","name","mounted","fetchEmail","methods","email","sessionStorage","getItem","console","log","thi","submit","post","password","then","response","data","catch","error","validatePassword","test","isConfirmPassword","errorMsg","confirmPassword","matched","isDisabled"],"sources":["src/components/Dashboard/Views/Pages/ForgotPassword/ResetPasswordForm.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"wrapper wrapper-full-page\">\n      <div class=\"full-page login-page section-image\">\n        <!--   you can change the color of the filter page using: data-color=\"blue | azure | green | orange | red | purple\" -->\n        <div class=\"content\">\n          <div class=\"container\">\n            <div class=\"col-lg-4 col-md-6 ml-auto mr-auto\">\n              <form @submit.prevent=\"submit\">\n                <card type=\"login\" class=\"m-0 p-0\">\n                  <p class=\"text-center font-size1\">\n                    Enter a new password for {{ email }}\n                  </p>\n\n                  <fg-input\n                    type=\"password\"\n                    label=\"Password\"\n                    class=\"mb-1\"\n                    v-model=\"password\"\n                    @input=\"validatePassword\"\n                  >\n                  </fg-input>\n                  <p v-show=\"errorMsg\" class=\"error-font mb-1\">{{ errorMsg }}</p>\n                  <fg-input\n                    type=\"password\"\n                    :disabled=\"isConfirmPassword\"\n                    label=\"Confirm Password\"\n                    class=\"mb-0\"\n                    v-model=\"confirmPassword\"\n                    @input=\"matched\"\n                  >\n                  </fg-input>\n\n                  <div class=\"card-footer pt-10px p-0 d-flex justify-content-center\">\n                    <p-button\n                      :disabled=\"isDisabled\"\n                      native-type=\"submit\"\n                      type=\"warning\"\n                      round\n                      >Reset Password\n                    </p-button>\n                  </div>\n                </card>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- <app-footer></app-footer> -->\n        <div\n          class=\"full-page-background\"\n          style=\"background-image: url(static/img/background/background-2.jpg)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\nimport axiosClient from \"../../../../../axios\";\n\nexport default {\n  components: {\n    Card,\n    [Checkbox.name]: Checkbox,\n    [Button.name]: Button,\n  },\n  mounted() {\n    this.fetchEmail();\n  },\n  methods: {\n    fetchEmail() {\n      this.email = sessionStorage.getItem(\"Email\");\n      console.log(\"Email\", thi.email);\n    },\n    submit() {\n      //Reset User's Password\n\n      axiosClient\n        .post(\"/updatePasswordUser\", {\n          email: sessionStorage.getItem(\"Email\"),\n          password: this.password,\n        })\n        .then((response) => {\n          console.log(\"Success Changed Password\", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    validatePassword() {\n      if (\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/.test(\n          this.password\n        )\n      ) {\n        this.isConfirmPassword = false;\n        this.errorMsg = \"\";\n      } else {\n        this.confirmPassword = \"\";\n        this.isConfirmPassword = true;\n        this.errorMsg =\n          \"Password must be at least 8 characters long which contain of at least a lowercase letter, an uppercase letter, a number, and a special character.\";\n      }\n    },\n    matched() {\n      if (this.password == this.confirmPassword) {\n        this.isDisabled = false;\n        this.errorMsg = \"\";\n      } else {\n        this.isDisabled = true;\n        this.errorMsg = \"The password confirmation does not match.\";\n      }\n    },\n  },\n  data() {\n    return {\n      password: \"\",\n      confirmPassword: \"\",\n      isConfirmPassword: true,\n      errorMsg: \"\",\n      isDisabled: true,\n      email: \"\",\n    };\n  },\n};\n</script>\n<style lang=\"scss\">\n.font-size1 {\n  font-size: 13px;\n}\n.pt-10px {\n  padding-top: 10px !important;\n}\n.error-font {\n  font-size: 12px !important;\n  color: red !important;\n  padding: 0px 6px;\n}\n</style>\n"],"mappings":";;;;;AAyDA,SAAAA,IAAA,EAAAC,QAAA,EAAAC,MAAA;AACA,OAAAC,WAAA;AAEA;EACAC,UAAA,GAAAC,WAAA;IACAL,IAAA,EAAAA;EAAA,GAAAM,eAAA,CAAAD,WAAA,EACAJ,QAAA,CAAAM,IAAA,EAAAN,QAAA,GAAAK,eAAA,CAAAD,WAAA,EACAH,MAAA,CAAAK,IAAA,EAAAL,MAAA,GAAAG,WAAA,CACA;EACAG,OAAA,WAAAA,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,UAAA,WAAAA,WAAA;MACA,KAAAE,KAAA,GAAAC,cAAA,CAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,UAAAC,GAAA,CAAAL,KAAA;IACA;IACAM,MAAA,WAAAA,OAAA;MAGAd,WAAA,CACAe,IAAA;QACAP,KAAA,EAAAC,cAAA,CAAAC,OAAA;QACAM,QAAA,OAAAA;MACA,GACAC,IAAA,WAAAC,QAAA;QACAP,OAAA,CAAAC,GAAA,6BAAAM,QAAA,CAAAC,IAAA;MACA,GACAC,KAAA,WAAAC,KAAA;QACAV,OAAA,CAAAU,KAAA,CAAAA,KAAA;MACA;IACA;IACAC,gBAAA,WAAAA,iBAAA;MACA,IACA,kEAAAC,IAAA,CACA,KAAAP,QACA,GACA;QACA,KAAAQ,iBAAA;QACA,KAAAC,QAAA;MACA;QACA,KAAAC,eAAA;QACA,KAAAF,iBAAA;QACA,KAAAC,QAAA,GACA;MACA;IACA;IACAE,OAAA,WAAAA,QAAA;MACA,SAAAX,QAAA,SAAAU,eAAA;QACA,KAAAE,UAAA;QACA,KAAAH,QAAA;MACA;QACA,KAAAG,UAAA;QACA,KAAAH,QAAA;MACA;IACA;EACA;EACAN,IAAA,WAAAA,KAAA;IACA;MACAH,QAAA;MACAU,eAAA;MACAF,iBAAA;MACAC,QAAA;MACAG,UAAA;MACApB,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}