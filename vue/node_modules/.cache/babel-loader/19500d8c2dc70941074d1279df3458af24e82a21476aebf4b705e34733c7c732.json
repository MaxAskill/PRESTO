{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport EditSubmitTransactionReceiptModal from \"./PullOutRequests/ModalPullOut/EditSubmitTransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport ConfirmationDraftPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationDraftPullOutModal.vue\";\nimport * as XLSX from \"xlsx\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"NotifAddBoxLabel\", NotifAddBoxLabel), _defineProperty(_components, \"NotifAddItem\", NotifAddItem), _defineProperty(_components, \"NotifDeleteBoxLabel\", NotifDeleteBoxLabel), _defineProperty(_components, \"NotifDeleteItem\", NotifDeleteItem), _defineProperty(_components, \"NotifDraftSave\", NotifDraftSave), _defineProperty(_components, \"NotifItemChangeBoxLabel\", NotifItemChangeBoxLabel), _defineProperty(_components, \"NotifItemQuantity\", NotifItemQuantity), _defineProperty(_components, \"NotifRenameBoxLabel\", NotifRenameBoxLabel), _defineProperty(_components, \"NotifSubmitTransaction\", NotifSubmitTransaction), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _defineProperty(_components, \"TransactionReceiptModal\", TransactionReceiptModal), _defineProperty(_components, \"EditSubmitTransactionReceiptModal\", EditSubmitTransactionReceiptModal), _defineProperty(_components, \"DraftModal\", DraftModal), _defineProperty(_components, \"ConfirmationSubmitPullOutModal\", ConfirmationSubmitPullOutModal), _defineProperty(_components, \"ConfirmationDraftPullOutModal\", ConfirmationDraftPullOutModal), _defineProperty(_components, \"EditSubmitTransactionReceiptModal\", EditSubmitTransactionReceiptModal), _components),\n  data: function data() {\n    return {\n      showCategoryBrand: true,\n      showUploadImage: true,\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n      uploadImageFileName: \"Choose an Image\",\n      uploadExcelFileName: \"Choose a File\",\n      transactionTypeList: [{\n        value: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        label: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO for Transfer to Another Store\",\n        label: \"CPO for Transfer to Another Store\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH via In-House Service\",\n        label: \"CPO Back to WH via In-House Service\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH via Chain Distribution Center\",\n        label: \"CPO Back to WH via Chain Distribution Center\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH via 3rd Party Trucking\",\n        label: \"CPO Back to WH via 3rd Party Trucking\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH c/o Supervisor\",\n        label: \"CPO Back to WH c/o Supervisor\",\n        company: \"NBFI\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      remarksList: [\"CLOSED STORE/BRANCH - GOOD ITEMS\", \"CLOSED STORE/BRANCH - DAMAGED/DIRTY ITEMS\", \"CLOSED STORE/BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\", \"REGULAR PULL-OUT - GOOD ITEMS\", \"REGULAR PULL-OUT - DAMAGED/DIRTY ITEMS\", \"REGULAR PULL-OUT - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\", \"STORE TO STORE/BRANCH TO BRANCH - GOOD ITEMS\", \"STORE TO STORE/BRANCH TO BRANCH - DAMAGED/DIRTY ITEMS\", \"STORE TO STORE/BRANCH TO BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\"],\n      images: [],\n      files: [],\n      img_counter: 0,\n      strCategory: {\n        boxNumber: 0,\n        label: \"\"\n      },\n      isDraft: false,\n      barcode: \"item_16\",\n      saving_counter: null,\n      isMobile: null,\n      headerCellStyle: {\n        color: \"black\"\n      }\n    };\n  },\n  computed: {\n    filteredRemarks: function filteredRemarks() {\n      var _this = this;\n      return this.remarksList.filter(function (newBoxLabel) {\n        return newBoxLabel.toLowerCase().includes(_this.newBoxLabel.toLowerCase());\n      });\n    },\n    sortedBoxes: function sortedBoxes() {\n      return this.newTransaction.boxLabels.sort(function (a, b) {\n        return a.boxNumber - b.boxNumber;\n      });\n    },\n    getItemBoxLabel: function getItemBoxLabel() {\n      var _this2 = this;\n      return function (boxNumber) {\n        var boxLabel = _this2.newTransaction.boxLabels.find(function (label) {\n          return label.boxNumber === boxNumber;\n        });\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    }\n  },\n  mounted: function mounted() {\n    var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    var tooltipList = _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n    var tooltipExcel = bootstrap.Tooltip.getInstance(\"#excelBtn\");\n    tooltipExcel._config.title = \"Only XLSX file with a standard Template (Column A: Box Number, Column B: Box Label, Column C: Item Code, Column D: Quantity)\";\n    tooltipExcel.update();\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n    this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  },\n  watch: {\n    newTransaction: {\n      handler: function handler(val) {\n        this.validateSubmit();\n      },\n      deep: true\n    },\n    \"newTransaction.items\": function newTransactionItems(val, oldVal) {\n      this.addCategoryBoxLabel();\n    },\n    \"newTransaction.boxLabels\": function newTransactionBoxLabels(val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function newTransactionCompany(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function newTransactionChainCode(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function newTransactionBranchName(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function newTransactionTransactionType(val, oldVal) {\n      this.showButtons();\n    },\n    barcode: function barcode(val, oldVal) {\n      this.clearItemInput();\n    },\n    sortedBoxes: function sortedBoxes(newSortedBoxes) {\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n    }\n  },\n  methods: {\n    reArrangeItems: function reArrangeItems(deletedBoxNumber) {\n      console.log(\"Deleted ID Box Number\", deletedBoxNumber);\n      this.newTransaction.items.forEach(function (temp) {\n        if (deletedBoxNumber < temp.boxNumber) temp.boxNumber--;\n      });\n    },\n    reArrangeBoxNumber: function reArrangeBoxNumber(transfer) {\n      var _this3 = this;\n      console.log(\"Transfer from edit box Label\", transfer);\n      this.newTransaction.boxLabels = transfer;\n      console.log(\"New Transfer from edit box Label\", this.newTransaction.boxLabels);\n      this.newItemInputBox = [];\n      this.newTransaction.boxLabels.forEach(function (boxLabel) {\n        var tempIdBox = {\n          id: boxLabel.id\n        };\n        _this3.newItemInputBox.push(tempIdBox);\n      });\n      console.log(\"Itemssssss:\", this.newTransaction.items);\n    },\n    clearItemInput: function clearItemInput() {\n      this.newItemInput = \"\";\n    },\n    restrictChar: function restrictChar($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode == 91 || keyCode == 93) {\n        $event.preventDefault();\n      }\n    },\n    addCategoryBoxLabel: function addCategoryBoxLabel() {\n      var _this4 = this;\n      if (this.isDraft == false) {\n        this.newTransaction.boxLabels.forEach(function (box) {\n          var filteredItems = _this4.newTransaction.items.filter(function (item) {\n            return item.boxNumber === box.boxNumber;\n          });\n          var uniqueCategory = _toConsumableArray(new Set(filteredItems.map(function (item) {\n            return item.categorybrand;\n          })));\n          var strCategory = \"\";\n          for (var i = 0; i < uniqueCategory.length; i++) {\n            if (i == 0) strCategory = \" [ \" + uniqueCategory[i];else strCategory = strCategory + \", \" + uniqueCategory[i];\n            if (i == uniqueCategory.length - 1) strCategory = strCategory + \" ]\";\n          }\n          var tempIndex = box.boxLabel.indexOf(\"[\");\n          if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n          box.boxLabel = box.boxLabel + strCategory;\n        });\n      }\n    },\n    filterRemarks: function filterRemarks() {\n      var _this5 = this;\n      this.filteredRemarks = this.remarksList.filter(function (newBoxLabel) {\n        return newBoxLabel.toLowerCase().includes(_this5.newBoxLabel.toLowerCase());\n      });\n    },\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      var file = e.target.files[0];\n      var maxSizeInBytes = 2 * 1024 * 1024;\n      if (file && file.size > maxSizeInBytes) {\n        alert(\"Please select an image file smaller than 2MB.\");\n        e.target.value = \"\";\n        return;\n      } else {\n        this.files.push(e.target.files[0]);\n        if (!files.length) return;\n        this.createImage(files);\n        this.uploadImageFileName = e.target.files[0].name;\n      }\n    },\n    createImage: function createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          var imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n    },\n    removeImage: function removeImage(index) {\n      this.images.splice(index, 1);\n      this.uploadImageFileName = \"Choose an Image\";\n    },\n    clearImage: function clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage: function handleFileUploadImage() {\n      var _this6 = this;\n      console.log(\"image:\", this.files);\n      console.log(\"Transaction ID:\", this.transferTransactionID);\n      var config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      if (this.img_counter < this.files.length) {\n        axiosClient.post(\"/upload\", {\n          image: this.files[this.img_counter],\n          company: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionID: this.transferTransactionID\n        }, config).then(function (response) {\n          console.log(\"Success Upload Image\", response.data);\n          _this6.img_counter++;\n          setTimeout(_this6.handleFileUploadImage, 2000);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    },\n    handleFileUpload: function handleFileUpload(event) {\n      var _this7 = this;\n      console.log(\"File Name: \", event.target.files[0]);\n      if (event.target.files.length != 0) {\n        this.uploadExcelFileName = event.target.files[0].name;\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n          var data = new Uint8Array(e.target.result);\n          var workbook = XLSX.read(data, {\n            type: \"array\"\n          });\n          var worksheetName = workbook.SheetNames[0];\n          var worksheet = workbook.Sheets[worksheetName];\n          var jsonData = XLSX.utils.sheet_to_json(worksheet, {\n            header: 1\n          });\n          console.log(\"Excel Data\", jsonData);\n          _this7.myData = jsonData;\n          var arrayBox = [];\n          for (var x = 0; x < _this7.myData.length; x++) {\n            _this7.dataArray.push(_this7.myData[x]);\n            arrayBox.push(_this7.myData[x][1]);\n          }\n          console.log(\"Data:\", _this7.dataArray);\n          console.log(\"Import Excel\", _this7.dataArray.length);\n          var filteredArray = arrayBox.filter(function (value, index, self) {\n            return self.indexOf(value) === index;\n          });\n          var tempBoxLabel = [];\n          for (var x = 0; x < filteredArray.length; x++) {\n            tempBoxLabel = {\n              id: x + 1,\n              boxNumber: x + 1,\n              boxLabel: filteredArray[x]\n            };\n            _this7.newTransaction.boxLabels.push(tempBoxLabel);\n            var tempItem = [];\n            if (_this7.newTransaction.boxLabels.length == 0) {\n              tempItem = {\n                id: _this7.newTransaction.boxLabels.length + 1\n              };\n            } else {\n              tempItem = {\n                id: _this7.newTransaction.boxLabels[_this7.newTransaction.boxLabels.length - 1].id + 1\n              };\n            }\n            _this7.newItemInputBox.push(tempItem);\n          }\n          console.log(filteredArray);\n          _this7.counter = 0;\n          _this7.saveItemsExcel();\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n    saveItemsExcel: function saveItemsExcel() {\n      var _this8 = this;\n      if (this.counter < this.dataArray.length) {\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient.get(\"/fetchSameItems\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemNo: this.dataArray[this.counter][2]\n          }\n        }).then(function (response) {\n          console.log(\"Data\", response.data);\n          if (response.data.length == 0) {\n            setTimeout(_this8.saveItemsExcel, 2000);\n          }\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n            for (var i = 0; i < _this8.newTransaction.items.length; i++) {\n              if (_this8.newTransaction.items[i].code == response.data[x].ItemNo && _this8.newTransaction.items[i].boxNumber == boxNumber) {\n                _this8.newTransaction.items[i].quantity = parseInt(_this8.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              var tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription,\n                categorybrand: response.data[x].brandNames,\n                quantity: quantity,\n                size: response.data[x].Size,\n                color: response.data[x].Color,\n                boxNumber: parseInt(boxNumber),\n                category: response.data[x].Category\n              };\n              _this8.newTransaction.items.push(tempItem);\n            }\n            console.log(\"Items\", _this8.newTransaction.items);\n            _this8.isAddItem = true;\n            _this8.notifyVue(\"AddItem\", \"bottom\", \"right\");\n            setTimeout(_this8.saveItemsExcel, 2000);\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n      this.counter++;\n    },\n    numberOnly: function numberOnly($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        $event.preventDefault();\n      }\n    },\n    validateSubmit: function validateSubmit() {\n      var uniqueItems = _toConsumableArray(new Set(this.newTransaction.items.map(function (item) {\n        return item.boxNumber;\n      })));\n      var itemsValidation = false;\n      var itemsValidationTemp = false;\n      for (var j in this.newTransaction.boxLabels) {\n        for (var i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (var x in this.newTransaction.items) {\n        if (this.newTransaction.items[x].quantity == 0) {\n          itemsValidation = false;\n          var submitTooltip = document.getElementById(\"submitBTN\");\n          var tooltip = new bootstrap.Tooltip(submitTooltip, {\n            title: \"No items should have a quantity of 0.\"\n          });\n          tooltip.update();\n          break;\n        }\n      }\n      if (!itemsValidationTemp) {\n        var _submitTooltip = document.getElementById(\"submitBTN\");\n        var _tooltip = new bootstrap.Tooltip(_submitTooltip, {\n          title: \"Kindly add item/s on every boxes you've added.\"\n        });\n        _tooltip.update();\n      }\n      if (!this.newTransaction.company || !this.newTransaction.chainCode || !this.newTransaction.branchName || !this.newTransaction.transactionType) {\n        var _submitTooltip2 = document.getElementById(\"submitBTN\");\n        var _tooltip2 = new bootstrap.Tooltip(_submitTooltip2, {\n          title: \"Complete the form above to enable this button.\"\n        });\n        _tooltip2.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        var _submitTooltip3 = document.getElementById(\"submitBTN\");\n        var _tooltip3 = new bootstrap.Tooltip(_submitTooltip3, {\n          title: \"No box added. Kindly add box/es to be able to add item/s.\"\n        });\n        _tooltip3.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        var _submitTooltip4 = document.getElementById(\"submitBTN\");\n        var _tooltip4 = new bootstrap.Tooltip(_submitTooltip4, {\n          title: \"No items added. Kindly add item/s for this pull-out request.\"\n        });\n        _tooltip4.update();\n      }\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType && this.newTransaction.boxLabels.length > 0 && itemsValidation) {\n        this.isDisabledSubmit = false;\n        var _tooltip5 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip5.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel: function editingBoxLabel(_ref) {\n      var index = _ref.index,\n        value = _ref.value,\n        tempBL = _ref.tempBL;\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns: function enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons: function showButtons() {\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit: function fetchEdit() {\n      var _this9 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        var company = transactionID.split(\"=\")[2];\n        this.isDraft = true;\n        console.log(\"Draft\", this.isDraft);\n        axiosClient.get(\"/fetchEditDraftBranch\", {\n          params: {\n            company: company,\n            plID: id\n          }\n        }).then(function (response) {\n          _this9.newTransaction.company = response.data[0].company;\n          _this9.newTransaction.branchName = response.data[0].branchName;\n          _this9.newTransaction.chainCode = response.data[0].chainCode;\n          _this9.newTransaction.transactionType = response.data[0].transactionType;\n          if (response.data[0].status == \"denied\" || response.data[0].status == \"endorsement\" || response.data[0].status == \"unprocessed\") {\n            _this9.isDenied = false;\n            _this9.isCancel = true;\n          }\n          if (response.data[0].status == \"endorsement\") {\n            _this9.isApproved = true;\n            _this9.isSubmit = false;\n          }\n          axiosClient.get(\"/fetchEditDraftItem\", {\n            params: {\n              company: company,\n              plID: id\n            }\n          }).then(function (response) {\n            for (var x = 0; x < response.data.length; x++) {\n              _this9.newTransaction.items.push(response.data[x]);\n            }\n            var filteredData = _this9.newTransaction.items.filter(function (obj, index, self) {\n              var boxLabel = obj.boxLabel;\n              return self.findIndex(function (o) {\n                return o.boxLabel === boxLabel;\n              }) === index;\n            });\n            var boxData = filteredData.map(function (obj) {\n              return {\n                boxLabel: obj.boxLabel,\n                boxNumber: obj.boxNumber\n              };\n            });\n            for (var x = 0; x < boxData.length; x++) {\n              _this9.newTransaction.boxLabels.push({\n                id: boxData[x].boxNumber,\n                boxNumber: boxData[x].boxNumber,\n                boxLabel: boxData[x].boxLabel\n              });\n              _this9.newItemInputBox.push({\n                id: boxData[x].boxNumber\n              });\n              console.log(\"New Box Label:\", _this9.newTransaction.boxLabels);\n            }\n            _this9.isDraft = false;\n            console.log(\"Draft:\", _this9.isDraft);\n            if (_this9.newTransaction.company) {\n              _this9.isCompany = false;\n              _this9.isChainCode = false;\n              _this9.fetchCompany();\n              _this9.fetchChainCode();\n            }\n            if (_this9.newTransaction.chainCode) {\n              _this9.isChainCode = false;\n              _this9.isBranchName = false;\n              _this9.fetchChainName();\n              _this9.fetchChainCode();\n            }\n            if (_this9.newTransaction.branchName) {\n              _this9.isBranchName = false;\n              _this9.isTransactionType = false;\n              _this9.fetchChainName();\n            }\n            if (_this9.newTransaction.transactionType) {\n              _this9.isCompany = false;\n              _this9.isChainCode = false;\n              _this9.isBranchName = false;\n              _this9.isTransactionType = false;\n            }\n            if (_this9.newTransaction.items.length) {\n              _this9.isCompany = true;\n              _this9.isChainCode = true;\n              _this9.isBranchName = true;\n              _this9.isTransactionType = true;\n            }\n          }).catch(function (error) {});\n        }).catch(function (error) {});\n      } catch (_unused) {\n        axiosClient.get(\"/fetchPromoBranchInfo\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\")\n          }\n        }).then(function (response) {\n          _this9.newTransaction.company = response.data[0].company;\n          _this9.newTransaction.chainCode = response.data[0].chainCode;\n          _this9.newTransaction.branchName = response.data[0].branchName;\n          _this9.fetchChainCode();\n          _this9.fetchChainName();\n        }).catch(function (error) {});\n      }\n    },\n    cancelTransaction: function cancelTransaction() {\n      if (sessionStorage.getItem(\"Position\") == \"Agent\" || sessionStorage.getItem(\"Position\") == \"Approver\") this.$router.push({\n        path: \"/pull-out/requests\"\n      });else this.$router.push({\n        path: \"/pull-out/pullout-transaction\"\n      });\n    },\n    updateData: function updateData(updatedData) {},\n    openModal: function openModal(data) {\n      data.boxLabels.forEach(function (box) {\n        var tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n      });\n      console.log(\"Edit: \", data);\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      this.addCategoryBoxLabel();\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxNumber) {\n      this.validateSubmit();\n      console.log(\"New DATAs\", code, boxNumber);\n      for (var key in this.newTransaction.items) {\n        console.log(\"Condition if will delete\", this.newTransaction.items[key].code === code || this.newTransaction.items[key].boxNumber === boxNumber);\n        console.log(\"Items:\", this.newTransaction.items[key].code);\n        console.log(\"Code:\", code);\n        console.log(\"BoxNumbers:\", this.newTransaction.items[key].boxNumber);\n        console.log(\"BoxNumber:\", boxNumber);\n        if (this.newTransaction.items[key].code === code && this.newTransaction.items[key].boxNumber === boxNumber) {\n          console.log(\"Key:\", key);\n          this.newTransaction.items.splice(key, 1);\n          break;\n        }\n      }\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n    },\n    fetchItems: function fetchItems() {\n      var _this10 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput,\n              barcode: this.barcode\n            }\n          }).then(function (response) {\n            _this10.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            _this10.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      } else if (this.newItemInput.length == 0) this.itemCodeList = [];\n    },\n    compareItemCode: function compareItemCode() {\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n    },\n    handleQuantity: function handleQuantity(item) {\n      if (!item.quantity) {\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      var notifType = \"\";\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n      this.$notify({\n        component: notification,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this11 = this;\n      if (\"User\" != sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchCompany\").then(function (response) {\n        _this11.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else axiosClient.get(\"/fetchCompanyByUser\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this11.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\") this.showCategoryBrand = true;else this.showCategoryBrand = false;\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this12 = this;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainByUser\", {\n        params: {\n          company: this.newTransaction.company,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this12.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        _this12.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isChainCode = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this13 = this;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainNameByUser\", {\n        params: {\n          chainCode: this.newTransaction.chainCode,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this13.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else {\n        axiosClient.get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n            company: this.newTransaction.company\n          }\n        }).then(function (response) {\n          _this13.branchNameList = response.data;\n        }).catch(function (error) {\n          console.error(error);\n        });\n        this.isBranchName = false;\n      }\n    },\n    addItem: function addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n    },\n    saveItem: function saveItem(boxNUMBER) {\n      var _this14 = this;\n      if (this.barcode == \"item_16\") {\n        if (this.newItemInput.length > 16) this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        this.newItemInput = this.newItemInput.slice(0, 12);\n      }\n      if (this.barcode == \"item_12\") {\n        axiosClient.get(\"/fetchItemsBarcode\", {\n          params: {\n            ItemNo: this.newItemInput,\n            company: this.newTransaction.company\n          }\n        }).then(function (response) {\n          _this14.newItemInput = response.data[0].ItemNo;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n      var checkItemData = true;\n      setTimeout(function () {\n        axiosClient.get(\"/compareItemCode\", {\n          params: {\n            companyType: _this14.newTransaction.company,\n            ItemNo: _this14.newItemInput\n          }\n        }).then(function (response) {\n          if (response.data.length == 0) {\n            checkItemData = false;\n          }\n          _this14.newItemCode = response.data[0].ItemNo;\n          _this14.newItemDescription = response.data[0].ItemDescription;\n          _this14.newStyleCode = response.data[0].StyleCode;\n          var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n          axiosClient.get(\"/fetchBrands\", {\n            params: {\n              companyType: _this14.newTransaction.company,\n              brandCode: brandCode\n            }\n          }).then(function (response) {\n            _this14.newBrand = response.data[0].brandNames;\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }).catch(function (error) {\n          _this14.missItemCode = 0;\n          !_this14.newItemInput ? true : _this14.isRightCode = true;\n        });\n      }, 300);\n      var newResponseData;\n      setTimeout(function () {\n        if (checkItemData) {\n          var confirmSave = false;\n          _this14.isNewItem = !_this14.newItemInput ? true : false;\n          if (_this14.isNewItem) {\n            _this14.isRightCode = false;\n            return 0;\n          }\n          axiosClient.get(\"/fetchSameItem\", {\n            params: {\n              company: _this14.newTransaction.company,\n              ItemCode: _this14.newItemCode,\n              ItemDescription: _this14.newItemDescription,\n              StyleCode: _this14.newStyleCode\n            }\n          }).then(function (response) {\n            newResponseData = response.data;\n          }).catch(function (error) {});\n        }\n      }, 500);\n      setTimeout(function () {\n        if (checkItemData) {\n          for (var x = 0; x < newResponseData.length; x++) {\n            var flag = true;\n            for (var i = 0; i < _this14.newTransaction.items.length; i++) {\n              if (_this14.newTransaction.items[i].code == newResponseData[x].ItemNo && _this14.newTransaction.items[i].boxNumber == boxNUMBER) {\n                _this14.newTransaction.items[i].quantity = parseInt(_this14.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              if (_this14.newTransaction.company == \"NBFI\" || _this14.newTransaction.company == \"CMC\" || _this14.newTransaction.company == \"ASC\") {\n                var categorybrand = _this14.newBrand;\n              } else {\n                var categorybrand = newResponseData[x].Category;\n              }\n              var tempItem = {\n                code: newResponseData[x].ItemNo,\n                description: newResponseData[x].ItemDescription,\n                categorybrand: categorybrand,\n                quantity: 0,\n                size: newResponseData[x].Size,\n                color: newResponseData[x].Color,\n                boxNumber: boxNUMBER,\n                category: newResponseData[x].Category\n              };\n              _this14.newTransaction.items.push(tempItem);\n            }\n            _this14.isRightCode = false;\n            _this14.isItem = false;\n            _this14.isAddItem = true;\n            _this14.newItemInput = \"\";\n            _this14.showItemInput = \"\";\n            _this14.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        }\n      }, 1000);\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: parseInt(this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id) + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        console.log(\"Before Add Box\", this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id);\n        tempItem = {\n          id: parseInt(this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id) + 1\n        };\n        console.log(\"After Add Box\", tempItem);\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      console.log(\"New Add Box:\", this.newItemInputBox);\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n    },\n    submit: function submit(confirmation) {\n      var _this15 = this;\n      if (confirmation) {\n        try {\n          var uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n          if (sessionStorage.getItem(\"Position\") == \"Agent\" || sessionStorage.getItem(\"Position\") == \"Admin\") {\n            var status = \"endorsement\";\n          } else if (sessionStorage.getItem(\"Position\") == \"Admin\" || sessionStorage.getItem(\"Position\") == \"Approver\") {\n            var status = \"approved\";\n          } else {\n            var status = \"unprocessed\";\n          }\n          axiosClient.post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: status\n          }).then(function (response) {\n            _this15.transferTransactionID = id;\n            for (var x = 0; x < _this15.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator = _createForOfIteratorHelper(_this15.newTransaction.boxLabels),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var box = _step.value;\n                  if (box.id == _this15.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              axiosClient.post(\"/updatePullOutItemRequest\", {\n                id: _this15.newTransaction.items[x].id,\n                plID: id,\n                companyType: _this15.newTransaction.company,\n                brand: _this15.newTransaction.items[x].categorybrand,\n                boxNumber: _this15.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this15.newTransaction.items[x].code,\n                quantity: _this15.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n                status: status\n              }).then(function (response) {}).catch(function (error) {\n                console.error(error);\n              });\n            }\n            var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n            _this15.saving_counter = _this15.files.length * 2;\n          }).catch(function (error) {});\n          setTimeout(this.handleFileUploadImage, 2000);\n        } catch (_unused2) {\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n          axiosClient.post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: \"unprocessed\"\n          }).then(function (response) {\n            _this15.transferTransactionID = response.data.id;\n            for (var x = 0; x < _this15.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator2 = _createForOfIteratorHelper(_this15.newTransaction.boxLabels),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var box = _step2.value;\n                  if (box.id == _this15.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              axiosClient.post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: _this15.newTransaction.company,\n                brand: _this15.newTransaction.items[x].categorybrand,\n                boxNumber: _this15.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this15.newTransaction.items[x].code,\n                quantity: _this15.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n                status: \"unprocessed\"\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n            _this15.saving_counter = _this15.files.length * 2;\n          }).catch(function (error) {});\n        }\n        setTimeout(this.handleFileUploadImage, 2000);\n      }\n    },\n    draft: function draft(confirmation) {\n      var _this16 = this;\n      if (confirmation) {\n        try {\n          var uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n          axiosClient.post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            for (var x = 0; x < _this16.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator3 = _createForOfIteratorHelper(_this16.newTransaction.boxLabels),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var box = _step3.value;\n                  if (box.id == _this16.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              console.log(\"Items\", _this16.newTransaction.items);\n              axiosClient.post(\"/updatePullOutItemRequest\", {\n                plID: id,\n                companyType: _this16.newTransaction.company,\n                brand: _this16.newTransaction.items[x].categorybrand,\n                boxNumber: _this16.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this16.newTransaction.items[x].code,\n                quantity: _this16.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\")\n              }).then(function (response) {\n                console.log(\"Success Items Save: \", response.data);\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }\n            var draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          }).catch(function (error) {});\n        } catch (_unused3) {\n          axiosClient.post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            for (var x = 0; x < _this16.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator4 = _createForOfIteratorHelper(_this16.newTransaction.boxLabels),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var box = _step4.value;\n                  if (box.id == _this16.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              axiosClient.post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: _this16.newTransaction.company,\n                brand: _this16.newTransaction.items[x].categorybrand,\n                boxNumber: _this16.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this16.newTransaction.items[x].code,\n                quantity: _this16.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\")\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          }).catch(function (error) {});\n        }\n      }\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxNumber) {\n      this.validateSubmit();\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxNumber === boxNumber;\n      });\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","NotifAddBoxLabel","NotifAddItem","NotifDeleteBoxLabel","NotifDeleteItem","NotifDraftSave","NotifItemChangeBoxLabel","NotifItemQuantity","NotifRenameBoxLabel","NotifSubmitTransaction","Swal","axiosClient","EditBoxLabelModal","TransactionReceiptModal","EditSubmitTransactionReceiptModal","DraftModal","linkName","ConfirmationSubmitPullOutModal","ConfirmationDraftPullOutModal","XLSX","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","showCategoryBrand","showUploadImage","transferredData","isCompany","isChainCode","isBranchName","isTransactionType","isShowButton","itemCodeList","isEditBLDisabled","isBoxLabel","isItem","isAddItem","isDisabledSubmit","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","isApproved","isCancel","isSubmit","hoveredRow","uploadImageFileName","uploadExcelFileName","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","newItemCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","transferTransactionID","uniqueItemss","duplicateItemss","isDenied","dataArray","myData","counter","remarksList","images","files","img_counter","strCategory","boxNumber","isDraft","barcode","saving_counter","isMobile","headerCellStyle","color","computed","filteredRemarks","_this","filter","toLowerCase","includes","sortedBoxes","sort","a","b","getItemBoxLabel","_this2","find","mounted","tooltipTriggerList","document","querySelectorAll","tooltipList","_toConsumableArray","map","tooltipTriggerEl","bootstrap","Tooltip","tooltipExcel","getInstance","_config","title","update","fetchEdit","fetchCompany","window","resolveRouteChange","val","test","navigator","userAgent","watch","handler","validateSubmit","deep","newTransactionItems","oldVal","addCategoryBoxLabel","newTransactionBoxLabels","enableDropDowns","newTransactionCompany","showButtons","newTransactionChainCode","newTransactionBranchName","newTransactionTransactionType","clearItemInput","newSortedBoxes","set","methods","reArrangeItems","deletedBoxNumber","console","log","forEach","temp","reArrangeBoxNumber","transfer","_this3","tempIdBox","id","push","restrictChar","$event","keyCode","which","preventDefault","_this4","box","filteredItems","uniqueCategory","Set","categorybrand","i","length","tempIndex","indexOf","substr","trim","filterRemarks","_this5","onFileChange","e","target","dataTransfer","file","maxSizeInBytes","size","alert","createImage","vm","index","reader","FileReader","onload","event","imageUrl","result","readAsDataURL","removeImage","splice","clearImage","getElementById","frame","src","handleFileUploadImage","_this6","config","headers","post","image","transactionID","then","response","setTimeout","catch","error","handleFileUpload","_this7","Uint8Array","workbook","read","type","worksheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","arrayBox","x","filteredArray","self","tempBoxLabel","tempItem","saveItemsExcel","readAsArrayBuffer","_this8","quantity","get","params","ItemNo","flag","code","parseInt","description","ItemDescription","brandNames","Size","Color","category","Category","notifyVue","numberOnly","uniqueItems","itemsValidation","itemsValidationTemp","j","submitTooltip","tooltip","disable","editingBoxLabel","_ref","tempBL","_this9","uri","location","href","split","plID","status","filteredData","obj","findIndex","o","boxData","fetchChainCode","fetchChainName","_unused","userID","sessionStorage","getItem","cancelTransaction","$router","path","updateData","updatedData","openModal","closeModal","showButton","itemId","hideButton","removeItem","key","fetchItems","_this10","compareItemCode","parts","handleQuantity","notify","verticalAlign","horizontalAlign","notification","notifType","$notify","component","props","customValue","_this11","_this12","_this13","addItem","boxNUMBER","saveItem","_this14","slice","checkItemData","companyType","StyleCode","brandCode","toString","missItemCode","newResponseData","confirmSave","ItemCode","cancelItem","addBoxLabel","saveBoxLabel","cancelBoxLabel","submit","confirmation","_this15","email","labelBox","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","f","brand","itemCode","transactionModal","Modal","show","_unused2","_iterator2","_step2","draft","_this16","_iterator3","_step3","draftModal","_unused3","_iterator4","_step4","editBoxLabel","existingItem","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card card-generator\">\n    <!-- <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div> -->\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Company\" :disabled=\"isCompany\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Company\"\n              v-model=\"newTransaction.company\"\n              @change=\"\n                fetchChainCode(),\n                  (newTransaction.chainCode = ''),\n                  (newTransaction.branchName = ''),\n                  (newTransaction.transactionType = '')\n              \"\n              :disabled=\"isCompany\"\n            >\n              <el-option\n                v-for=\"option in companyList\"\n                class=\"select-default\"\n                :value=\"option.shortName\"\n                :label=\"option.name + ' (' + option.shortName + ') '\"\n                :key=\"option.id\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.company\" class=\"label-font\"\n              >Company is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Chain Code\" :disabled=\"isChainCode\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Chain Code\"\n              v-model=\"newTransaction.chainCode\"\n              @change=\"\n                fetchChainName(),\n                  (newTransaction.branchName = ''),\n                  (newTransaction.transactionType = '')\n              \"\n              :disabled=\"isChainCode\"\n            >\n              <el-option\n                v-for=\"option in chainCodeList\"\n                class=\"select-default\"\n                :value=\"option.chainCode\"\n                :label=\"option.chainCode\"\n                :key=\"option.chainCode\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.chainCode\" class=\"label-font\"\n              >Chain Code is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Branch Name\" :disabled=\"isBranchName\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Branch Name\"\n              v-model=\"newTransaction.branchName\"\n              @change=\"(isTransactionType = false), (newTransaction.transactionType = '')\"\n              :disabled=\"isBranchName\"\n            >\n              <el-option\n                v-for=\"option in branchNameList\"\n                class=\"select-default\"\n                :value=\"option.branchName\"\n                :label=\"option.branchName\"\n                :key=\"option.branchName\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.branchName\" class=\"label-font\"\n              >Branch Name is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Transaction Type\" :disabled=\"isTransactionType\">\n            <!-- &nbsp;<i\n              data-bs-toggle=\"tooltip\"\n              class=\"nc-icon nc-alert-circle-i font-weight-bold\"\n            ></i> -->\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Transaction Type\"\n              v-model=\"newTransaction.transactionType\"\n              :disabled=\"isTransactionType\"\n            >\n              <el-option\n                v-for=\"option in transactionTypeList\"\n                class=\"select-default\"\n                :value=\"option.value\"\n                :label=\"option.label\"\n                :key=\"option.label\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.transactionType\" class=\"label-font\"\n              >Transaction Type is required.</label\n            >\n          </fg-input>\n        </div>\n      </div>\n      <div class=\"col-sm-12\">\n        <!-- <card type=\"plain\"> -->\n        <div class=\"row mt-1\">\n          <div\n            class=\"col-xl-2 col-md-3 col-sm-6 p-0 h-div-32 mr-xl-2\"\n            v-show=\"isShowButton\"\n          >\n            <p-button\n              type=\"default\"\n              link\n              class=\"font-weight-bold w-full m-0\"\n              @click.prevent=\"addBoxLabel()\"\n            >\n              <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n            </p-button>\n          </div>\n          <div\n            class=\"col-xl-2 col-md-3 col-sm-6 p-0 h-div-32 mr-xl-2\"\n            v-show=\"isShowButton\"\n          >\n            <p-button\n              :disabled=\"isEditBLDisabled\"\n              type=\"default\"\n              link\n              class=\"font-weight-bold w-full m-0\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#editboxlabelModal\"\n              @click=\"openModal(newTransaction)\"\n            >\n              <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n            </p-button>\n          </div>\n          <div\n            class=\"col-xl-2 col-md-3 col-sm-6 p-0 h-div-32 mr-xl-2\"\n            v-show=\"isShowButton\"\n          >\n            <span\n              id=\"excelBtn\"\n              class=\"d-inline-block w-full\"\n              tabindex=\"0\"\n              data-bs-toggle=\"tooltip\"\n              data-bs-placement=\"bottom\"\n            >\n              <p-button\n                type=\"default\"\n                link\n                class=\"font-weight-bold w-full m-0\"\n                onclick=\"document.getElementById('import_items_excel').click()\"\n              >\n                Import Items Excel\n              </p-button></span\n            >\n            <input\n              id=\"import_items_excel\"\n              type=\"file\"\n              accept=\".xlsx\"\n              style=\"display: none\"\n              @change=\"handleFileUpload\"\n            />\n          </div>\n          <!-- <div class=\"col-xl-2 col-md-3 col-sm-12 p-0 h-div-32\" v-show=\"isShowButton\">\n            <span\n              onclick=\"document.getElementById('import_items_excel').click()\"\n              class=\"span-upload-image py-1\"\n              >{{ uploadExcelFileName }}</span\n            >\n          </div> -->\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 p-0 mt-2\" v-show=\"isBoxLabel\">\n            <form class=\"p-0\" @submit.prevent=\"saveBoxLabel()\">\n              <div>\n                <fg-input\n                  placeholder=\"Box Label ( Items Remarks )\"\n                  v-model.trim=\"newBoxLabel\"\n                  class=\"w-100\"\n                  @keypress=\"restrictChar\"\n                  @input=\"filterRemarks\"\n                  list=\"remarks\"\n                ></fg-input>\n                <datalist id=\"remarks\">\n                  <option v-for=\"remark in filteredRemarks\" :value=\"remark\">\n                    {{ remark }}\n                  </option>\n                </datalist>\n              </div>\n              <div class=\"mt-n3\">\n                <p-button\n                  native-type=\"submit\"\n                  type=\"default\"\n                  size=\"sm\"\n                  outline\n                  class=\"font-weight-bold\"\n                >\n                  <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                </p-button>\n                <p-button\n                  type=\"default\"\n                  size=\"sm\"\n                  outline\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"cancelBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                </p-button>\n              </div>\n              <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                >Box Label is empty.</label\n              >\n            </form>\n          </div>\n          <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n            >Box Label is required.</label\n          >\n        </div>\n        <collapse>\n          <collapse-item\n            v-for=\"boxLabel in newTransaction.boxLabels\"\n            :key=\"boxLabel.id\"\n            :title=\"`Box No. ${boxLabel.boxNumber} of ${newTransaction.boxLabels.length} \\xa0\\xa0\\xa0 ${boxLabel.boxLabel}`\"\n            name=\"1\"\n            class=\"font-weight-bold\"\n          >\n            <div v-show=\"isAddItem\">\n              <button\n                class=\"btn btn-transparent bold-button\"\n                @click.prevent=\"addItem(boxLabel.boxNumber)\"\n              >\n                <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n              </button>\n            </div>\n            <div>\n              <div\n                class=\"row\"\n                v-for=\"newItem in newItemInputBox\"\n                v-show=\"newItem.id === boxLabel.boxNumber\"\n              >\n                <form @submit.prevent=\"saveItem(boxLabel.boxNumber)\">\n                  <div class=\"row\" v-if=\"newItem.id == showItemInput\">\n                    <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-12 d-flex mt-2\">\n                      <div class=\"col-6 text-center\">\n                        <input\n                          type=\"radio\"\n                          v-model=\"barcode\"\n                          name=\"barcode\"\n                          value=\"item_16\"\n                          checked\n                        />\n                        <label for=\"item_16\">16 Digit Barcode</label><br />\n                      </div>\n                      <div class=\"col-6 text-center\">\n                        <input\n                          type=\"radio\"\n                          v-model=\"barcode\"\n                          name=\"barcode\"\n                          value=\"item_12\"\n                        />\n                        <label for=\"item_12\">12 Digit Barcode</label><br />\n                      </div>\n                    </div>\n                    <div class=\"col-xl-10 col-lg-10 col-md-10 col-sm-12 d-flex mt-2\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Item Code\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        native-type=\"submit\"\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n                    <label\n                      v-show=\"isRightCode\"\n                      class=\"label-font font-weight-normal\"\n                      style=\"margin-left: 185px\"\n                      >Invalid Item Code.</label\n                    >\n                    <label\n                      v-show=\"isNewItem\"\n                      class=\"label-font font-weight-normal\"\n                      style=\"margin-left: 185px\"\n                      >Item code is empty.</label\n                    >\n                  </div>\n\n                  <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                </form>\n              </div>\n            </div>\n\n            <!-- before table -->\n            <div class=\"row\">\n              <table\n                class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n              >\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"text-nowrap\">Item Code</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Description</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Size</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Color</th>\n                    <th scope=\"col\" class=\"text-nowrap\" v-if=\"showCategoryBrand\">\n                      Brand\n                    </th>\n                    <th scope=\"col\" class=\"text-nowrap\" v-else>Category</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Quantity</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Box Label</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-show=\"boxLabel.boxNumber == item.boxNumber\"\n                    v-for=\"item in newTransaction.items\"\n                    :key=\"item.code\"\n                  >\n                    <th scope=\"row\" class=\"px-3 d-flex\">\n                      <button\n                        class=\"gendelete-buttons\"\n                        @click.prevent=\"removeItem(item.code, item.boxNumber)\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </button>\n                      {{ item.code }}\n                    </th>\n                    <td class=\"cell px-3\" style=\"width: 550px\">\n                      {{ item.description }}\n                    </td>\n                    <td class=\"cell px-3\" style=\"width: 10px\">\n                      {{ item.size }}\n                    </td>\n                    <td class=\"cell px-3\" style=\"width: 20px\">\n                      {{ item.color }}\n                    </td>\n                    <td class=\"cell px-3\" style=\"width: 300px\">\n                      {{ item.categorybrand }}\n                    </td>\n                    <!-- <td class=\"cell\" style=\"width: 50px\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                            @keypress=\"numberOnly\"\n                          />\n                        </td> -->\n                    <td class=\"cell\">\n                      <span>\n                        <div class=\"btn-group btn-group-sm d-flex flex-row\">\n                          <p-button\n                            type=\"default\"\n                            round\n                            outline\n                            size=\"xs\"\n                            @click=\"item.quantity > 0 ? item.quantity-- : 0\"\n                          >\n                            <i class=\"nc-icon nc-simple-delete\"></i>\n                          </p-button>\n                          <input\n                            type=\"text\"\n                            @blur=\"handleQuantity(item)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                            style=\"width: 75px; text-align: center\"\n                            @keypress=\"numberOnly\"\n                          />\n                          <p-button\n                            type=\"default\"\n                            round\n                            outline\n                            size=\"xs\"\n                            @click=\"item.quantity++\"\n                          >\n                            <i class=\"nc-icon nc-simple-add\"></i>\n                          </p-button>\n                        </div>\n                      </span>\n                    </td>\n                    <td class=\"cell\" style=\"width: 300px\">\n                      <el-select\n                        class=\"table-select-box\"\n                        size=\"large\"\n                        v-model=\"item.boxNumber\"\n                        @change=\"editBoxLabel(item.code, item.quantity, item.boxNumber)\"\n                      >\n                        <el-option\n                          v-for=\"boxLabel in newTransaction.boxLabels\"\n                          class=\"table-select-box\"\n                          :value=\"boxLabel.boxNumber\"\n                          :label=\"\n                            'Box No. ' +\n                            boxLabel.boxNumber +\n                            ' of ' +\n                            newTransaction.boxLabels.length +\n                            ' ' +\n                            boxLabel.boxLabel\n                          \"\n                          :key=\"boxLabel.id\"\n                        >\n                        </el-option>\n                      </el-select>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <!-- after table -->\n            <div class=\"row\">\n              <el-table\n                class=\"p-0\"\n                border\n                :header-cell-style=\"headerCellStyle\"\n                :data=\"newTransaction.items\"\n                style=\"width: 100%\"\n              >\n                <el-table-column\n                  type=\"selection\"\n                  width=\"40\"\n                  header-align=\"center\"\n                  align=\"center\"\n                >\n                </el-table-column>\n                <el-table-column label=\"Item Code\" width=\"155\" prop=\"code\">\n                </el-table-column>\n                <el-table-column label=\"Description\" min-width=\"150\" prop=\"description\">\n                </el-table-column>\n                <el-table-column label=\"Size\" width=\"55\" prop=\"size\"> </el-table-column>\n                <el-table-column label=\"Color\" min-width=\"70\" prop=\"color\">\n                </el-table-column>\n                <el-table-column\n                  label=\"Category/Brand\"\n                  min-width=\"150\"\n                  prop=\"categorybrand\"\n                >\n                </el-table-column>\n                <el-table-column label=\"Quantity\" min-width=\"80\">\n                  <template slot-scope=\"scope\">{{ scope.row.quantity }}</template>\n                </el-table-column>\n                <el-table-column label=\"Box Label\" min-width=\"80\">\n                  <template slot-scope=\"scope\">{{ scope.row.boxNumber }}</template>\n                </el-table-column>\n              </el-table>\n            </div>\n\n            <!-- <div class=\"row\">\n                  <input\n                    placeholder=\"Input Items Remarks\"\n                    v-model=\"remarks\"\n                    @input=\"filterRemarks\"\n                    class=\"input-datalist\"\n                    list=\"remarks\"\n                  />\n                  <datalist id=\"remarks\">\n                    <option v-for=\"remark in filteredRemarks\" :value=\"remark\">\n                      {{ remark }}\n                    </option>\n                  </datalist>\n                </div> -->\n          </collapse-item>\n          <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n        </collapse>\n        <!-- </card> -->\n        <div class=\"row pt-5\" v-if=\"showUploadImage\">\n          <div class=\"col-12 p-0\">\n            <label\n              >Insert Image (Only JPG and PNG files with max 2 MB and 10 images)</label\n            ><br />\n          </div>\n\n          <div class=\"col-xxl-2 col-xl-3 col-lg-4 col-md-6 p-0\">\n            <button\n              class=\"btn btn-default m-0\"\n              style=\"width: 100%\"\n              onclick=\"document.getElementById('upload_image').click()\"\n            >\n              Upload Image\n            </button>\n            <input\n              id=\"upload_image\"\n              multiple\n              type=\"file\"\n              ref=\"image\"\n              accept=\"image/jpeg, image/png\"\n              style=\"display: none\"\n              @change=\"onFileChange\"\n            />\n          </div>\n          <!-- <div class=\"col-xxl-2 col-xl-3 col-lg-4 col-md-6 p-0\">\n            <span\n              class=\"span-upload-image\"\n              onclick=\"document.getElementById('upload_image').click()\"\n              >{{ uploadImageFileName }}</span\n            >\n          </div> -->\n        </div>\n        <div\n          v-if=\"images\"\n          class=\"d-flex justify-content-center row my-2 column-gap-3 row-gap-2\"\n        >\n          <div class=\"image-container\" v-for=\"(image, index) in images\">\n            <!-- <button @click=\"removeImage(index)\">Remove image</button> style=\"max-width: 10%; padding: 5px\"-->\n            <!-- <p-button\n              class=\"container-fluid pic-button\"\n              type=\"danger\"\n              @click=\"removeImage(index)\"\n            >\n              <i slot=\"label\" class=\"nc-icon nc-simple-remove\"></i>\n              Remove Image\n            </p-button> -->\n            <!-- <p-button type=\"default\" icon round>\n              <i class=\"fa fa-heart\"></i>\n            </p-button> -->\n            <div class=\"image-overlay\" v-if=\"!isMobile\">\n              <p-button\n                type=\"danger\"\n                class=\"image-overlay-button m-0\"\n                @click=\"removeImage(index)\"\n                icon\n                round\n              >\n                <i class=\"nc-icon nc-simple-remove\"></i>\n              </p-button>\n            </div>\n            <a class=\"imageClose\" @click=\"removeImage(index)\" v-if=\"isMobile\">&times;</a>\n            <img class=\"imageUpload\" :src=\"image\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"text-center mt-1\">\n        <button\n          class=\"btn btn-warning btn-fill btn-wd mx-1 mb-0 mt-2\"\n          data-bs-target=\"#confirmationDraftPullOut\"\n          data-bs-toggle=\"modal\"\n          v-show=\"isDenied\"\n        >\n          Save as Draft\n        </button>\n        <button\n          class=\"btn btn-warning btn-fill btn-wd mx-1 mb-0 mt-2\"\n          @click.prevent=\"cancelTransaction\"\n          v-show=\"isCancel\"\n        >\n          Cancel\n        </button>\n        <button\n          class=\"btn btn-info btn-fill btn-wd mx-1 mb-0 mt-2\"\n          @click.prevent=\"submit\"\n          v-show=\"isApproved\"\n        >\n          Approved\n        </button>\n        <span\n          id=\"submitBTN\"\n          class=\"d-inline-block\"\n          tabindex=\"0\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"bottom\"\n        >\n          <button\n            :disabled=\"isDisabledSubmit\"\n            class=\"btn btn-success btn-fill btn-wd mx-1 mb-0 mt-2\"\n            data-bs-target=\"#confirmationSubmitPullOut\"\n            data-bs-toggle=\"modal\"\n            v-show=\"isSubmit\"\n          >\n            Submit\n          </button></span\n        >\n      </div>\n      <div class=\"clearfix\"></div>\n    </div>\n    <EditBoxLabelModal\n      :transferredData=\"transferredData\"\n      :newItemInputBox=\"newItemInputBox\"\n      :remarksList=\"remarksList\"\n      @TransferDataBoxNumber=\"reArrangeBoxNumber($event)\"\n      @DeletedBoxNumber=\"reArrangeItems($event)\"\n      @closeModal=\"closeModal()\"\n      @renameBoxLabel=\"editingBoxLabel($event)\"\n    ></EditBoxLabelModal>\n\n    <TransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n      :savingCounter=\"saving_counter\"\n    ></TransactionReceiptModal>\n\n    <!-- <EditSubmitTransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n      :savingCounter=\"saving_counter\"\n    ></EditSubmitTransactionReceiptModal> -->\n\n    <DraftModal :transferTransactionID=\"transferTransactionID\"></DraftModal>\n    <ConfirmationSubmitPullOutModal\n      @confirm=\"submit($event)\"\n    ></ConfirmationSubmitPullOutModal>\n    <ConfirmationDraftPullOutModal\n      @confirm=\"draft($event)\"\n    ></ConfirmationDraftPullOutModal>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport EditSubmitTransactionReceiptModal from \"./PullOutRequests/ModalPullOut/EditSubmitTransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport ConfirmationDraftPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationDraftPullOutModal.vue\";\n// import axios, { isCancel } from \"axios\";\nimport * as XLSX from \"xlsx\";\n// import EditSubmitTransactionReceiptModal from \"./PullOutRequests/ModalPullOut/EditSubmitTransactionReceiptModal.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\n\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    NotifAddBoxLabel,\n    NotifAddItem,\n    NotifDeleteBoxLabel,\n    NotifDeleteItem,\n    NotifDraftSave,\n    NotifItemChangeBoxLabel,\n    NotifItemQuantity,\n    NotifRenameBoxLabel,\n    NotifSubmitTransaction,\n    EditBoxLabelModal,\n    TransactionReceiptModal,\n    EditSubmitTransactionReceiptModal,\n    DraftModal,\n    ConfirmationSubmitPullOutModal,\n    ConfirmationDraftPullOutModal,\n    EditSubmitTransactionReceiptModal,\n  },\n  data() {\n    return {\n      showCategoryBrand: true,\n      showUploadImage: true,\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n      uploadImageFileName: \"Choose an Image\",\n      uploadExcelFileName: \"Choose a File\",\n\n      transactionTypeList: [\n        {\n          value: \"CPO Item for Disposal in the Store c/o Supervisor\",\n          label: \"CPO Item for Disposal in the Store c/o Supervisor\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO for Transfer to Another Store\",\n          label: \"CPO for Transfer to Another Store\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH via In-House Service\",\n          label: \"CPO Back to WH via In-House Service\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH via Chain Distribution Center\",\n          label: \"CPO Back to WH via Chain Distribution Center\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH via 3rd Party Trucking\",\n          label: \"CPO Back to WH via 3rd Party Trucking\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH c/o Supervisor\",\n          label: \"CPO Back to WH c/o Supervisor\",\n          company: \"NBFI\",\n        },\n        // { value: \"Concess Direct Pull-Out\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      remarksList: [\n        \"CLOSED STORE/BRANCH - GOOD ITEMS\",\n        \"CLOSED STORE/BRANCH - DAMAGED/DIRTY ITEMS\",\n        \"CLOSED STORE/BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\",\n        \"REGULAR PULL-OUT - GOOD ITEMS\",\n        \"REGULAR PULL-OUT - DAMAGED/DIRTY ITEMS\",\n        \"REGULAR PULL-OUT - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\",\n        \"STORE TO STORE/BRANCH TO BRANCH - GOOD ITEMS\",\n        \"STORE TO STORE/BRANCH TO BRANCH - DAMAGED/DIRTY ITEMS\",\n        \"STORE TO STORE/BRANCH TO BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\",\n      ],\n      images: [],\n      files: [],\n      img_counter: 0,\n      strCategory: {\n        boxNumber: 0,\n        label: \"\",\n      },\n      isDraft: false,\n      barcode: \"item_16\",\n      saving_counter: null,\n      isMobile: null,\n      headerCellStyle: {\n        color: \"black\",\n      },\n    };\n  },\n  computed: {\n    filteredRemarks() {\n      return this.remarksList.filter((newBoxLabel) => {\n        return newBoxLabel.toLowerCase().includes(this.newBoxLabel.toLowerCase());\n      });\n    },\n    sortedBoxes() {\n      return this.newTransaction.boxLabels.sort((a, b) => a.boxNumber - b.boxNumber);\n    },\n    getItemBoxLabel() {\n      return (boxNumber) => {\n        const boxLabel = this.newTransaction.boxLabels.find(\n          (label) => label.boxNumber === boxNumber\n        );\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    },\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\n    );\n    let tooltipExcel = bootstrap.Tooltip.getInstance(\"#excelBtn\");\n    tooltipExcel._config.title =\n      \"Only XLSX file with a standard Template (Column A: Box Number, Column B: Box Label, Column C: Item Code, Column D: Quantity)\";\n    tooltipExcel.update();\n    // this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n\n    this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  },\n  watch: {\n    newTransaction: {\n      handler(val) {\n        this.validateSubmit();\n      },\n      deep: true,\n    },\n    \"newTransaction.items\": function (val, oldVal) {\n      this.addCategoryBoxLabel();\n    },\n    \"newTransaction.boxLabels\": function (val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function (val, oldVal) {\n      this.showButtons();\n    },\n    barcode: function (val, oldVal) {\n      this.clearItemInput();\n    },\n    sortedBoxes(newSortedBoxes) {\n      // Option 1: Using Vue.set\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n\n      // Option 2: Reassigning the array\n      // this.boxes = newSortedBoxes.slice();\n    },\n  },\n  methods: {\n    // cellClass() {\n    //   return \"tblItemsCell\";\n    // },\n    reArrangeItems(deletedBoxNumber) {\n      console.log(\"Deleted ID Box Number\", deletedBoxNumber);\n      this.newTransaction.items.forEach((temp) => {\n        if (deletedBoxNumber < temp.boxNumber) temp.boxNumber--;\n      });\n    },\n    reArrangeBoxNumber(transfer) {\n      console.log(\"Transfer from edit box Label\", transfer);\n\n      this.newTransaction.boxLabels = transfer;\n      console.log(\"New Transfer from edit box Label\", this.newTransaction.boxLabels);\n      this.newItemInputBox = [];\n      this.newTransaction.boxLabels.forEach((boxLabel) => {\n        var tempIdBox = {\n          id: boxLabel.id,\n        };\n        this.newItemInputBox.push(tempIdBox);\n      });\n\n      console.log(\"Itemssssss:\", this.newTransaction.items);\n    },\n    clearItemInput() {\n      this.newItemInput = \"\";\n    },\n    restrictChar($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode == 91 || keyCode == 93) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    addCategoryBoxLabel() {\n      if (this.isDraft == false) {\n        this.newTransaction.boxLabels.forEach((box) => {\n          var filteredItems = this.newTransaction.items.filter(\n            (item) => item.boxNumber === box.boxNumber\n          );\n          // console.log(\"Filtered Items\", filteredItems);\n          var uniqueCategory = [\n            ...new Set(filteredItems.map((item) => item.categorybrand)),\n          ];\n          let strCategory = \"\";\n          for (let i = 0; i < uniqueCategory.length; i++) {\n            if (i == 0) strCategory = \" [ \" + uniqueCategory[i];\n            else strCategory = strCategory + \", \" + uniqueCategory[i];\n            if (i == uniqueCategory.length - 1) strCategory = strCategory + \" ]\";\n          }\n          let tempIndex = box.boxLabel.indexOf(\"[\");\n          if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n          box.boxLabel = box.boxLabel + strCategory;\n        });\n        // console.log(\"Changes on Category Box Label\");\n      }\n      // console.log(this.newTransaction.boxLabels);\n    },\n    filterRemarks() {\n      this.filteredRemarks = this.remarksList.filter((newBoxLabel) => {\n        return newBoxLabel.toLowerCase().includes(this.newBoxLabel.toLowerCase());\n      });\n    },\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      var file = e.target.files[0];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2MB\n\n      if (file && file.size > maxSizeInBytes) {\n        // File size exceeds the limit\n        alert(\"Please select an image file smaller than 2MB.\");\n        // Clear the file input\n        e.target.value = \"\";\n        return;\n      } else {\n        this.files.push(e.target.files[0]);\n\n        if (!files.length) return;\n        this.createImage(files);\n        this.uploadImageFileName = e.target.files[0].name;\n      }\n    },\n    createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          const imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n    },\n    removeImage(index) {\n      this.images.splice(index, 1);\n      this.uploadImageFileName = \"Choose an Image\";\n    },\n    clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage() {\n      console.log(\"image:\", this.files);\n      console.log(\"Transaction ID:\", this.transferTransactionID);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      if (this.img_counter < this.files.length) {\n        axiosClient\n          .post(\n            \"/upload\",\n            {\n              image: this.files[this.img_counter],\n              company: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionID: this.transferTransactionID,\n            },\n            config\n          )\n          .then((response) => {\n            console.log(\"Success Upload Image\", response.data);\n            this.img_counter++;\n            setTimeout(this.handleFileUploadImage, 2000);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n    handleFileUpload(event) {\n      console.log(\"File Name: \", event.target.files[0]);\n      if (event.target.files.length != 0) {\n        this.uploadExcelFileName = event.target.files[0].name;\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: \"array\" });\n\n          const worksheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[worksheetName];\n\n          const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n          // header: 1 indicates that the first row contains column headers\n\n          // Save the JSON data to a Vue variable\n          console.log(\"Excel Data\", jsonData);\n          this.myData = jsonData;\n          let arrayBox = [];\n          for (var x = 0; x < this.myData.length; x++) {\n            this.dataArray.push(this.myData[x]);\n            arrayBox.push(this.myData[x][1]);\n          }\n\n          console.log(\"Data:\", this.dataArray);\n\n          console.log(\"Import Excel\", this.dataArray.length);\n\n          const filteredArray = arrayBox.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n          });\n\n          let tempBoxLabel = [];\n          for (var x = 0; x < filteredArray.length; x++) {\n            tempBoxLabel = {\n              id: x + 1,\n              boxNumber: x + 1,\n              boxLabel: filteredArray[x],\n            };\n\n            this.newTransaction.boxLabels.push(tempBoxLabel);\n            let tempItem = [];\n\n            if (this.newTransaction.boxLabels.length == 0) {\n              tempItem = {\n                id: this.newTransaction.boxLabels.length + 1,\n              };\n            } else {\n              tempItem = {\n                id:\n                  this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1]\n                    .id + 1,\n              };\n            }\n            this.newItemInputBox.push(tempItem);\n          }\n\n          console.log(filteredArray);\n          // for (var x = 0; x < this.dataArray.length; x++) {\n          //   console.log(\"ItemCode\", this.dataArray[x][2]);\n          // }\n          // var y = 0;\n          // while (y < this.dataArray.length) {\n\n          //   y++;\n          // }\n          this.counter = 0;\n          this.saveItemsExcel();\n        };\n\n        reader.readAsArrayBuffer(file);\n      }\n    },\n\n    saveItemsExcel() {\n      if (this.counter < this.dataArray.length) {\n        // console.log(\"Data\", this.dataArray[this.counter - 1]);\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient\n          .get(\"/fetchSameItems\", {\n            params: {\n              company: this.newTransaction.company,\n              ItemNo: this.dataArray[this.counter][2],\n            },\n          })\n          .then((response) => {\n            console.log(\"Data\", response.data);\n            if (response.data.length == 0) {\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n            for (var x = 0; x < response.data.length; x++) {\n              var flag = true;\n\n              for (var i = 0; i < this.newTransaction.items.length; i++) {\n                if (\n                  this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                  this.newTransaction.items[i].boxNumber == boxNumber\n                ) {\n                  this.newTransaction.items[i].quantity =\n                    parseInt(this.newTransaction.items[x].quantity) + 1;\n                  flag = false;\n                  break;\n                }\n              }\n              if (flag) {\n                let tempItem = {\n                  code: response.data[x].ItemNo,\n                  description: response.data[x].ItemDescription,\n                  categorybrand: response.data[x].brandNames,\n                  quantity: quantity,\n                  size: response.data[x].Size,\n                  color: response.data[x].Color,\n                  // boxLabel: label,\n                  boxNumber: parseInt(boxNumber),\n                  category: response.data[x].Category,\n                };\n                this.newTransaction.items.push(tempItem);\n              }\n\n              console.log(\"Items\", this.newTransaction.items);\n\n              this.isAddItem = true;\n              this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      this.counter++;\n    },\n\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    validateSubmit() {\n      let uniqueItems = [\n        ...new Set(this.newTransaction.items.map((item) => item.boxNumber)),\n      ];\n      let itemsValidation = false;\n      let itemsValidationTemp = false;\n      for (let j in this.newTransaction.boxLabels) {\n        for (let i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (let x in this.newTransaction.items) {\n        if (this.newTransaction.items[x].quantity == 0) {\n          itemsValidation = false;\n          // let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n          // tooltip._config.title = \"No items should have a quantity of 0.\";\n          // tooltip.update();\n          const submitTooltip = document.getElementById(\"submitBTN\");\n          const tooltip = new bootstrap.Tooltip(submitTooltip, {\n            title: \"No items should have a quantity of 0.\",\n          });\n          tooltip.update();\n          break;\n        }\n      }\n      if (!itemsValidationTemp) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"Kindly add item/s on every boxes you've added.\",\n        });\n        tooltip.update();\n      }\n      if (\n        !this.newTransaction.company ||\n        !this.newTransaction.chainCode ||\n        !this.newTransaction.branchName ||\n        !this.newTransaction.transactionType\n      ) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"Complete the form above to enable this button.\",\n        });\n        tooltip.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"No box added. Kindly add box/es to be able to add item/s.\",\n        });\n        tooltip.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"No items added. Kindly add item/s for this pull-out request.\",\n        });\n        tooltip.update();\n      }\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType &&\n        this.newTransaction.boxLabels.length > 0 &&\n        itemsValidation\n      ) {\n        this.isDisabledSubmit = false;\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel({ index, value, tempBL }) {\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;\n      else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n        // console.log(this.newTransaction.boxLabels.length);\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons() {\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType\n      ) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n        else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        // console.log(\"ID\", id);\n        // console.log(\"Company\", transactionID.split(\"=\")[2]);\n        var company = transactionID.split(\"=\")[2];\n        this.isDraft = true;\n        console.log(\"Draft\", this.isDraft);\n        axiosClient\n          .get(\"/fetchEditDraftBranch\", {\n            params: {\n              company: company,\n              plID: id,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Edit Branch:\", response.data, this.itemss);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.transactionType = response.data[0].transactionType;\n\n            if (\n              response.data[0].status == \"denied\" ||\n              response.data[0].status == \"endorsement\" ||\n              response.data[0].status == \"unprocessed\"\n            ) {\n              this.isDenied = false;\n              this.isCancel = true;\n            }\n\n            if (response.data[0].status == \"endorsement\") {\n              this.isApproved = true;\n              this.isSubmit = false;\n            }\n\n            axiosClient\n              .get(\"/fetchEditDraftItem\", {\n                params: {\n                  company: company,\n                  plID: id,\n                },\n              })\n              .then((response) => {\n                // console.log(\"Edit Item:\", response.data);\n                for (var x = 0; x < response.data.length; x++) {\n                  this.newTransaction.items.push(response.data[x]);\n                }\n\n                const filteredData = this.newTransaction.items.filter(\n                  (obj, index, self) => {\n                    const boxLabel = obj.boxLabel;\n                    return self.findIndex((o) => o.boxLabel === boxLabel) === index;\n                  }\n                );\n\n                const boxData = filteredData.map((obj) => {\n                  return {\n                    boxLabel: obj.boxLabel,\n                    boxNumber: obj.boxNumber,\n                  };\n                });\n\n                // console.log(\"Filtered Box label:\", boxData);\n\n                for (var x = 0; x < boxData.length; x++) {\n                  // console.log(\"Box Label:\", boxData[x].boxLabel);\n                  this.newTransaction.boxLabels.push({\n                    id: boxData[x].boxNumber,\n                    boxNumber: boxData[x].boxNumber,\n                    boxLabel: boxData[x].boxLabel,\n                  });\n                  this.newItemInputBox.push({\n                    id: boxData[x].boxNumber,\n                  });\n                  console.log(\"New Box Label:\", this.newTransaction.boxLabels);\n                }\n\n                this.isDraft = false;\n                console.log(\"Draft:\", this.isDraft);\n                if (this.newTransaction.company) {\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.fetchCompany();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.chainCode) {\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.fetchChainName();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.branchName) {\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  this.fetchChainName();\n                }\n\n                if (this.newTransaction.transactionType) {\n                  // console.log(\"Yes\", this.isShowButton);\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  // this.isShowButton = true;\n                  // console.log(\"Yes 2\", this.isShowButton);\n                }\n\n                if (this.newTransaction.items.length) {\n                  // console.log(\"Disable\", this.newTransaction.items.length);\n                  this.isCompany = true;\n                  this.isChainCode = true;\n                  this.isBranchName = true;\n                  this.isTransactionType = true;\n                  // this.isShowButton = true;\n                }\n              })\n              .catch((error) => {\n                // console.error(error);\n              });\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      } catch {\n        // console.log(\"No Edit\");\n        //Fetching Promo Info\n        axiosClient\n          .get(\"/fetchPromoBranchInfo\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            // console.log(\"Promo Branch Info:\", response.data);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.fetchChainCode();\n            this.fetchChainName();\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      }\n    },\n    cancelTransaction() {\n      // location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n      if (\n        sessionStorage.getItem(\"Position\") == \"Agent\" ||\n        sessionStorage.getItem(\"Position\") == \"Approver\"\n      )\n        this.$router.push({\n          path: \"/pull-out/requests\",\n        });\n      else\n        this.$router.push({\n          path: \"/pull-out/pullout-transaction\",\n        });\n    },\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      // console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      data.boxLabels.forEach((box) => {\n        let tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n      });\n      console.log(\"Edit: \", data);\n      this.transferredData = data;\n    },\n    closeModal() {\n      // console.log(\"CLOSE\");\n      this.addCategoryBoxLabel();\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxNumber) {\n      this.validateSubmit();\n      console.log(\"New DATAs\", code, boxNumber);\n      // this.images.splice(index, 1);\n      // this.newTransaction.items = this.newTransaction.items.filter(\n      //   (item) => item.code !== code || item.boxNumber !== boxNumber\n      // );\n      for (let key in this.newTransaction.items) {\n        console.log(\n          \"Condition if will delete\",\n          this.newTransaction.items[key].code === code ||\n            this.newTransaction.items[key].boxNumber === boxNumber\n        );\n\n        console.log(\"Items:\", this.newTransaction.items[key].code);\n        console.log(\"Code:\", code);\n        console.log(\"BoxNumbers:\", this.newTransaction.items[key].boxNumber);\n        console.log(\"BoxNumber:\", boxNumber);\n        if (\n          this.newTransaction.items[key].code === code &&\n          this.newTransaction.items[key].boxNumber === boxNumber\n        ) {\n          console.log(\"Key:\", key);\n          this.newTransaction.items.splice(key, 1);\n          break;\n        }\n      }\n      // this.newTransaction.items.for((key, index) => {\n      //   console.log(\n      //     \"Condition if will delete\",\n      //     key.code === code || key.boxNumber === boxNumber\n      //   );\n      //   if (key.code === code || key.boxNumber === boxNumber) {\n      //     this.newTransaction.items.splice(index, 1);\n      //   }\n      // });\n\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      // console.log(\"Barcode\", this.barcode);\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n                barcode: this.barcode,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      } else if (this.newItemInput.length == 0) this.itemCodeList = [];\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n    },\n    handleQuantity(item) {\n      //console.log(\"Item Quantity\", item.quantity);\n      if (!item.quantity) {\n        //console.log(\"Empty\");\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n\n      this.$notify({\n        component: notification,\n        // icon: \"nc-icon nc-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      if (\"User\" != sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchCompany\")\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else\n        axiosClient\n          .get(\"/fetchCompanyByUser\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\")\n        this.showCategoryBrand = true;\n      else this.showCategoryBrand = false;\n\n      // if (sessionStorage.getItem(\"Position\") == \"Admin\") this.showUploadImage = true;\n    },\n    fetchChainCode() {\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainByUser\", {\n            params: {\n              company: this.newTransaction.company,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n      else\n        axiosClient\n          .get(\"/fetchChain\", {\n            params: {\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainNameByUser\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else {\n        axiosClient\n          .get(\"/fetchChainName\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        this.isBranchName = false;\n      }\n    },\n    addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n      // console.log(\"clicked nUMBER:\", this.showItemInput);\n    },\n    saveItem(boxNUMBER) {\n      if (this.barcode == \"item_16\") {\n        if (this.newItemInput.length > 16)\n          this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        this.newItemInput = this.newItemInput.slice(0, 12);\n      }\n      if (this.barcode == \"item_12\") {\n        axiosClient\n          .get(\"/fetchItemsBarcode\", {\n            params: {\n              ItemNo: this.newItemInput,\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Item Barcode to Item No: \", response.data[0]);\n            this.newItemInput = response.data[0].ItemNo;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      var checkItemData = true;\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      setTimeout(() => {\n        // console.log(\"New Item Input:\", this.newItemInput);\n        axiosClient\n          .get(\"/compareItemCode\", {\n            params: {\n              companyType: this.newTransaction.company,\n              ItemNo: this.newItemInput,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Success Item No:\", response.data);\n            if (response.data.length == 0) {\n              // console.log(\"No Item Retrieved\");\n              checkItemData = false;\n            }\n            //console.log(\"Success Item Description\", response.data[0].ItemDescription);\n            this.newItemCode = response.data[0].ItemNo;\n            this.newItemDescription = response.data[0].ItemDescription;\n            this.newStyleCode = response.data[0].StyleCode;\n\n            let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n            axiosClient\n              .get(\"/fetchBrands\", {\n                params: {\n                  companyType: this.newTransaction.company,\n                  brandCode: brandCode,\n                },\n              })\n              .then((response) => {\n                //console.log(\"Success\", response.data);\n                this.newBrand = response.data[0].brandNames;\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          })\n          .catch((error) => {\n            this.missItemCode = 0;\n            !this.newItemInput ? true : (this.isRightCode = true);\n            //console.log(\"Not Equal\");\n            //console.error(error);\n          });\n      }, 300);\n      var newResponseData;\n\n      setTimeout(() => {\n        if (checkItemData) {\n          // console.log(\"Check the value of checkItemData\", checkItemData);\n          // console.log(\"Barcode Selected\", this.barcode);\n          let confirmSave = false;\n          this.isNewItem = !this.newItemInput ? true : false;\n\n          if (this.isNewItem) {\n            this.isRightCode = false;\n            return 0;\n          }\n          // console.log(\"Item Code from the input\", this.newItemCode);\n          axiosClient\n            .get(\"/fetchSameItem\", {\n              params: {\n                company: this.newTransaction.company,\n                ItemCode: this.newItemCode,\n                ItemDescription: this.newItemDescription,\n                StyleCode: this.newStyleCode,\n              },\n            })\n            .then((response) => {\n              // console.log(\"Same Item:\", response.data);\n              newResponseData = response.data;\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n          // console.log(\"Confirm Save: \", confirmSave);\n          // console.log(\"Items: \", this.newTransaction.items);\n          // console.log(this.newListBoxLabel);\n        }\n      }, 500);\n\n      setTimeout(() => {\n        if (checkItemData) {\n          for (var x = 0; x < newResponseData.length; x++) {\n            var flag = true;\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == newResponseData[x].ItemNo &&\n                this.newTransaction.items[i].boxNumber == boxNUMBER\n              ) {\n                // console.log(\"Old Item Code\", this.newTransaction.items[i].code);\n                // console.log(\"New Item Code\", newResponseData[x].ItemNo);\n                // console.log(\"Old Box Number\", this.newTransaction.items[i].boxNumber);\n                // console.log(\"New Box Number\", boxNUMBER);\n                // console.log(\"Same Item Code\");\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              // console.log(\"Company:\", this.newTransaction.company);\n              if (\n                this.newTransaction.company == \"NBFI\" ||\n                this.newTransaction.company == \"CMC\" ||\n                this.newTransaction.company == \"ASC\"\n              ) {\n                var categorybrand = this.newBrand;\n              } else {\n                var categorybrand = newResponseData[x].Category;\n              }\n              let tempItem = {\n                code: newResponseData[x].ItemNo,\n                description: newResponseData[x].ItemDescription,\n                categorybrand: categorybrand,\n                quantity: 0,\n                size: newResponseData[x].Size,\n                color: newResponseData[x].Color,\n                // boxLabel: label,\n                boxNumber: boxNUMBER,\n                category: newResponseData[x].Category,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        }\n      }, 1000);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      //console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            parseInt(\n              this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id\n            ) + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        console.log(\n          \"Before Add Box\",\n          this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id\n        );\n        tempItem = {\n          id:\n            parseInt(\n              this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id\n            ) + 1,\n        };\n        console.log(\"After Add Box\", tempItem);\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      // this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      console.log(\"New Add Box:\", this.newItemInputBox);\n      //Disable the above select buttons\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n      else this.isEditBLDisabled = false;\n    },\n    submit(confirmation) {\n      if (confirmation) {\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          //console.log(\"Company: \", this.isValid.company);\n\n          // console.log(\"company\", this.newTransaction.items);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n\n          if (\n            sessionStorage.getItem(\"Position\") == \"Agent\" ||\n            sessionStorage.getItem(\"Position\") == \"Admin\"\n          ) {\n            var status = \"endorsement\";\n          } else if (\n            sessionStorage.getItem(\"Position\") == \"Admin\" ||\n            sessionStorage.getItem(\"Position\") == \"Approver\"\n          ) {\n            var status = \"approved\";\n          } else {\n            var status = \"unprocessed\";\n          }\n          axiosClient\n            .post(\"/updatePullOutBranchRequest\", {\n              id: id,\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              email: sessionStorage.getItem(\"Email\"),\n              status: status,\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n              this.transferTransactionID = id;\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n\n                axiosClient\n                  .post(\"/updatePullOutItemRequest\", {\n                    id: this.newTransaction.items[x].id,\n                    plID: id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    email: sessionStorage.getItem(\"Email\"),\n                    status: status,\n                  })\n                  .then((response) => {\n                    // console.log(\"Success Items Save: \", response.data);\n                    // window.location.href =\n                    //   \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }\n              const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n              transactionModal.show();\n              this.saving_counter = this.files.length * 2;\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n          setTimeout(this.handleFileUploadImage, 2000);\n        } catch {\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          //console.log(\"Company: \", this.isValid.company);\n\n          //console.log(\"company\", this.newTransaction.company);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n          axiosClient\n            .post(\"/savePullOutBranchRequest\", {\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              email: sessionStorage.getItem(\"Email\"),\n              status: \"unprocessed\",\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n              this.transferTransactionID = response.data.id;\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/savePullOutItemRequest\", {\n                    plID: response.data.id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    email: sessionStorage.getItem(\"Email\"),\n                    status: \"unprocessed\",\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n              transactionModal.show();\n              this.saving_counter = this.files.length * 2;\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        }\n        setTimeout(this.handleFileUploadImage, 2000);\n      }\n    },\n    draft(confirmation) {\n      if (confirmation) {\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          axiosClient\n            .post(\"/updatePullOutBranchRequest\", {\n              id: id,\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\"),\n            })\n            .then((response) => {\n              // console.log(\"Success Branch Save: \", response.data);\n              //console.log(\"Items Length:\", this.newTransaction.items.length);\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                console.log(\"Items\", this.newTransaction.items);\n                axiosClient\n                  .post(\"/updatePullOutItemRequest\", {\n                    plID: id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    status: \"draft\",\n                    email: sessionStorage.getItem(\"Email\"),\n                  })\n                  .then((response) => {\n                    console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }\n              const draftModal = new bootstrap.Modal(\"#draftModal\");\n              draftModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        } catch {\n          axiosClient\n            .post(\"/savePullOutBranchRequest\", {\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\"),\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/savePullOutItemRequest\", {\n                    plID: response.data.id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    status: \"draft\",\n                    email: sessionStorage.getItem(\"Email\"),\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const draftModal = new bootstrap.Modal(\"#draftModal\");\n              draftModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        }\n      }\n    },\n    editBoxLabel(code, quantity, boxNumber) {\n      // console.log(\"Items\", code, quantity, boxNumber);\n      this.validateSubmit();\n      //console.log(\n      //   \"Item Code Edit:\",\n      //   code,\n      //   \" Quantity:\",\n      //   quantity,\n      //   \" Box Number\",\n      //   boxNumber\n      // );\n      //console.log(\" == : \", this.newTransaction.items);\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxNumber === boxNumber\n      );\n\n      //console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      //console.log(\"Unique Items: 1\", uniqueItems);\n      //console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      //console.log(\"Unique Items: Box Number\", uniqueItems[0].boxNumber);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n/* .tblItemsCell {\n  padding-top: 10px;\n  padding: 10px;\n  color: red;\n} */\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.gendelete-buttons {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n\n.card-attachment {\n  background-color: #66615b;\n}\n\n.card-generator {\n  margin-top: 100px;\n}\n\n.box-with-shadow {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\n  padding: 10px;\n}\n\n.pic-button {\n  padding-top: 5px;\n  padding-bottom: 5px;\n  font-size: 10px !important;\n}\n\n.w-full {\n  width: 100% !important;\n}\n.h-div-32 {\n  height: 32.2px !important;\n}\n.importBtn {\n  width: 100% !important;\n  height: 100% !important;\n  padding: 0.8vh !important;\n}\n\n.image-container {\n  position: relative;\n  width: fit-content;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\n  border-radius: 6px;\n  padding: 5px;\n  overflow: hidden;\n}\n.image-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: background 0.5s ease;\n  transition: opacity 0.5s ease;\n  border-radius: 6px;\n}\n.image-overlay:hover {\n  backdrop-filter: blur(1px);\n  background: rgba(0, 0, 0, 0.2);\n  opacity: 1;\n}\n.image-overlay-button {\n  width: 25% !important;\n  height: 25% !important;\n  /* height: 25% !important; */\n}\n.imageUpload {\n  /* position: absolute; */\n  display: block;\n  width: 10vw;\n}\n\n.imageClose {\n  display: block;\n  height: 23px;\n  font-size: 20px;\n  position: absolute;\n  top: -7px;\n  right: 1px;\n  color: red !important;\n  padding: 1.5px;\n  overflow: hidden;\n  text-decoration: none;\n  border-bottom-left-radius: 2.5px;\n  background-color: white;\n}\n\n.span-upload-image {\n  border: solid;\n  border-left: none;\n  border-width: 1px;\n  border-radius: 4px;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  padding: 8px 9px;\n  width: fit-content;\n  white-space: nowrap;\n  display: inline-block;\n}\n\n@media (max-width: 767px) {\n  .span-upload-image {\n    text-align: center;\n    border: solid;\n    border-width: 1px;\n    border-radius: 4px;\n    padding: 8px 9px;\n    width: 100%;\n    white-space: nowrap;\n    text-overflow: clip;\n    overflow: hidden;\n    margin-top: 2px;\n    display: inline-block;\n  }\n}\n@media (max-width: 575px) {\n  .imageUpload {\n    width: 40vw;\n  }\n}\n@media (min-width: 576px) {\n  .imageUpload {\n    width: 30vw;\n  }\n}\n@media (min-width: 768px) {\n  .imageUpload {\n    width: 20vw;\n  }\n}\n@media (min-width: 1283px) {\n  .imageUpload {\n    width: 15vw;\n  }\n}\n@media (min-width: 1400px) {\n  .imageUpload {\n    width: 10vw;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}