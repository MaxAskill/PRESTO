{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _components),\n  data: function data() {\n    return {\n      transferredData: \"\",\n      isDisabled: [false, true, true, true, false, true],\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      hoveredRow: null,\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"Concess Pull-Out Item Disposal\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"Concess Pull-Out - Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"Concess Pull-Out - Warehouse\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      itemss: [{\n        id: 1,\n        name: \"Item 1\"\n      }, {\n        id: 2,\n        name: \"Item 2\"\n      }, {\n        id: 1,\n        name: \"Item 3\"\n      }, {\n        id: 3,\n        name: \"Item 4\"\n      }, {\n        id: 2,\n        name: \"Item 5\"\n      }],\n      uniqueItemss: [],\n      duplicateItemss: []\n    };\n  },\n  mounted: function mounted() {\n    this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n  },\n  methods: {\n    processData: function processData() {\n      var _this = this;\n      var idMap = new Map();\n      this.items.forEach(function (item) {\n        if (!idMap.has(item.id)) {\n          idMap.set(item.id, true);\n          _this.uniqueItems.push(item);\n        } else {\n          _this.duplicateItems.push(item);\n        }\n      });\n      console.log(\"Unique Items:\", this.uniqueItems);\n      console.log(\"Duplicate Items:\", this.duplicateItems);\n    },\n    fetchEdit: function fetchEdit() {\n      var _this2 = this;\n      var uri = window.location.href;\n      var transactionID = uri.split(\"?\")[1];\n      try {\n        var id = transactionID.split(\"=\")[1];\n        console.log(\"ID\", id);\n        axiosClient.get(\"/fetchEditDraftBranch\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            plID: id\n          }\n        }).then(function (response) {\n          console.log(\"Edit Branch:\", response.data);\n          _this2.newTransaction.company = response.data[0].company;\n          _this2.newTransaction.branchName = response.data[0].branchName;\n          _this2.newTransaction.chainCode = response.data[0].chainCode;\n          _this2.newTransaction.transactionType = response.data[0].transactionType;\n        }).catch(function (error) {\n          console.error(error);\n        });\n        axiosClient.get(\"/fetchEditDraftItem\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            plID: id\n          }\n        }).then(function (response) {\n          console.log(\"Edit Item:\", response.data);\n          for (var x = 0; x < response.data.length; x++) {\n            _this2.newTransaction.items.push(response.data[x]);\n            console.log(\"New Items:\", _this2.newTransaction.items);\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } catch (_unused) {\n        console.log(\"No Edit\");\n      }\n    },\n    updateData: function updateData(updatedData) {\n      console.log(\"das\", updatedData);\n    },\n    openModal: function openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxLabel) {\n      console.log(\"New DATAs\", code, boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== code || item.boxLabel !== boxLabel;\n      });\n    },\n    fetchItems: function fetchItems() {\n      var _this3 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this3.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this3.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      }\n    },\n    compareItemCode: function compareItemCode() {\n      var _this4 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        console.log(\"Success Item No:\", response.data);\n        console.log(\"Success Item Description\", response.data[0].ItemDescription);\n        _this4.newItemDescription = response.data[0].ItemDescription;\n        _this4.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this4.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          console.log(\"Success\", response.data);\n          _this4.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (error) {\n        _this4.missItemCode = 0;\n        !_this4.newItemInput ? true : _this4.isRightCode = true;\n        console.log(\"Not Equal\");\n        console.error(error);\n      });\n    },\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this5 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this5.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this6 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this6.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.notifyVue(\"bottom\", \"right\");\n      this.isDisabled[1] = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this7 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this7.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isDisabled[2] = false;\n    },\n    addItem: function addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem: function saveItem(label, boxID) {\n      var _this8 = this;\n      this.isNewItem = !this.newItemInput ? true : false;\n      console.log(\"item\", this.newItemInput);\n      console.log(\"condition\", this.isNewItem);\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n      var str = label.toLowerCase();\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this8.newTransaction.items.length; i++) {\n            if (_this8.newTransaction.items[i].code == response.data[x].ItemNo && _this8.newTransaction.items[i].boxLabel.toLowerCase() == str) {\n              _this8.newTransaction.items[i].quantity = parseInt(_this8.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n              categorybrand: _this8.newBrand,\n              quantity: 1,\n              boxLabel: label,\n              boxNumber: boxID\n            };\n            _this8.newTransaction.items.push(tempItem);\n          }\n          _this8.isRightCode = false;\n          _this8.isItem = false;\n          _this8.isAddItem = true;\n          _this8.newItemInput = \"\";\n          _this8.showItemInput = \"\";\n          _this8.notifyVue(\"bottom\", \"right\");\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(\"Items: \", this.newTransaction.items);\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        tempItem = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1\n        };\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      console.log(\"Console:\", this.newTransaction.boxLabels);\n      this.isDisabled[0] = true;\n      this.isDisabled[1] = true;\n      this.isDisabled[2] = true;\n      this.isDisabled[3] = true;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    submit: function submit() {\n      var _this9 = this;\n      this.isValid.company = !this.newTransaction.company ? true : false;\n      this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n      this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n      this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n      this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n      this.isValid.item = !this.newTransaction.items.length ? true : false;\n      console.log(\"Company: \", this.isValid.company);\n      console.log(\"company\", this.newTransaction.company);\n      axiosClient.post(\"/savePullOutBranchRequest\", {\n        chainCode: this.newTransaction.chainCode,\n        companyType: this.newTransaction.company,\n        branchName: this.newTransaction.branchName,\n        transactionType: this.newTransaction.transactionType,\n        email: sessionStorage.getItem(\"Email\"),\n        status: \"unprocessed\"\n      }).then(function (response) {\n        console.log(\"Success Branch Save: \", response.data);\n        for (var x = 0; x < _this9.newTransaction.items.length; x++) {\n          axiosClient.post(\"/savePullOutItemRequest\", {\n            plID: response.data.id,\n            companyType: _this9.newTransaction.company,\n            brand: _this9.newTransaction.items[x].categorybrand,\n            boxNumber: _this9.newTransaction.items[x].boxNumber,\n            boxLabel: _this9.newTransaction.items[x].boxLabel,\n            itemCode: _this9.newTransaction.items[x].code,\n            quantity: _this9.newTransaction.items[x].quantity,\n            email: sessionStorage.getItem(\"Email\"),\n            status: \"unprocessed\"\n          }).then(function (response) {\n            console.log(\"Success Items Save: \", response.data);\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    draft: function draft() {\n      var _this10 = this;\n      axiosClient.post(\"/savePullOutBranchRequest\", {\n        chainCode: this.newTransaction.chainCode,\n        companyType: this.newTransaction.company,\n        branchName: this.newTransaction.branchName,\n        transactionType: this.newTransaction.transactionType,\n        status: \"draft\",\n        email: sessionStorage.getItem(\"Email\")\n      }).then(function (response) {\n        console.log(\"Success Branch Save: \", response.data);\n        for (var x = 0; x < _this10.newTransaction.items.length; x++) {\n          axiosClient.post(\"/savePullOutItemRequest\", {\n            plID: response.data.id,\n            companyType: _this10.newTransaction.company,\n            brand: _this10.newTransaction.items[x].categorybrand,\n            boxNumber: _this10.newTransaction.items[x].boxNumber,\n            boxLabel: _this10.newTransaction.items[x].boxLabel,\n            itemCode: _this10.newTransaction.items[x].code,\n            quantity: _this10.newTransaction.items[x].quantity,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            console.log(\"Success Items Save: \", response.data);\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxLabel) {\n      console.log(\"Item Code Edit:\", code, \" Quantity:\", quantity, \" Box Label\", boxLabel);\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxLabel === boxLabel;\n      });\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Label\", uniqueItems[0].boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxLabel !== uniqueItems[0].boxLabel;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","EditBoxLabelModal","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","transferredData","isDisabled","itemCodeList","isBoxLabel","isItem","isAddItem","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","hoveredRow","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","itemss","id","uniqueItemss","duplicateItemss","mounted","processData","fetchEdit","fetchCompany","methods","_this","idMap","Map","forEach","has","set","uniqueItems","push","duplicateItems","console","log","_this2","uri","window","location","href","transactionID","split","get","params","sessionStorage","getItem","plID","then","response","catch","error","x","length","_unused","updateData","updatedData","openModal","closeModal","showButton","itemId","hideButton","removeItem","code","filter","fetchItems","_this3","ItemNo","compareItemCode","_this4","indexOf","parts","slice","companyType","ItemDescription","StyleCode","brandCode","toString","substr","brandNames","missItemCode","handleQuantity","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","props","customValue","_this5","fetchChainCode","_this6","fetchChainName","_this7","addItem","saveItem","boxID","_this8","str","toLowerCase","flag","i","quantity","parseInt","tempItem","description","Size","categorybrand","boxNumber","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","submit","_this9","post","email","status","brand","itemCode","draft","_this10","editBoxLabel","filteredItems","existingItem","find","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"fetchChainCode\"\n                :disabled=\"isDisabled[0]\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.shortName\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.company\" class=\"label-font\"\n                >Company is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"fetchChainName\"\n                :disabled=\"isDisabled[1]\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.chainCode\" class=\"label-font\"\n                >Chain Code is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n                @change=\"isDisabled[3] = false\"\n                :disabled=\"isDisabled[2]\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.branchName\" class=\"label-font\"\n                >Branch Name is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n                @change=\"isDisabled[4] = true\"\n                :disabled=\"isDisabled[3]\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.transactionType\" class=\"label-font\"\n                >Transaction Type is required.</label\n              >\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" v-show=\"isDisabled[4]\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#exampleModal\"\n                  @click=\"openModal(newTransaction)\"\n                >\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label\"\n                    v-model=\"newBoxLabel\"\n                    class=\"w-100\"\n                  ></fg-input>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"saveBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n                <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                  >Box Label is empty.</label\n                >\n              </div>\n              <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n                >Box Label is required.</label\n              >\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"boxLabel.boxLabel\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.id)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.id\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <input\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n                      <!-- <input\n                        :disabled=\"switchItemCode\"\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      /> -->\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"saveItem(boxLabel.boxLabel, boxLabel.id)\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n                    <label v-show=\"isRightCode\" class=\"label-font font-weight-normal\"\n                      >Invalid Item Code.</label\n                    >\n                    <label v-show=\"isNewItem\" class=\"label-font font-weight-normal\"\n                      >Item code is empty.</label\n                    >\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"nowrap\">Description</th>\n                        <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-show=\"boxLabel.boxLabel == item.boxLabel\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.code\"\n                      >\n                        <th scope=\"row\" class=\"px-3\">\n                          <button\n                            class=\"table-delete pull-left\"\n                            @click.prevent=\"removeItem(item.code, item.boxLabel)\"\n                          >\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </button>\n                          {{ item.code }}\n                        </th>\n                        <td class=\"cell px-3\">{{ item.description }}</td>\n                        <td class=\"cell px-3\">{{ item.categorybrand }}</td>\n                        <td class=\"cell\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                          />\n                        </td>\n                        <td class=\"cell\">\n                          <!-- <input\n                            type=\"text\"\n                            @blur=\"handleLabel(item.id)\"\n                            v-model=\"item.boxLabel\"\n                            class=\"table-input-box\"\n                          /> -->\n                          <el-select\n                            class=\"table-select-box\"\n                            size=\"large\"\n                            v-model=\"item.boxLabel\"\n                            @change=\"\n                              editBoxLabel(item.code, item.quantity, item.boxLabel)\n                            \"\n                          >\n                            <el-option\n                              v-for=\"boxLabel in newTransaction.boxLabels\"\n                              class=\"table-select-box\"\n                              :value=\"boxLabel.boxLabel\"\n                              :label=\"boxLabel.boxLabel\"\n                              :key=\"boxLabel.id\"\n                            >\n                            </el-option>\n                          </el-select>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n              <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n            </collapse>\n          </card>\n        </div>\n\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-warning btn-fill btn-wd\"\n            @click.prevent=\"draft\"\n          >\n            Draft\n          </button>\n          <button\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"submit\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n      <EditBoxLabelModal\n        :transferredData=\"transferredData\"\n        @closeModal=\"transferredData\"\n      ></EditBoxLabelModal>\n    </div>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    EditBoxLabelModal,\n  },\n  data() {\n    return {\n      transferredData: \"\",\n      isDisabled: [false, true, true, true, false, true],\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      hoveredRow: null,\n\n      transactionTypeList: [\n        { value: \"CPO - BranchDisposal\", label: \"Concess Pull-Out Item Disposal\" },\n        { value: \"CPO - Store\", label: \"Concess Pull-Out - Store\" },\n        { value: \"CPO - Warehouse\", label: \"Concess Pull-Out - Warehouse\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n\n      itemss: [\n        { id: 1, name: \"Item 1\" },\n        { id: 2, name: \"Item 2\" },\n        { id: 1, name: \"Item 3\" },\n        { id: 3, name: \"Item 4\" },\n        { id: 2, name: \"Item 5\" },\n      ],\n      uniqueItemss: [],\n      duplicateItemss: [],\n    };\n  },\n  mounted() {\n    this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n  },\n  methods: {\n    processData() {\n      const idMap = new Map();\n\n      this.items.forEach((item) => {\n        if (!idMap.has(item.id)) {\n          // Unique ID\n          idMap.set(item.id, true);\n          this.uniqueItems.push(item);\n        } else {\n          // Duplicate ID\n          this.duplicateItems.push(item);\n        }\n      });\n\n      // Display the results\n      console.log(\"Unique Items:\", this.uniqueItems);\n      console.log(\"Duplicate Items:\", this.duplicateItems);\n    },\n    fetchEdit() {\n      const uri = window.location.href;\n      var transactionID = uri.split(\"?\")[1];\n      try {\n        var id = transactionID.split(\"=\")[1];\n        console.log(\"ID\", id);\n\n        axiosClient\n          .get(\"/fetchEditDraftBranch\", {\n            params: {\n              company: sessionStorage.getItem(\"Company\"),\n              plID: id,\n            },\n          })\n          .then((response) => {\n            console.log(\"Edit Branch:\", response.data);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.transactionType = response.data[0].transactionType;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        axiosClient\n          .get(\"/fetchEditDraftItem\", {\n            params: {\n              company: sessionStorage.getItem(\"Company\"),\n              plID: id,\n            },\n          })\n          .then((response) => {\n            console.log(\"Edit Item:\", response.data);\n            for (var x = 0; x < response.data.length; x++) {\n              this.newTransaction.items.push(response.data[x]);\n              console.log(\"New Items:\", this.newTransaction.items);\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } catch {\n        console.log(\"No Edit\");\n      }\n    },\n\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxLabel) {\n      console.log(\"New DATAs\", code, boxLabel);\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) => item.code !== code || item.boxLabel !== boxLabel\n      );\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Item No:\", response.data);\n          console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          !this.newItemInput ? true : (this.isRightCode = true);\n          console.log(\"Not Equal\");\n          console.error(error);\n        });\n    },\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      this.notifyVue(\"bottom\", \"right\");\n      this.isDisabled[1] = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      this.isDisabled[2] = false;\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(label, boxID) {\n      this.isNewItem = !this.newItemInput ? true : false;\n      console.log(\"item\", this.newItemInput);\n      console.log(\"condition\", this.isNewItem);\n\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n\n      let str = label.toLowerCase();\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxLabel.toLowerCase() == str\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description:\n                  response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                categorybrand: this.newBrand,\n                quantity: 1,\n                boxLabel: label,\n                boxNumber: boxID,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"bottom\", \"right\");\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      console.log(\"Items: \", this.newTransaction.items);\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        tempItem = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n        };\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      console.log(\"Console:\", this.newTransaction.boxLabels);\n      //Disable the above select buttons\n      this.isDisabled[0] = true;\n      this.isDisabled[1] = true;\n      this.isDisabled[2] = true;\n      this.isDisabled[3] = true;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    submit() {\n      this.isValid.company = !this.newTransaction.company ? true : false;\n      this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n      this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n      this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n      this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n      this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n      console.log(\"Company: \", this.isValid.company);\n\n      console.log(\"company\", this.newTransaction.company);\n      // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n      axiosClient\n        .post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          email: sessionStorage.getItem(\"Email\"),\n          status: \"unprocessed\",\n        })\n        .then((response) => {\n          console.log(\"Success Branch Save: \", response.data);\n\n          for (var x = 0; x < this.newTransaction.items.length; x++) {\n            axiosClient\n              .post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: this.newTransaction.company,\n                brand: this.newTransaction.items[x].categorybrand,\n                boxNumber: this.newTransaction.items[x].boxNumber,\n                boxLabel: this.newTransaction.items[x].boxLabel,\n                itemCode: this.newTransaction.items[x].code,\n                quantity: this.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n                status: \"unprocessed\",\n              })\n              .then((response) => {\n                console.log(\"Success Items Save: \", response.data);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    draft() {\n      axiosClient\n        .post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          status: \"draft\",\n          email: sessionStorage.getItem(\"Email\"),\n        })\n        .then((response) => {\n          console.log(\"Success Branch Save: \", response.data);\n\n          for (var x = 0; x < this.newTransaction.items.length; x++) {\n            axiosClient\n              .post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: this.newTransaction.company,\n                brand: this.newTransaction.items[x].categorybrand,\n                boxNumber: this.newTransaction.items[x].boxNumber,\n                boxLabel: this.newTransaction.items[x].boxLabel,\n                itemCode: this.newTransaction.items[x].code,\n                quantity: this.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\"),\n              })\n              .then((response) => {\n                console.log(\"Success Items Save: \", response.data);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    editBoxLabel(code, quantity, boxLabel) {\n      console.log(\n        \"Item Code Edit:\",\n        code,\n        \" Quantity:\",\n        quantity,\n        \" Box Label\",\n        boxLabel\n      );\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxLabel === boxLabel\n      );\n\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Label\", uniqueItems[0].boxLabel);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxLabel !== uniqueItems[0].boxLabel\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.table-delete {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}