{"ast":null,"code":"import axiosClient from \"../../../../axios\";\nexport default {\n  components: {},\n  watch: {},\n  props: [\"userData\", \"userRequest\", \"dateRequested\"],\n  computed: {},\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {},\n  methods: {}\n};","map":{"version":3,"names":["axiosClient","components","watch","props","computed","data","mounted","methods"],"sources":["src/components/Dashboard/Views/PullOut/PromoViewPendingRequest.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"promoViewPendingRequestModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"promoViewPendingRequestModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header py-2\">\n            <span style=\"font-size: 16px\"\n              ><b>Pending Request to Update Assigned Branch</b></span\n            >\n          </div>\n          <div class=\"modal-body row pt-2 pb-3 px-4\">\n            <span class=\"text-center mb-2\" style=\"font-size: 13px\">\n              <b>Current Assigned Branch [ {{ userData.length }} ]</b>\n            </span>\n            <div class=\"d-flex\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"user in userData\">\n              <span class=\"col-3\">{{ user.company }}</span>\n              <span class=\"col-3\">{{ user.chainCode }}</span>\n              <span class=\"col-6\">{{ user.branchName }}</span>\n            </div>\n            <div class=\"d-flex mt-3\">\n              <span class=\"col-12 text-center\" style=\"font-size: 13px\"\n                ><b>You wants to Update your Assigned Branch to: </b></span\n              >\n            </div>\n            <div class=\"col-12 mx-1text-center\">\n              <span class=\"labelRows\">Date Requested: &nbsp;&nbsp;</span>\n              <span class=\"\">{{ dateRequested }}</span>\n            </div>\n            <div class=\"d-flex mt-1\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"request in userRequest\">\n              <span class=\"col-3\">{{ request.company }}</span>\n              <span class=\"col-3\">{{ request.chainCode }}</span>\n              <span class=\"col-6\">{{ request.branchName }}</span>\n            </div>\n          </div>\n          <div class=\"modal-footer d-flex justify-content-center\">\n            <button class=\"btn btn-default\" data-bs-dismiss=\"modal\">Close</button>\n            <button class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Cancel Request</button>\n            <!-- <button\n              class=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#requestBranchApproveConfirmation\"\n              @click=\"approveRequest()\"\n            >\n              Approve this Request\n            </button> -->\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <PromoRequestBranchApproveConfirmationModal\n      :promoData=\"promoData\"\n      @confirm=\"approveRequest($event)\"\n    ></PromoRequestBranchApproveConfirmationModal> -->\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\n// import PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\n\nexport default {\n  components: {\n    // PromoRequestBranchApproveConfirmationModal,\n  },\n  watch: {},\n  props: [\"userData\", \"userRequest\", \"dateRequested\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {};\n  },\n  mounted() {},\n  methods: {},\n};\n</script>\n\n<style lang=\"scss\">\n.tr_num {\n  font-size: 35px;\n  font-weight: 700;\n}\n.labelRows {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  // margin-bottom: 5px;\n}\n</style>\n"],"mappings":"AA0EA,OAAAA,WAAA;AAGA;EACAC,UAAA,GAEA;EACAC,KAAA;EACAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;EACAC,OAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}