{"ast":null,"code":"import _objectSpread from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _Message2 from \"element-ui/lib/theme-chalk/message.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Message from \"element-ui/lib/message\";\nimport _MessageBox2 from \"element-ui/lib/theme-chalk/message-box.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _MessageBox from \"element-ui/lib/message-box\";\nimport _slicedToArray from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _Button2 from \"element-ui/lib/theme-chalk/button.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Button from \"element-ui/lib/button\";\nimport _Popconfirm2 from \"element-ui/lib/theme-chalk/popconfirm.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popconfirm from \"element-ui/lib/popconfirm\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport PButton from \"src/components/UIComponents/Button.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport SubmitEditAuthorizedDateModal from \"./PullOutRequests/ModalPullOut/SubmitEditAuthorizedDateModal.vue\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport EditSubmitTransactionReceiptModal from \"./PullOutRequests/ModalPullOut/EditSubmitTransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport ConfirmationDraftPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationDraftPullOutModal.vue\";\nimport * as XLSX from \"xlsx\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Popconfirm);\nVue.use(_Button);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PButton\", PButton), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"NotifAddBoxLabel\", NotifAddBoxLabel), _defineProperty(_components, \"NotifAddItem\", NotifAddItem), _defineProperty(_components, \"NotifDeleteBoxLabel\", NotifDeleteBoxLabel), _defineProperty(_components, \"NotifDeleteItem\", NotifDeleteItem), _defineProperty(_components, \"NotifDraftSave\", NotifDraftSave), _defineProperty(_components, \"NotifItemChangeBoxLabel\", NotifItemChangeBoxLabel), _defineProperty(_components, \"NotifItemQuantity\", NotifItemQuantity), _defineProperty(_components, \"NotifRenameBoxLabel\", NotifRenameBoxLabel), _defineProperty(_components, \"NotifSubmitTransaction\", NotifSubmitTransaction), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _defineProperty(_components, \"TransactionReceiptModal\", TransactionReceiptModal), _defineProperty(_components, \"EditSubmitTransactionReceiptModal\", EditSubmitTransactionReceiptModal), _defineProperty(_components, \"DraftModal\", DraftModal), _defineProperty(_components, \"ConfirmationSubmitPullOutModal\", ConfirmationSubmitPullOutModal), _defineProperty(_components, \"ConfirmationDraftPullOutModal\", ConfirmationDraftPullOutModal), _defineProperty(_components, \"EditSubmitTransactionReceiptModal\", EditSubmitTransactionReceiptModal), _defineProperty(_components, \"SubmitEditAuthorizedDateModal\", SubmitEditAuthorizedDateModal), _components),\n  data: function data() {\n    return {\n      showCategoryBrand: true,\n      showUploadImage: true,\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n      uploadImageFileName: \"Choose an Image\",\n      uploadExcelFileName: \"Choose a File\",\n      transactionTypeList: [{\n        value: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        label: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO for Transfer to Another Store\",\n        label: \"CPO for Transfer to Another Store\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH via In-House Delivery Service\",\n        label: \"CPO Back to WH via In-House Delivery Service\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH via Chain Distribution Center\",\n        label: \"CPO Back to WH via Chain Distribution Center\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH via 3rd Party Trucking\",\n        label: \"CPO Back to WH via 3rd Party Trucking\",\n        company: \"NBFI\"\n      }, {\n        value: \"CPO Back to WH c/o Supervisor\",\n        label: \"CPO Back to WH c/o Supervisor\",\n        company: \"NBFI\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      remarksList: [\"CLOSED STORE/BRANCH - GOOD ITEMS\", \"CLOSED STORE/BRANCH - DAMAGED/DIRTY ITEMS\", \"CLOSED STORE/BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\", \"REGULAR PULL-OUT - GOOD ITEMS\", \"REGULAR PULL-OUT - DAMAGED/DIRTY ITEMS\", \"REGULAR PULL-OUT - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\", \"STORE TO STORE/BRANCH TO BRANCH - GOOD ITEMS\", \"STORE TO STORE/BRANCH TO BRANCH - DAMAGED/DIRTY ITEMS\", \"STORE TO STORE/BRANCH TO BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\"],\n      images: [],\n      files: [],\n      img_counter: 0,\n      strCategory: {\n        boxNumber: 0,\n        label: \"\"\n      },\n      isDraft: false,\n      barcode: \"item_16\",\n      saving_counter: null,\n      isMobile: null,\n      headerCellStyle: {\n        color: \"black\"\n      },\n      cellStyle: {\n        color: \"black\",\n        fontWeight: \"normal\"\n      },\n      tableData: [],\n      multipleSelection: [],\n      deleteItemBtn: null,\n      isNBFI: false,\n      promoName: \"\",\n      promoEmail: \"\",\n      pullOutStartDate: \"\",\n      pullOutEndDate: \"\"\n    };\n  },\n  computed: {\n    filteredRemarks: function filteredRemarks() {\n      var _this = this;\n      return this.remarksList.filter(function (newBoxLabel) {\n        return newBoxLabel.toLowerCase().includes(_this.newBoxLabel.toLowerCase());\n      });\n    },\n    sortedBoxes: function sortedBoxes() {\n      return this.newTransaction.boxLabels.sort(function (a, b) {\n        return a.boxNumber - b.boxNumber;\n      });\n    },\n    getItemBoxLabel: function getItemBoxLabel() {\n      var _this2 = this;\n      return function (boxNumber) {\n        var boxLabel = _this2.newTransaction.boxLabels.find(function (label) {\n          return label.boxNumber === boxNumber;\n        });\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    }\n  },\n  mounted: function mounted() {\n    var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    var tooltipList = _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n    var tooltipExcel = bootstrap.Tooltip.getInstance(\"#excelBtn\");\n    tooltipExcel._config.title = \"Only XLSX file with a standard Template (Column A: Box Number, Column B: Box Label, Column C: Item Code, Column D: Quantity)\";\n    tooltipExcel.update();\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n    this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  },\n  watch: {\n    newTransaction: {\n      handler: function handler(val) {\n        this.validateSubmit();\n      },\n      deep: true\n    },\n    \"newTransaction.items\": function newTransactionItems(val, oldVal) {\n      this.addCategoryBoxLabel();\n      this.createTableData();\n    },\n    \"newTransaction.boxLabels\": function newTransactionBoxLabels(val, oldVal) {\n      this.enableDropDowns();\n      this.createTableData();\n    },\n    \"newTransaction.company\": function newTransactionCompany(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function newTransactionChainCode(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function newTransactionBranchName(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function newTransactionTransactionType(val, oldVal) {\n      this.showButtons();\n    },\n    barcode: function barcode(val, oldVal) {\n      this.clearItemInput();\n    },\n    sortedBoxes: function sortedBoxes(newSortedBoxes) {\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n    }\n  },\n  methods: {\n    tableRowClassName: function tableRowClassName(_ref) {\n      var row = _ref.row,\n        rowIndex = _ref.rowIndex;\n      if (row.quantity == 0) return \"warning-row\";else return \"\";\n    },\n    handleSelectAll: function handleSelectAll(val) {\n      var _this3 = this;\n      if (val.length == 0) {\n        this.multipleSelection = [];\n        this.deleteItemBtn = null;\n      } else this.deleteItemBtn = val[0].boxNumber - 1;\n      val.forEach(function (row) {\n        var temp = true;\n        var _iterator = _createForOfIteratorHelper(_this3.multipleSelection.entries()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              mul = _step$value[1];\n            if (row.boxNumber == mul.boxNumber && row.code == mul.code) {\n              temp = false;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        if (temp) _this3.multipleSelection.push(row);\n        if (_this3.multipleSelection.length > 0) {\n          var selectedItemsOther = _this3.multipleSelection.filter(function (mul) {\n            return mul.boxNumber !== val[0].boxNumber;\n          });\n          selectedItemsOther.forEach(function (rowSel) {\n            _this3.$refs.itemsDataTable[parseInt(rowSel.boxNumber - 1)].toggleRowSelection(rowSel);\n          });\n          var selectedItems = _this3.multipleSelection.filter(function (mul) {\n            return mul.boxNumber === val[0].boxNumber;\n          });\n          if (selectedItems.length > 0) _this3.multipleSelection = selectedItems;\n        }\n      });\n    },\n    handleSelect: function handleSelect(val, row) {\n      var _this4 = this;\n      if (val.length == 0) this.deleteItemBtn = null;else this.deleteItemBtn = row.boxNumber - 1;\n      var temp = true;\n      var _iterator2 = _createForOfIteratorHelper(this.multipleSelection.entries()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            index = _step2$value[0],\n            mul = _step2$value[1];\n          if (row.boxNumber == mul.boxNumber && row.code == mul.code) {\n            this.multipleSelection.splice(index, 1);\n            temp = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (temp) this.multipleSelection.push(row);\n      if (this.multipleSelection.length > 0) {\n        var selectedItemsOther = this.multipleSelection.filter(function (mul) {\n          return mul.boxNumber !== val[0].boxNumber;\n        });\n        selectedItemsOther.forEach(function (rowSel) {\n          _this4.$refs.itemsDataTable[parseInt(rowSel.boxNumber - 1)].toggleRowSelection(rowSel);\n        });\n        var selectedItems = this.multipleSelection.filter(function (mul) {\n          return mul.boxNumber === val[0].boxNumber;\n        });\n        if (selectedItems.length > 0) this.multipleSelection = selectedItems;\n      }\n    },\n    deleteSelectedItems: function deleteSelectedItems() {\n      var _this5 = this;\n      _MessageBox.confirm(\"The item/s you have selected will be remove. Continue?\", \"Removing of Items\", {\n        confirmButtonText: \"Confirm\",\n        cancelButtonText: \"Cancel\",\n        type: \"warning\"\n      }).then(function () {\n        _this5.multipleSelection.forEach(function (selected) {\n          _this5.removeItem(selected.code, selected.boxNumber);\n        });\n        _this5.deleteItemBtn = null;\n      }).catch(function () {\n        _Message({\n          type: \"info\",\n          message: \"Removing of Items canceled.\"\n        });\n      });\n    },\n    createTableData: function createTableData() {\n      var _this6 = this;\n      this.tableData = [];\n      this.multipleSelection = [];\n      this.newTransaction.boxLabels.forEach(function (box, key) {\n        _this6.tableData.push([]);\n        _this6.newTransaction.items.forEach(function (item) {\n          if (box.boxNumber == item.boxNumber) _this6.tableData[key].push(item);\n        });\n      });\n      console.log(\"Table DATA::::: \", this.tableData);\n    },\n    reArrangeItems: function reArrangeItems(deletedBoxNumber) {\n      console.log(\"Deleted ID Box Number\", deletedBoxNumber);\n      this.newTransaction.items.forEach(function (temp) {\n        if (deletedBoxNumber < temp.boxNumber) temp.boxNumber--;\n      });\n    },\n    reArrangeBoxNumber: function reArrangeBoxNumber(transfer) {\n      var _this7 = this;\n      console.log(\"Transfer from edit box Label\", transfer);\n      this.newTransaction.boxLabels = transfer;\n      console.log(\"New Transfer from edit box Label\", this.newTransaction.boxLabels);\n      this.newItemInputBox = [];\n      this.newTransaction.boxLabels.forEach(function (boxLabel) {\n        var tempIdBox = {\n          id: boxLabel.id\n        };\n        _this7.newItemInputBox.push(tempIdBox);\n      });\n      console.log(\"Itemssssss:\", this.newTransaction.items);\n    },\n    clearItemInput: function clearItemInput() {\n      this.newItemInput = \"\";\n    },\n    restrictChar: function restrictChar($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode == 91 || keyCode == 93) {\n        $event.preventDefault();\n      }\n    },\n    addCategoryBoxLabel: function addCategoryBoxLabel() {\n      var _this8 = this;\n      if (this.isDraft == false) {\n        this.newTransaction.boxLabels.forEach(function (box) {\n          var filteredItems = _this8.newTransaction.items.filter(function (item) {\n            return item.boxNumber === box.boxNumber;\n          });\n          var uniqueCategory = _toConsumableArray(new Set(filteredItems.map(function (item) {\n            return item.categorybrand;\n          })));\n          var strCategory = \"\";\n          for (var i = 0; i < uniqueCategory.length; i++) {\n            if (i == 0) strCategory = \" [ \" + uniqueCategory[i];else strCategory = strCategory + \", \" + uniqueCategory[i];\n            if (i == uniqueCategory.length - 1) strCategory = strCategory + \" ]\";\n          }\n          var tempIndex = box.boxLabel.indexOf(\"[\");\n          if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n          box.boxLabel = box.boxLabel + strCategory;\n        });\n      }\n    },\n    filterRemarks: function filterRemarks() {\n      var _this9 = this;\n      this.filteredRemarks = this.remarksList.filter(function (newBoxLabel) {\n        return newBoxLabel.toLowerCase().includes(_this9.newBoxLabel.toLowerCase());\n      });\n    },\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      var file = e.target.files[0];\n      var maxSizeInBytes = 2 * 1024 * 1024;\n      if (file && file.size > maxSizeInBytes) {\n        _Message.error(\"Please select an image file smaller than 2MB.\");\n        e.target.value = \"\";\n        return;\n      } else {\n        this.files.push(e.target.files[0]);\n        if (!files.length) return;\n        this.createImage(files);\n        this.uploadImageFileName = e.target.files[0].name;\n      }\n    },\n    createImage: function createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          var imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n      console.log(\"Images:::\", this.files);\n    },\n    removeImage: function removeImage(confirm, index) {\n      if (confirm) {\n        console.log(\"TYPE:: \", _typeof(this.images[index]), this.images[index]);\n        if (typeof this.images[index] == \"string\") {\n          var tempPath = this.images[index].split(\"/\");\n          var removePath = tempPath[tempPath.length - 1];\n          axiosClient.post(\"/deleteImage\", {\n            company: this.newTransaction.company,\n            path: removePath\n          }).then(function (response) {\n            console.log(response.data);\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }\n        this.images.splice(index, 1);\n        this.uploadImageFileName = \"Choose an Image\";\n        _Message({\n          type: \"success\",\n          message: \"Image has been removed.\"\n        });\n      }\n    },\n    clearImage: function clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage: function handleFileUploadImage() {\n      var _this10 = this;\n      console.log(\"image:\", this.files);\n      console.log(\"Transaction ID:\", this.transferTransactionID);\n      var config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      if (this.img_counter < this.files.length) {\n        axiosClient.post(\"/upload\", {\n          image: this.files[this.img_counter],\n          company: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionID: this.transferTransactionID\n        }, config).then(function (response) {\n          console.log(\"Success Upload Image\", response.data);\n          _this10.img_counter++;\n          setTimeout(_this10.handleFileUploadImage, 2000);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    },\n    handleFileUpload: function handleFileUpload(event) {\n      var _this11 = this;\n      console.log(\"File Name: \", event.target.files[0]);\n      if (event.target.files.length != 0) {\n        this.uploadExcelFileName = event.target.files[0].name;\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onload = function (e) {\n          var data = new Uint8Array(e.target.result);\n          var workbook = XLSX.read(data, {\n            type: \"array\"\n          });\n          var worksheetName = workbook.SheetNames[0];\n          var worksheet = workbook.Sheets[worksheetName];\n          var jsonData = XLSX.utils.sheet_to_json(worksheet, {\n            header: 1\n          });\n          console.log(\"Excel Data\", jsonData);\n          _this11.myData = jsonData;\n          var arrayBox = [];\n          for (var x = 0; x < _this11.myData.length; x++) {\n            _this11.dataArray.push(_this11.myData[x]);\n            arrayBox.push(_this11.myData[x][1]);\n          }\n          console.log(\"Data:\", _this11.dataArray);\n          console.log(\"Import Excel\", _this11.dataArray.length);\n          var filteredArray = arrayBox.filter(function (value, index, self) {\n            return self.indexOf(value) === index;\n          });\n          var tempBoxLabel = [];\n          for (var x = 0; x < filteredArray.length; x++) {\n            tempBoxLabel = {\n              id: x + 1,\n              boxNumber: x + 1,\n              boxLabel: filteredArray[x]\n            };\n            _this11.newTransaction.boxLabels.push(tempBoxLabel);\n            var tempItem = [];\n            if (_this11.newTransaction.boxLabels.length == 0) {\n              tempItem = {\n                id: _this11.newTransaction.boxLabels.length + 1\n              };\n            } else {\n              tempItem = {\n                id: _this11.newTransaction.boxLabels[_this11.newTransaction.boxLabels.length - 1].id + 1\n              };\n            }\n            _this11.newItemInputBox.push(tempItem);\n          }\n          console.log(filteredArray);\n          _this11.counter = 0;\n          _this11.saveItemsExcel();\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n    saveItemsExcel: function saveItemsExcel() {\n      var _this12 = this;\n      if (this.counter < this.dataArray.length) {\n        console.log(\"Counter:\", this.counter + \" Data Length: \", this.dataArray.length);\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient.get(\"/fetchSameItems\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemNo: this.dataArray[this.counter][2]\n          }\n        }).then(function (response) {\n          console.log(\"Data\", response.data);\n          if (response.data.length == 0) {\n            setTimeout(_this12.saveItemsExcel, 2000);\n          }\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n            for (var i = 0; i < _this12.newTransaction.items.length; i++) {\n              if (_this12.newTransaction.items[i].code == response.data[x].ItemNo && _this12.newTransaction.items[i].boxNumber == boxNumber) {\n                _this12.newTransaction.items[i].quantity = parseInt(_this12.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              var tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription,\n                categorybrand: response.data[x].brandNames,\n                quantity: quantity,\n                size: response.data[x].Size,\n                color: response.data[x].Color,\n                boxNumber: parseInt(boxNumber),\n                category: response.data[x].Category\n              };\n              _this12.newTransaction.items.push(tempItem);\n            }\n            console.log(\"Items\", _this12.newTransaction.items);\n            _this12.isAddItem = true;\n            _this12.notifyVue(\"AddItem\", \"bottom\", \"right\");\n            setTimeout(_this12.saveItemsExcel, 2000);\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } else {\n        this.draft(true);\n      }\n      this.counter++;\n    },\n    numberOnly: function numberOnly($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        $event.preventDefault();\n      }\n    },\n    validateSubmit: function validateSubmit() {\n      var uniqueItems = _toConsumableArray(new Set(this.newTransaction.items.map(function (item) {\n        return item.boxNumber;\n      })));\n      var itemsValidation = false;\n      var itemsValidationTemp = false;\n      for (var j in this.newTransaction.boxLabels) {\n        for (var i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (var x in this.newTransaction.items) {\n        if (this.newTransaction.items[x].quantity == 0) {\n          itemsValidation = false;\n          var submitTooltip = document.getElementById(\"submitBTN\");\n          var tooltip = new bootstrap.Tooltip(submitTooltip, {\n            title: \"No items should have a quantity of 0.\"\n          });\n          tooltip.update();\n          break;\n        }\n      }\n      if (!itemsValidationTemp) {\n        var _submitTooltip = document.getElementById(\"submitBTN\");\n        var _tooltip = new bootstrap.Tooltip(_submitTooltip, {\n          title: \"Kindly add item/s on every boxes you've added.\"\n        });\n        _tooltip.update();\n      }\n      if (!this.newTransaction.company || !this.newTransaction.chainCode || !this.newTransaction.branchName || !this.newTransaction.transactionType) {\n        var _submitTooltip2 = document.getElementById(\"submitBTN\");\n        var _tooltip2 = new bootstrap.Tooltip(_submitTooltip2, {\n          title: \"Complete the form above to enable this button.\"\n        });\n        _tooltip2.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        var _submitTooltip3 = document.getElementById(\"submitBTN\");\n        var _tooltip3 = new bootstrap.Tooltip(_submitTooltip3, {\n          title: \"No box added. Kindly add box/es to be able to add item/s.\"\n        });\n        _tooltip3.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        var _submitTooltip4 = document.getElementById(\"submitBTN\");\n        var _tooltip4 = new bootstrap.Tooltip(_submitTooltip4, {\n          title: \"No items added. Kindly add item/s for this pull-out request.\"\n        });\n        _tooltip4.update();\n      }\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType && this.newTransaction.boxLabels.length > 0 && itemsValidation) {\n        this.isDisabledSubmit = false;\n        var _tooltip5 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip5.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel: function editingBoxLabel(_ref2) {\n      var index = _ref2.index,\n        value = _ref2.value,\n        tempBL = _ref2.tempBL;\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns: function enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons: function showButtons() {\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit: function fetchEdit() {\n      var _this13 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        var company = this.decodeFromAlphanumeric(transactionID.split(\"=\")[2]);\n        this.isDraft = true;\n        console.log(\"PLIDDD: \", id);\n        this.transferTransactionID = id;\n        axiosClient.get(\"/fetchEditDraftBranch\", {\n          params: {\n            company: company,\n            plID: id\n          }\n        }).then(function (response) {\n          console.log(\"Edit Branch:\", response.data, _this13.itemss);\n          _this13.newTransaction.company = response.data[0].company;\n          _this13.newTransaction.branchName = response.data[0].branchName;\n          _this13.newTransaction.chainCode = response.data[0].chainCode;\n          _this13.newTransaction.transactionType = response.data[0].transactionType;\n          _this13.promoName = response.data[0].name;\n          _this13.promoEmail = response.data[0].promoEmail;\n          _this13.pullOutStartDate = response.data[0].dateStart;\n          _this13.pullOutEndDate = response.data[0].dateEnd;\n          if (response.data[0].status == \"denied\" || response.data[0].status == \"endorsement\" || response.data[0].status == \"unprocessed\") {\n            _this13.isDenied = false;\n            _this13.isCancel = true;\n            _this13.isApproved = true;\n            _this13.isSubmit = false;\n          } else {\n            _this13.isDenied = true;\n            _this13.isCancel = false;\n          }\n          axiosClient.get(\"/fetchEditDraftItem\", {\n            params: {\n              company: company,\n              plID: id\n            }\n          }).then(function (response) {\n            for (var x = 0; x < response.data.length; x++) {\n              _this13.newTransaction.items.push(response.data[x]);\n            }\n            var filteredData = _this13.newTransaction.items.filter(function (obj, index, self) {\n              var boxLabel = obj.boxLabel;\n              return self.findIndex(function (o) {\n                return o.boxLabel === boxLabel;\n              }) === index;\n            });\n            var boxData = filteredData.map(function (obj) {\n              return {\n                boxLabel: obj.boxLabel,\n                boxNumber: obj.boxNumber\n              };\n            });\n            for (var x = 0; x < boxData.length; x++) {\n              _this13.newTransaction.boxLabels.push({\n                id: boxData[x].boxNumber,\n                boxNumber: boxData[x].boxNumber,\n                boxLabel: boxData[x].boxLabel\n              });\n              _this13.newItemInputBox.push({\n                id: boxData[x].boxNumber\n              });\n              console.log(\"New Box Label:\", _this13.newTransaction.boxLabels);\n            }\n            _this13.isDraft = false;\n            console.log(\"Draft:\", _this13.isDraft);\n            if (_this13.newTransaction.company) {\n              _this13.isCompany = false;\n              _this13.isChainCode = false;\n              _this13.fetchCompany();\n              _this13.fetchChainCode();\n            }\n            if (_this13.newTransaction.chainCode) {\n              _this13.isChainCode = false;\n              _this13.isBranchName = false;\n              _this13.fetchChainName();\n              _this13.fetchChainCode();\n            }\n            if (_this13.newTransaction.branchName) {\n              _this13.isBranchName = false;\n              _this13.isTransactionType = false;\n              _this13.fetchChainName();\n            }\n            if (_this13.newTransaction.transactionType) {\n              _this13.isCompany = false;\n              _this13.isChainCode = false;\n              _this13.isBranchName = false;\n              _this13.isTransactionType = false;\n            }\n            if (_this13.newTransaction.items.length) {\n              _this13.isCompany = true;\n              _this13.isChainCode = true;\n              _this13.isBranchName = true;\n              _this13.isTransactionType = true;\n            }\n          }).catch(function (error) {\n            console.error(error);\n          });\n          axiosClient.get(\"/fetchImageBranchDoc\", {\n            params: {\n              transactionID: id,\n              company: company\n            }\n          }).then(function (response) {\n            console.log(\"Pull out path image:\", response.data);\n            console.log(\"Pull out path image length:\", response.data.length);\n            _this13.images = response.data.imagePaths;\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } catch (_unused) {\n        axiosClient.get(\"/fetchPromoBranchInfo\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\")\n          }\n        }).then(function (response) {\n          _this13.newTransaction.company = response.data[0].company;\n          _this13.newTransaction.chainCode = response.data[0].chainCode;\n          _this13.newTransaction.branchName = response.data[0].branchName;\n          _this13.fetchChainCode();\n          _this13.fetchChainName();\n        }).catch(function (error) {});\n      }\n    },\n    cancelTransaction: function cancelTransaction() {\n      if (sessionStorage.getItem(\"Position\") == \"Reviewer\" || sessionStorage.getItem(\"Position\") == \"Approver\") this.$router.push({\n        path: \"/pull-out/requests\"\n      });else this.$router.push({\n        path: \"/pull-out/pullout-transaction\"\n      });\n    },\n    updateData: function updateData(updatedData) {},\n    openModal: function openModal(data) {\n      data.boxLabels.forEach(function (box) {\n        var tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n      });\n      console.log(\"Edit: \", data);\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      this.addCategoryBoxLabel();\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxNumber) {\n      this.validateSubmit();\n      console.log(\"New DATAs\", code, boxNumber);\n      for (var key in this.newTransaction.items) {\n        console.log(\"Condition if will delete\", this.newTransaction.items[key].code === code || this.newTransaction.items[key].boxNumber === boxNumber);\n        console.log(\"Items:\", this.newTransaction.items[key].code);\n        console.log(\"Code:\", code);\n        console.log(\"BoxNumbers:\", this.newTransaction.items[key].boxNumber);\n        console.log(\"BoxNumber:\", boxNumber);\n        if (this.newTransaction.items[key].code === code && this.newTransaction.items[key].boxNumber === boxNumber) {\n          try {\n            var uri = window.location.href;\n            var transactionID = uri.split(\"?\")[1];\n            var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n            var company = transactionID.split(\"=\")[2];\n            axiosClient.post(\"/logsDeleteItemEdit\", {\n              id: id,\n              itemCode: this.newTransaction.items[key].code,\n              boxNumber: this.newTransaction.items[key].boxNumber,\n              userID: sessionStorage.getItem(\"UserID\")\n            }).then(function (response) {\n              console.log(\"Success Log:\", response.data);\n            }).catch(function (error) {\n              console.error(error);\n            });\n          } catch (_unused2) {\n            console.log(\"No Changes\");\n          }\n          console.log(\"Key:\", key);\n          this.newTransaction.items.splice(key, 1);\n          break;\n        }\n      }\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n    },\n    fetchItems: function fetchItems() {\n      var _this14 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput,\n              barcode: this.barcode\n            }\n          }).then(function (response) {\n            _this14.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            _this14.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      } else if (this.newItemInput.length == 0) this.itemCodeList = [];\n    },\n    compareItemCode: function compareItemCode() {\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n    },\n    handleQuantity: function handleQuantity(item) {\n      if (!item.quantity) {\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      var notifType = \"\";\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n      this.$notify({\n        component: notification,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this15 = this;\n      if (\"User\" != sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchCompany\").then(function (response) {\n        _this15.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else axiosClient.get(\"/fetchCompanyByUser\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this15.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\") this.showCategoryBrand = true;else this.showCategoryBrand = false;\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this16 = this;\n      if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") this.isNBFI = true;else this.isNBFI = false;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainByUser\", {\n        params: {\n          company: this.newTransaction.company,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this16.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        _this16.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isChainCode = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this17 = this;\n      if (\"User\" == sessionStorage.getItem(\"Position\")) axiosClient.get(\"/fetchChainNameByUser\", {\n        params: {\n          chainCode: this.newTransaction.chainCode,\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(function (response) {\n        _this17.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });else {\n        axiosClient.get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n            company: this.newTransaction.company\n          }\n        }).then(function (response) {\n          _this17.branchNameList = response.data;\n        }).catch(function (error) {\n          console.error(error);\n        });\n        this.isBranchName = false;\n      }\n    },\n    addItem: function addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n    },\n    saveItem: function saveItem(boxNUMBER) {\n      var _this18 = this;\n      if (this.barcode == \"item_16\") {\n        if (this.newItemInput.length > 16) this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        this.newItemInput = this.newItemInput.slice(0, 12);\n      }\n      if (this.barcode == \"item_12\") {\n        axiosClient.get(\"/fetchItemsBarcode\", {\n          params: {\n            ItemNo: this.newItemInput,\n            company: this.newTransaction.company\n          }\n        }).then(function (response) {\n          _this18.newItemInput = response.data[0].ItemNo;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n      var checkItemData = true;\n      setTimeout(function () {\n        axiosClient.get(\"/compareItemCode\", {\n          params: {\n            companyType: _this18.newTransaction.company,\n            ItemNo: _this18.newItemInput\n          }\n        }).then(function (response) {\n          if (response.data.length == 0) {\n            checkItemData = false;\n          }\n          _this18.newItemCode = response.data[0].ItemNo;\n          _this18.newItemDescription = response.data[0].ItemDescription;\n          _this18.newStyleCode = response.data[0].StyleCode;\n          var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n          axiosClient.get(\"/fetchBrands\", {\n            params: {\n              companyType: _this18.newTransaction.company,\n              brandCode: brandCode\n            }\n          }).then(function (response) {\n            _this18.newBrand = response.data[0].brandNames;\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }).catch(function (error) {\n          _this18.missItemCode = 0;\n          !_this18.newItemInput ? true : _this18.isRightCode = true;\n        });\n      }, 300);\n      var newResponseData;\n      setTimeout(function () {\n        if (checkItemData) {\n          var confirmSave = false;\n          _this18.isNewItem = !_this18.newItemInput ? true : false;\n          if (_this18.isNewItem) {\n            _this18.isRightCode = false;\n            return 0;\n          }\n          axiosClient.get(\"/fetchSameItem\", {\n            params: {\n              company: _this18.newTransaction.company,\n              ItemCode: _this18.newItemCode,\n              ItemDescription: _this18.newItemDescription,\n              StyleCode: _this18.newStyleCode\n            }\n          }).then(function (response) {\n            newResponseData = response.data;\n          }).catch(function (error) {});\n        }\n      }, 500);\n      setTimeout(function () {\n        if (checkItemData) {\n          for (var x = 0; x < newResponseData.length; x++) {\n            var flag = true;\n            for (var i = 0; i < _this18.newTransaction.items.length; i++) {\n              if (_this18.newTransaction.items[i].code == newResponseData[x].ItemNo && _this18.newTransaction.items[i].boxNumber == boxNUMBER) {\n                _this18.newTransaction.items[i].quantity = parseInt(_this18.newTransaction.items[i].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              if (_this18.newTransaction.company == \"NBFI\" || _this18.newTransaction.company == \"CMC\" || _this18.newTransaction.company == \"ASC\") {\n                var categorybrand = _this18.newBrand;\n              } else {\n                var categorybrand = newResponseData[x].Category;\n              }\n              var tempItem = {\n                code: newResponseData[x].ItemNo,\n                description: newResponseData[x].ItemDescription,\n                categorybrand: categorybrand,\n                quantity: 0,\n                size: newResponseData[x].Size,\n                color: newResponseData[x].Color,\n                boxNumber: boxNUMBER,\n                category: newResponseData[x].Category\n              };\n              _this18.newTransaction.items.push(tempItem);\n            }\n            _this18.isRightCode = false;\n            _this18.isItem = false;\n            _this18.isAddItem = true;\n            _this18.newItemInput = \"\";\n            _this18.showItemInput = \"\";\n            _this18.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        }\n      }, 1000);\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: parseInt(this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id) + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        console.log(\"Before Add Box\", this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id);\n        tempItem = {\n          id: parseInt(this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id) + 1\n        };\n        console.log(\"After Add Box\", tempItem);\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      console.log(\"New Add Box:\", this.newItemInputBox);\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n    },\n    submit: function submit(confirmation) {\n      var _this19 = this;\n      if (confirmation) {\n        try {\n          var uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n          console.log(\"Items After Saving:\", this.newTransaction.items);\n        } catch (_unused3) {\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n          axiosClient.post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: \"unprocessed\"\n          }).then(function (response) {\n            _this19.transferTransactionID = response.data.id;\n            for (var x = 0; x < _this19.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator3 = _createForOfIteratorHelper(_this19.newTransaction.boxLabels),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var box = _step3.value;\n                  if (box.id == _this19.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              axiosClient.post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: _this19.newTransaction.company,\n                brand: _this19.newTransaction.items[x].categorybrand,\n                boxNumber: _this19.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this19.newTransaction.items[x].code,\n                quantity: _this19.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n                status: \"unprocessed\"\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n            _this19.saving_counter = _this19.files.length * 2;\n          }).catch(function (error) {});\n        }\n        setTimeout(this.handleFileUploadImage, 2000);\n      }\n    },\n    draft: function draft(confirmation) {\n      var _this20 = this;\n      if (confirmation) {\n        try {\n          var uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n          axiosClient.post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            console.log(\"draft PLID:: \", id);\n            _this20.transferTransactionID = id;\n            for (var x = 0; x < _this20.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator4 = _createForOfIteratorHelper(_this20.newTransaction.boxLabels),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var box = _step4.value;\n                  if (box.id == _this20.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              console.log(\"Items\", _this20.newTransaction.items);\n              console.log(\"Length Items\", _this20.newTransaction.items.length);\n              axiosClient.post(\"/updatePullOutItemRequest\", {\n                plID: id,\n                companyType: _this20.newTransaction.company,\n                brand: _this20.newTransaction.items[x].categorybrand,\n                boxNumber: _this20.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this20.newTransaction.items[x].code,\n                quantity: _this20.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\")\n              }).then(function (response) {\n                console.log(\"Success Items Save: \", response.data);\n              }).catch(function (error) {\n                console.error(error);\n              });\n            }\n            var draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          }).catch(function (error) {});\n          setTimeout(this.handleFileUploadImage, 2000);\n        } catch (_unused4) {\n          axiosClient.post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            _this20.transferTransactionID = id;\n            for (var x = 0; x < _this20.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator5 = _createForOfIteratorHelper(_this20.newTransaction.boxLabels),\n                _step5;\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var box = _step5.value;\n                  if (box.id == _this20.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n              axiosClient.post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: _this20.newTransaction.company,\n                brand: _this20.newTransaction.items[x].categorybrand,\n                boxNumber: _this20.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this20.newTransaction.items[x].code,\n                quantity: _this20.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\")\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          }).catch(function (error) {});\n          setTimeout(this.handleFileUploadImage, 2000);\n        }\n      }\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxNumber) {\n      this.validateSubmit();\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxNumber === boxNumber;\n      });\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          if (existingItem.quantity == 0 && item.quantity == 0) existingItem.quantity = 1;else existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    },\n    decodeFromAlphanumeric: function decodeFromAlphanumeric(input) {\n      var result = \"\";\n      for (var i = 0; i < input.length; i += 2) {\n        var alphanumericChar = input.substr(i, 2);\n        var charCode = parseInt(alphanumericChar, 36);\n        result += String.fromCharCode(charCode);\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","PProgress","PSwitch","PButton","Vue","NotificationTemplate","NotifAddBoxLabel","NotifAddItem","NotifDeleteBoxLabel","NotifDeleteItem","NotifDraftSave","NotifItemChangeBoxLabel","NotifItemQuantity","NotifRenameBoxLabel","NotifSubmitTransaction","SubmitEditAuthorizedDateModal","Swal","axiosClient","EditBoxLabelModal","TransactionReceiptModal","EditSubmitTransactionReceiptModal","DraftModal","linkName","ConfirmationSubmitPullOutModal","ConfirmationDraftPullOutModal","XLSX","use","_Table","_TableColumn","_Popconfirm","_Button","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","showCategoryBrand","showUploadImage","transferredData","isCompany","isChainCode","isBranchName","isTransactionType","isShowButton","itemCodeList","isEditBLDisabled","isBoxLabel","isItem","isAddItem","isDisabledSubmit","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","isApproved","isCancel","isSubmit","hoveredRow","uploadImageFileName","uploadExcelFileName","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","newItemCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","transferTransactionID","uniqueItemss","duplicateItemss","isDenied","dataArray","myData","counter","remarksList","images","files","img_counter","strCategory","boxNumber","isDraft","barcode","saving_counter","isMobile","headerCellStyle","color","cellStyle","fontWeight","tableData","multipleSelection","deleteItemBtn","isNBFI","promoName","promoEmail","pullOutStartDate","pullOutEndDate","computed","filteredRemarks","_this","filter","toLowerCase","includes","sortedBoxes","sort","a","b","getItemBoxLabel","_this2","find","mounted","tooltipTriggerList","document","querySelectorAll","tooltipList","_toConsumableArray","map","tooltipTriggerEl","bootstrap","Tooltip","tooltipExcel","getInstance","_config","title","update","fetchEdit","fetchCompany","window","resolveRouteChange","val","test","navigator","userAgent","watch","handler","validateSubmit","deep","newTransactionItems","oldVal","addCategoryBoxLabel","createTableData","newTransactionBoxLabels","enableDropDowns","newTransactionCompany","showButtons","newTransactionChainCode","newTransactionBranchName","newTransactionTransactionType","clearItemInput","newSortedBoxes","set","methods","tableRowClassName","_ref","row","rowIndex","quantity","handleSelectAll","_this3","length","forEach","temp","_iterator","_createForOfIteratorHelper","entries","_step","s","n","done","_step$value","_slicedToArray","index","mul","code","err","e","f","push","selectedItemsOther","rowSel","$refs","itemsDataTable","parseInt","toggleRowSelection","selectedItems","handleSelect","_this4","_iterator2","_step2","_step2$value","splice","deleteSelectedItems","_this5","_MessageBox","confirm","confirmButtonText","cancelButtonText","type","then","selected","removeItem","catch","_Message","message","_this6","box","key","console","log","reArrangeItems","deletedBoxNumber","reArrangeBoxNumber","transfer","_this7","tempIdBox","id","restrictChar","$event","keyCode","which","preventDefault","_this8","filteredItems","uniqueCategory","Set","categorybrand","i","tempIndex","indexOf","substr","trim","filterRemarks","_this9","onFileChange","target","dataTransfer","file","maxSizeInBytes","size","error","createImage","vm","reader","FileReader","onload","event","imageUrl","result","readAsDataURL","removeImage","_typeof","tempPath","split","removePath","post","path","response","clearImage","getElementById","frame","src","handleFileUploadImage","_this10","config","headers","image","transactionID","setTimeout","handleFileUpload","_this11","Uint8Array","workbook","read","worksheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","arrayBox","x","filteredArray","self","tempBoxLabel","tempItem","saveItemsExcel","readAsArrayBuffer","_this12","get","params","ItemNo","flag","description","ItemDescription","brandNames","Size","Color","category","Category","notifyVue","draft","numberOnly","uniqueItems","itemsValidation","itemsValidationTemp","j","submitTooltip","tooltip","disable","editingBoxLabel","_ref2","tempBL","_this13","uri","location","href","decodeFromAlphanumeric","plID","itemss","dateStart","dateEnd","status","filteredData","obj","findIndex","o","boxData","fetchChainCode","fetchChainName","imagePaths","_unused","userID","sessionStorage","getItem","cancelTransaction","$router","updateData","updatedData","openModal","closeModal","showButton","itemId","hideButton","itemCode","_unused2","fetchItems","_this14","compareItemCode","parts","handleQuantity","notify","verticalAlign","horizontalAlign","notification","notifType","$notify","component","props","customValue","_this15","_this16","_this17","addItem","boxNUMBER","saveItem","_this18","slice","checkItemData","companyType","StyleCode","brandCode","toString","missItemCode","newResponseData","confirmSave","ItemCode","cancelItem","addBoxLabel","saveBoxLabel","cancelBoxLabel","submit","confirmation","_this19","_unused3","email","labelBox","_iterator3","_step3","brand","transactionModal","Modal","show","_this20","_iterator4","_step4","draftModal","_unused4","_iterator5","_step5","editBoxLabel","existingItem","uniqueItem","_objectSpread","input","alphanumericChar","charCode","String","fromCharCode"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card card-generator\">\n    <!-- <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div> -->\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Company\" :disabled=\"isCompany\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Company\"\n              v-model=\"newTransaction.company\"\n              @change=\"\n                fetchChainCode(),\n                  (newTransaction.chainCode = ''),\n                  (newTransaction.branchName = ''),\n                  (newTransaction.transactionType = '')\n              \"\n              :disabled=\"isCompany\"\n            >\n              <el-option\n                v-for=\"option in companyList\"\n                class=\"select-default\"\n                :value=\"option.shortName\"\n                :label=\"option.name + ' (' + option.shortName + ') '\"\n                :key=\"option.id\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.company\" class=\"label-font\"\n              >Company is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Chain Name\" :disabled=\"isChainCode\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Chain Name\"\n              v-model=\"newTransaction.chainCode\"\n              @change=\"\n                fetchChainName(),\n                  (newTransaction.branchName = ''),\n                  (newTransaction.transactionType = '')\n              \"\n              :disabled=\"isChainCode\"\n            >\n              <el-option\n                v-for=\"option in chainCodeList\"\n                class=\"select-default\"\n                :value=\"option.chainCode\"\n                :label=\"option.chainCode\"\n                :key=\"option.chainCode\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.chainCode\" class=\"label-font\"\n              >Chain Name is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Branch Name\" :disabled=\"isBranchName\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Branch Name\"\n              v-model=\"newTransaction.branchName\"\n              @change=\"(isTransactionType = false), (newTransaction.transactionType = '')\"\n              :disabled=\"isBranchName\"\n            >\n              <el-option\n                v-for=\"option in branchNameList\"\n                class=\"select-default\"\n                :value=\"option.branchName\"\n                :label=\"option.branchName\"\n                :key=\"option.branchName\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.branchName\" class=\"label-font\"\n              >Branch Name is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Transaction Type\" :disabled=\"isTransactionType\">\n            <!-- &nbsp;<i\n              data-bs-toggle=\"tooltip\"\n              class=\"nc-icon nc-alert-circle-i font-weight-bold\"\n            ></i> -->\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Transaction Type\"\n              v-model=\"newTransaction.transactionType\"\n              :disabled=\"isTransactionType\"\n            >\n              <el-option\n                v-for=\"option in transactionTypeList\"\n                class=\"select-default\"\n                :value=\"option.value\"\n                :label=\"option.label\"\n                :key=\"option.label\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.transactionType\" class=\"label-font\"\n              >Transaction Type is required.</label\n            >\n          </fg-input>\n        </div>\n      </div>\n      <div class=\"col-sm-12\">\n        <!-- <card type=\"plain\"> -->\n        <div class=\"row mt-1\">\n          <div\n            class=\"col-xl-2 col-md-3 col-sm-6 p-0 h-div-32 mr-xl-2\"\n            v-show=\"isShowButton\"\n          >\n            <p-button\n              type=\"default\"\n              link\n              class=\"font-weight-bold w-full m-0\"\n              @click.prevent=\"addBoxLabel()\"\n            >\n              <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n            </p-button>\n          </div>\n          <div\n            class=\"col-xl-2 col-md-3 col-sm-6 p-0 h-div-32 mr-xl-2\"\n            v-show=\"isShowButton\"\n          >\n            <p-button\n              :disabled=\"isEditBLDisabled\"\n              type=\"default\"\n              link\n              class=\"font-weight-bold w-full m-0\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#editboxlabelModal\"\n              @click=\"openModal(newTransaction)\"\n            >\n              <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Delete Box Label\n            </p-button>\n          </div>\n          <div\n            class=\"col-xl-2 col-md-3 col-sm-6 p-0 h-div-32 mr-xl-2\"\n            v-show=\"isShowButton\"\n          >\n            <span\n              id=\"excelBtn\"\n              class=\"d-inline-block w-full\"\n              tabindex=\"0\"\n              data-bs-toggle=\"tooltip\"\n              data-bs-placement=\"bottom\"\n            >\n              <p-button\n                type=\"default\"\n                link\n                class=\"font-weight-bold w-full m-0\"\n                onclick=\"document.getElementById('import_items_excel').click()\"\n              >\n                Import Items Excel\n              </p-button></span\n            >\n            <input\n              id=\"import_items_excel\"\n              type=\"file\"\n              accept=\".xlsx\"\n              style=\"display: none\"\n              @change=\"handleFileUpload\"\n            />\n          </div>\n          <!-- <div class=\"col-xl-2 col-md-3 col-sm-12 p-0 h-div-32\" v-show=\"isShowButton\">\n            <span\n              onclick=\"document.getElementById('import_items_excel').click()\"\n              class=\"span-upload-image py-1\"\n              >{{ uploadExcelFileName }}</span\n            >\n          </div> -->\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 p-0 mt-2\" v-show=\"isBoxLabel\">\n            <form class=\"p-0\" @submit.prevent=\"saveBoxLabel()\">\n              <div>\n                <fg-input\n                  placeholder=\"Box Label ( Items Remarks )\"\n                  v-model.trim=\"newBoxLabel\"\n                  class=\"w-100\"\n                  @keypress=\"restrictChar\"\n                  @input=\"filterRemarks\"\n                  list=\"remarks\"\n                ></fg-input>\n                <datalist id=\"remarks\">\n                  <option v-for=\"remark in filteredRemarks\" :value=\"remark\">\n                    {{ remark }}\n                  </option>\n                </datalist>\n              </div>\n              <div class=\"mt-n3\">\n                <p-button\n                  native-type=\"submit\"\n                  type=\"default\"\n                  size=\"sm\"\n                  outline\n                  class=\"font-weight-bold\"\n                >\n                  <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                </p-button>\n                <p-button\n                  type=\"default\"\n                  size=\"sm\"\n                  outline\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"cancelBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                </p-button>\n              </div>\n              <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                >Box Label is empty.</label\n              >\n            </form>\n          </div>\n          <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n            >Box Label is required.</label\n          >\n        </div>\n        <collapse>\n          <collapse-item\n            v-for=\"(boxLabel, indexBox) in newTransaction.boxLabels\"\n            :key=\"boxLabel.id\"\n            :title=\"`Box No. ${boxLabel.boxNumber} of ${newTransaction.boxLabels.length} \\xa0\\xa0\\xa0 ${boxLabel.boxLabel}`\"\n            name=\"1\"\n            class=\"font-weight-bold\"\n          >\n            <div v-show=\"isAddItem\">\n              <button\n                class=\"btn btn-transparent bold-button\"\n                @click.prevent=\"addItem(boxLabel.boxNumber)\"\n              >\n                <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n              </button>\n              <button\n                v-if=\"indexBox == deleteItemBtn && multipleSelection.length != 0\"\n                class=\"btn btn-danger bold-button\"\n                @click=\"deleteSelectedItems()\"\n              >\n                <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i> Delete Item\n              </button>\n            </div>\n            <div>\n              <div\n                class=\"row\"\n                v-for=\"newItem in newItemInputBox\"\n                v-show=\"newItem.id === boxLabel.boxNumber\"\n              >\n                <form @submit.prevent=\"saveItem(boxLabel.boxNumber)\">\n                  <div class=\"row\" v-if=\"newItem.id == showItemInput\">\n                    <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-12 d-flex mt-2\">\n                      <div class=\"col-6 text-center\">\n                        <input\n                          type=\"radio\"\n                          v-model=\"barcode\"\n                          name=\"barcode\"\n                          value=\"item_16\"\n                          checked\n                        />\n                        <label for=\"item_16\">16 Digit Barcode</label><br />\n                      </div>\n                      <div class=\"col-6 text-center\">\n                        <input\n                          type=\"radio\"\n                          v-model=\"barcode\"\n                          name=\"barcode\"\n                          value=\"item_12\"\n                        />\n                        <label for=\"item_12\">12 Digit Barcode</label><br />\n                      </div>\n                    </div>\n                    <div class=\"col-xl-9 col-lg-9 col-md-9 col-sm-12 d-flex mt-2\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Item Code\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        native-type=\"submit\"\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n                    <label\n                      v-show=\"isRightCode\"\n                      class=\"label-font font-weight-normal\"\n                      style=\"margin-left: 185px\"\n                      >Invalid Item Code.</label\n                    >\n                    <label\n                      v-show=\"isNewItem\"\n                      class=\"label-font font-weight-normal\"\n                      style=\"margin-left: 185px\"\n                      >Item code is empty.</label\n                    >\n                  </div>\n\n                  <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                </form>\n              </div>\n            </div>\n\n            <!-- before table -->\n            <!-- <div class=\"row\">\n              <table\n                class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n              >\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"text-nowrap\">Item Code</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Description</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Size</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Color</th>\n                    <th scope=\"col\" class=\"text-nowrap\" v-if=\"showCategoryBrand\">\n                      Brand\n                    </th>\n                    <th scope=\"col\" class=\"text-nowrap\" v-else>Category</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Quantity</th>\n                    <th scope=\"col\" class=\"text-nowrap\">Box Label</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-show=\"boxLabel.boxNumber == item.boxNumber\"\n                    v-for=\"item in newTransaction.items\"\n                    :key=\"item.code\"\n                  >\n                    <th scope=\"row\" class=\"px-3 d-flex\">\n                      <button\n                        class=\"gendelete-buttons\"\n                        @click.prevent=\"removeItem(item.code, item.boxNumber)\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </button>\n                      {{ item.code }}\n                    </th>\n                    <td class=\"cell px-3\" style=\"width: 550px\">\n                      {{ item.description }}\n                    </td>\n                    <td class=\"cell px-3\" style=\"width: 10px\">\n                      {{ item.size }}\n                    </td>\n                    <td class=\"cell px-3\" style=\"width: 20px\">\n                      {{ item.color }}\n                    </td>\n                    <td class=\"cell px-3\" style=\"width: 300px\">\n                      {{ item.categorybrand }}\n                    </td>\n                    <td class=\"cell\">\n                      <span>\n                        <div class=\"btn-group btn-group-sm d-flex flex-row\">\n                          <p-button\n                            type=\"default\"\n                            round\n                            outline\n                            size=\"xs\"\n                            @click=\"item.quantity > 0 ? item.quantity-- : 0\"\n                          >\n                            <i class=\"nc-icon nc-simple-delete\"></i>\n                          </p-button>\n                          <input\n                            type=\"text\"\n                            @blur=\"handleQuantity(item)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                            style=\"width: 75px; text-align: center\"\n                            @keypress=\"numberOnly\"\n                          />\n                          <p-button\n                            type=\"default\"\n                            round\n                            outline\n                            size=\"xs\"\n                            @click=\"item.quantity++\"\n                          >\n                            <i class=\"nc-icon nc-simple-add\"></i>\n                          </p-button>\n                        </div>\n                      </span>\n                    </td>\n                    <td class=\"cell\" style=\"width: 300px\">\n                      <el-select\n                        class=\"table-select-box\"\n                        size=\"large\"\n                        v-model=\"item.boxNumber\"\n                        @change=\"editBoxLabel(item.code, item.quantity, item.boxNumber)\"\n                      >\n                        <el-option\n                          v-for=\"boxLabel in newTransaction.boxLabels\"\n                          class=\"table-select-box\"\n                          :value=\"boxLabel.boxNumber\"\n                          :label=\"\n                            'Box No. ' +\n                            boxLabel.boxNumber +\n                            ' of ' +\n                            newTransaction.boxLabels.length +\n                            ' ' +\n                            boxLabel.boxLabel\n                          \"\n                          :key=\"boxLabel.id\"\n                        >\n                        </el-option>\n                      </el-select>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div> -->\n\n            <!-- after table -->\n            <div class=\"row\">\n              <el-table\n                ref=\"itemsDataTable\"\n                class=\"p-0\"\n                border\n                :header-cell-style=\"headerCellStyle\"\n                :cell-style=\"cellStyle\"\n                :data=\"tableData[indexBox]\"\n                style=\"width: 100%\"\n                @select=\"handleSelect\"\n                @select-all=\"handleSelectAll\"\n                :row-class-name=\"tableRowClassName\"\n              >\n                <!-- <el-table-column\n                  v-for=\"column in tableColumns\"\n                  :prop=\"column.prop\"\n                  :label=\"column.label\"\n                  :type=\"column.type\"\n                  :width=\"column.width\"\n                  :min-width=\"column.minWidth\"\n                >\n                </el-table-column> -->\n                <el-table-column\n                  type=\"selection\"\n                  width=\"40\"\n                  header-align=\"center\"\n                  align=\"center\"\n                >\n                </el-table-column>\n                <el-table-column label=\"Item Code\" width=\"155\">\n                  <template slot-scope=\"scope\">\n                    <b>{{ scope.row.code }}</b>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"Description\" min-width=\"450\">\n                  <template slot-scope=\"scope\">\n                    {{ scope.row.description }}\n                  </template>\n                </el-table-column>\n                <el-table-column\n                  label=\"Size\"\n                  :width=\"isNBFI ? '60' : ''\"\n                  :min-width=\"isNBFI ? '' : '150'\"\n                >\n                  <template slot-scope=\"scope\">\n                    {{ scope.row.size }}\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"Color\" width=\"100\">\n                  <template slot-scope=\"scope\">\n                    {{ scope.row.color }}\n                  </template>\n                </el-table-column>\n                <el-table-column :label=\"isNBFI ? 'Brand' : 'Category'\" min-width=\"300\">\n                  <template slot-scope=\"scope\">\n                    {{ scope.row.categorybrand }}\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"Quantity\" width=\"165\">\n                  <template slot-scope=\"scope\">\n                    <div class=\"btn-group btn-group-sm d-flex flex-row\">\n                      <p-button\n                        type=\"default\"\n                        round\n                        outline\n                        size=\"xs\"\n                        @click=\"scope.row.quantity > 0 ? scope.row.quantity-- : 0\"\n                      >\n                        <i class=\"nc-icon nc-simple-delete\"></i>\n                      </p-button>\n                      <input\n                        type=\"text\"\n                        @blur=\"handleQuantity(scope.row)\"\n                        v-model=\"scope.row.quantity\"\n                        class=\"table-input-box\"\n                        style=\"width: 75px; text-align: center\"\n                        @keypress=\"numberOnly\"\n                      />\n                      <p-button\n                        type=\"default\"\n                        round\n                        outline\n                        size=\"xs\"\n                        @click=\"scope.row.quantity++\"\n                      >\n                        <i class=\"nc-icon nc-simple-add\"></i>\n                      </p-button>\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"Box Label\" min-width=\"300\">\n                  <template slot-scope=\"scope\">\n                    <el-select\n                      class=\"table-select-box\"\n                      size=\"large\"\n                      v-model=\"scope.row.boxNumber\"\n                      @change=\"\n                        editBoxLabel(\n                          scope.row.code,\n                          scope.row.quantity,\n                          scope.row.boxNumber\n                        )\n                      \"\n                    >\n                      <el-option\n                        v-for=\"boxLabel in newTransaction.boxLabels\"\n                        class=\"table-select-box\"\n                        :value=\"boxLabel.boxNumber\"\n                        :label=\"\n                          'Box No. ' +\n                          boxLabel.boxNumber +\n                          ' of ' +\n                          newTransaction.boxLabels.length +\n                          ' ' +\n                          boxLabel.boxLabel\n                        \"\n                        :key=\"boxLabel.id\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n\n            <!-- <div class=\"row\">\n                  <input\n                    placeholder=\"Input Items Remarks\"\n                    v-model=\"remarks\"\n                    @input=\"filterRemarks\"\n                    class=\"input-datalist\"\n                    list=\"remarks\"\n                  />\n                  <datalist id=\"remarks\">\n                    <option v-for=\"remark in filteredRemarks\" :value=\"remark\">\n                      {{ remark }}\n                    </option>\n                  </datalist>\n                </div> -->\n          </collapse-item>\n          <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n        </collapse>\n        <!-- </card> -->\n        <div class=\"row pt-5\" v-if=\"showUploadImage\">\n          <div class=\"col-12 p-0\">\n            <label>\n              Upload Images (Up to 10 images [JPEG, PNG, and other image files] with a\n              maximum size of 2 MB per image will be accepted.)\n            </label>\n            <br />\n          </div>\n\n          <div class=\"col-xxl-2 col-xl-3 col-lg-4 col-md-6 p-0\">\n            <button\n              class=\"btn btn-default m-0\"\n              style=\"width: 100%\"\n              onclick=\"document.getElementById('upload_image').click()\"\n            >\n              Upload Image\n            </button>\n            <input\n              id=\"upload_image\"\n              multiple\n              type=\"file\"\n              ref=\"image\"\n              accept=\"image/jpeg, image/png\"\n              style=\"display: none\"\n              @change=\"onFileChange\"\n            />\n          </div>\n          <!-- <div class=\"col-xxl-2 col-xl-3 col-lg-4 col-md-6 p-0\">\n            <span\n              class=\"span-upload-image\"\n              onclick=\"document.getElementById('upload_image').click()\"\n              >{{ uploadImageFileName }}</span\n            >\n          </div> -->\n        </div>\n        <div\n          v-if=\"images\"\n          class=\"d-flex justify-content-center row my-2 column-gap-3 row-gap-2\"\n        >\n          <div class=\"image-container\" v-for=\"(image, index) in images\">\n            <!-- <button @click=\"removeImage(index)\">Remove image</button> style=\"max-width: 10%; padding: 5px\"-->\n            <!-- <p-button\n              class=\"container-fluid pic-button\"\n              type=\"danger\"\n              @click=\"removeImage(index)\"\n            >\n              <i slot=\"label\" class=\"nc-icon nc-simple-remove\"></i>\n              Remove Image\n            </p-button> -->\n            <!-- <p-button type=\"default\" icon round>\n              <i class=\"fa fa-heart\"></i>\n            </p-button> -->\n            <div class=\"image-overlay\" v-if=\"!isMobile\">\n              <el-popconfirm\n                width=\"280\"\n                confirm-button-text=\"Confirm\"\n                cancel-button-text=\"Cancel\"\n                icon-color=\"#c45656\"\n                title=\"Are you sure you want to remove this image?\"\n                @confirm=\"removeImage(true, index)\"\n                @cancel=\"removeImage(false, index)\"\n              >\n                <el-button slot=\"reference\" type=\"danger\" icon=\"el-icon-delete\" circle>\n                </el-button>\n              </el-popconfirm>\n            </div>\n\n            <el-popconfirm\n              width=\"280\"\n              confirm-button-text=\"Confirm\"\n              cancel-button-text=\"Cancel\"\n              icon-color=\"#c45656\"\n              title=\"Are you sure you want to remove this image?\"\n              @confirm=\"removeImage(true, index)\"\n              @cancel=\"removeImage(false, index)\"\n              ><a slot=\"reference\" class=\"imageClose\" v-if=\"isMobile\"\n                >&times;</a\n              ></el-popconfirm\n            >\n            <img class=\"imageUpload\" :src=\"image\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"text-center mt-1\">\n        <button\n          class=\"btn btn-warning btn-fill btn-wd mx-1 mb-0 mt-2\"\n          data-bs-target=\"#confirmationDraftPullOut\"\n          data-bs-toggle=\"modal\"\n          v-show=\"isDenied\"\n        >\n          Save as Draft\n        </button>\n        <button\n          class=\"btn btn-warning btn-fill btn-wd mx-1 mb-0 mt-2\"\n          @click.prevent=\"cancelTransaction\"\n          v-show=\"isCancel\"\n        >\n          Cancel\n        </button>\n        <button\n          :disabled=\"isDisabledSubmit\"\n          class=\"btn btn-success btn-fill btn-wd mx-1 mb-0 mt-2\"\n          data-bs-target=\"#submiteditauthorizeddatemodal\"\n          data-bs-toggle=\"modal\"\n          @click.prevent=\"submit\"\n          v-show=\"isApproved\"\n        >\n          Approved\n        </button>\n        <span\n          id=\"submitBTN\"\n          class=\"d-inline-block\"\n          tabindex=\"0\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"bottom\"\n        >\n          <button\n            :disabled=\"isDisabledSubmit\"\n            class=\"btn btn-success btn-fill btn-wd mx-1 mb-0 mt-2\"\n            data-bs-target=\"#confirmationSubmitPullOut\"\n            data-bs-toggle=\"modal\"\n            v-show=\"isSubmit\"\n          >\n            Submit\n          </button></span\n        >\n      </div>\n      <div class=\"clearfix\"></div>\n    </div>\n    <EditBoxLabelModal\n      :transferredData=\"transferredData\"\n      :newItemInputBox=\"newItemInputBox\"\n      :remarksList=\"remarksList\"\n      @TransferDataBoxNumber=\"reArrangeBoxNumber($event)\"\n      @DeletedBoxNumber=\"reArrangeItems($event)\"\n      @closeModal=\"closeModal()\"\n      @renameBoxLabel=\"editingBoxLabel($event)\"\n    ></EditBoxLabelModal>\n\n    <TransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n      :savingCounter=\"saving_counter\"\n    ></TransactionReceiptModal>\n\n    <!-- <EditSubmitTransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n      :savingCounter=\"saving_counter\"\n    ></EditSubmitTransactionReceiptModal> -->\n\n    <DraftModal :transferTransactionID=\"transferTransactionID\"></DraftModal>\n    <ConfirmationSubmitPullOutModal @confirm=\"submit($event)\">\n    </ConfirmationSubmitPullOutModal>\n\n    <ConfirmationDraftPullOutModal @confirm=\"draft($event)\">\n    </ConfirmationDraftPullOutModal>\n\n    <SubmitEditAuthorizedDateModal\n      :transferTransactionID=\"transferTransactionID\"\n      :transferTransactionPromoName=\"promoName\"\n      :transferTransactionPromoEmail=\"promoEmail\"\n      :savingCounter=\"saving_counter\"\n      :dateStart=\"pullOutStartDate\"\n      :dateEnd=\"pullOutEndDate\"\n    ></SubmitEditAuthorizedDateModal>\n  </div>\n</template>\n<script>\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from \"src/components/UIComponents\";\nimport {\n  DatePicker,\n  TimeSelect,\n  Slider,\n  Tag,\n  Input,\n  Select,\n  Option,\n  Message,\n  MessageBox,\n  Popconfirm,\n} from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport PButton from \"src/components/UIComponents/Button.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport SubmitEditAuthorizedDateModal from \"./PullOutRequests/ModalPullOut/SubmitEditAuthorizedDateModal.vue\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn, Button } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport EditSubmitTransactionReceiptModal from \"./PullOutRequests/ModalPullOut/EditSubmitTransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport ConfirmationDraftPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationDraftPullOutModal.vue\";\n// import axios, { isCancel } from \"axios\";\nimport * as XLSX from \"xlsx\";\n// import EditSubmitTransactionReceiptModal from \"./PullOutRequests/ModalPullOut/EditSubmitTransactionReceiptModal.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Popconfirm);\nVue.use(Button);\n\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    // [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PButton,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    NotifAddBoxLabel,\n    NotifAddItem,\n    NotifDeleteBoxLabel,\n    NotifDeleteItem,\n    NotifDraftSave,\n    NotifItemChangeBoxLabel,\n    NotifItemQuantity,\n    NotifRenameBoxLabel,\n    NotifSubmitTransaction,\n    EditBoxLabelModal,\n    TransactionReceiptModal,\n    EditSubmitTransactionReceiptModal,\n    DraftModal,\n    ConfirmationSubmitPullOutModal,\n    ConfirmationDraftPullOutModal,\n    EditSubmitTransactionReceiptModal,\n    SubmitEditAuthorizedDateModal,\n  },\n  data() {\n    return {\n      showCategoryBrand: true,\n      showUploadImage: true,\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n      uploadImageFileName: \"Choose an Image\",\n      uploadExcelFileName: \"Choose a File\",\n\n      transactionTypeList: [\n        {\n          value: \"CPO Item for Disposal in the Store c/o Supervisor\",\n          label: \"CPO Item for Disposal in the Store c/o Supervisor\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO for Transfer to Another Store\",\n          label: \"CPO for Transfer to Another Store\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH via In-House Delivery Service\",\n          label: \"CPO Back to WH via In-House Delivery Service\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH via Chain Distribution Center\",\n          label: \"CPO Back to WH via Chain Distribution Center\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH via 3rd Party Trucking\",\n          label: \"CPO Back to WH via 3rd Party Trucking\",\n          company: \"NBFI\",\n        },\n        {\n          value: \"CPO Back to WH c/o Supervisor\",\n          label: \"CPO Back to WH c/o Supervisor\",\n          company: \"NBFI\",\n        },\n        // { value: \"Concess Direct Pull-Out\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      remarksList: [\n        \"CLOSED STORE/BRANCH - GOOD ITEMS\",\n        \"CLOSED STORE/BRANCH - DAMAGED/DIRTY ITEMS\",\n        \"CLOSED STORE/BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\",\n        \"REGULAR PULL-OUT - GOOD ITEMS\",\n        \"REGULAR PULL-OUT - DAMAGED/DIRTY ITEMS\",\n        \"REGULAR PULL-OUT - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\",\n        \"STORE TO STORE/BRANCH TO BRANCH - GOOD ITEMS\",\n        \"STORE TO STORE/BRANCH TO BRANCH - DAMAGED/DIRTY ITEMS\",\n        \"STORE TO STORE/BRANCH TO BRANCH - DISPOSAL/CONTAINS BROKEN GLASS ITEMS\",\n      ],\n      images: [],\n      files: [],\n      img_counter: 0,\n      strCategory: {\n        boxNumber: 0,\n        label: \"\",\n      },\n      isDraft: false,\n      barcode: \"item_16\",\n      saving_counter: null,\n      isMobile: null,\n      headerCellStyle: {\n        color: \"black\",\n      },\n      cellStyle: {\n        color: \"black\",\n        fontWeight: \"normal\",\n      },\n      tableData: [],\n      multipleSelection: [],\n      deleteItemBtn: null,\n      isNBFI: false,\n      promoName: \"\",\n      promoEmail: \"\",\n      pullOutStartDate: \"\",\n      pullOutEndDate: \"\",\n    };\n  },\n  computed: {\n    filteredRemarks() {\n      return this.remarksList.filter((newBoxLabel) => {\n        return newBoxLabel.toLowerCase().includes(this.newBoxLabel.toLowerCase());\n      });\n    },\n    sortedBoxes() {\n      return this.newTransaction.boxLabels.sort((a, b) => a.boxNumber - b.boxNumber);\n    },\n    getItemBoxLabel() {\n      return (boxNumber) => {\n        const boxLabel = this.newTransaction.boxLabels.find(\n          (label) => label.boxNumber === boxNumber\n        );\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    },\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\n    );\n    let tooltipExcel = bootstrap.Tooltip.getInstance(\"#excelBtn\");\n    tooltipExcel._config.title =\n      \"Only XLSX file with a standard Template (Column A: Box Number, Column B: Box Label, Column C: Item Code, Column D: Quantity)\";\n    tooltipExcel.update();\n    // this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n\n    this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  },\n  watch: {\n    newTransaction: {\n      handler(val) {\n        this.validateSubmit();\n      },\n      deep: true,\n    },\n    \"newTransaction.items\": function (val, oldVal) {\n      this.addCategoryBoxLabel();\n      this.createTableData();\n    },\n    \"newTransaction.boxLabels\": function (val, oldVal) {\n      this.enableDropDowns();\n      this.createTableData();\n    },\n    \"newTransaction.company\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function (val, oldVal) {\n      this.showButtons();\n    },\n    barcode: function (val, oldVal) {\n      this.clearItemInput();\n    },\n    sortedBoxes(newSortedBoxes) {\n      // Option 1: Using Vue.set\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n\n      // Option 2: Reassigning the array\n      // this.boxes = newSortedBoxes.slice();\n    },\n  },\n  methods: {\n    // cellClass() {\n    //   return \"itemCodeStyle\";\n    // },\n    tableRowClassName({ row, rowIndex }) {\n      if (row.quantity == 0) return \"warning-row\";\n      else return \"\";\n    },\n    handleSelectAll(val) {\n      if (val.length == 0) {\n        this.multipleSelection = [];\n        this.deleteItemBtn = null;\n      } else this.deleteItemBtn = val[0].boxNumber - 1;\n\n      val.forEach((row) => {\n        let temp = true;\n        for (let [index, mul] of this.multipleSelection.entries())\n          if (row.boxNumber == mul.boxNumber && row.code == mul.code) {\n            temp = false;\n            break;\n          }\n        if (temp) this.multipleSelection.push(row);\n\n        if (this.multipleSelection.length > 0) {\n          const selectedItemsOther = this.multipleSelection.filter(\n            (mul) => mul.boxNumber !== val[0].boxNumber\n          );\n          selectedItemsOther.forEach((rowSel) => {\n            this.$refs.itemsDataTable[parseInt(rowSel.boxNumber - 1)].toggleRowSelection(\n              rowSel\n            );\n          });\n          const selectedItems = this.multipleSelection.filter(\n            (mul) => mul.boxNumber === val[0].boxNumber\n          );\n          if (selectedItems.length > 0) this.multipleSelection = selectedItems;\n        }\n      });\n    },\n    handleSelect(val, row) {\n      if (val.length == 0) this.deleteItemBtn = null;\n      else this.deleteItemBtn = row.boxNumber - 1;\n\n      let temp = true;\n      for (let [index, mul] of this.multipleSelection.entries())\n        if (row.boxNumber == mul.boxNumber && row.code == mul.code) {\n          this.multipleSelection.splice(index, 1);\n          temp = false;\n          break;\n        }\n      if (temp) this.multipleSelection.push(row);\n\n      if (this.multipleSelection.length > 0) {\n        const selectedItemsOther = this.multipleSelection.filter(\n          (mul) => mul.boxNumber !== val[0].boxNumber\n        );\n        selectedItemsOther.forEach((rowSel) => {\n          this.$refs.itemsDataTable[parseInt(rowSel.boxNumber - 1)].toggleRowSelection(\n            rowSel\n          );\n        });\n        const selectedItems = this.multipleSelection.filter(\n          (mul) => mul.boxNumber === val[0].boxNumber\n        );\n        if (selectedItems.length > 0) this.multipleSelection = selectedItems;\n      }\n    },\n    deleteSelectedItems() {\n      MessageBox.confirm(\n        \"The item/s you have selected will be remove. Continue?\",\n        \"Removing of Items\",\n        {\n          confirmButtonText: \"Confirm\",\n          cancelButtonText: \"Cancel\",\n          type: \"warning\",\n        }\n      )\n        .then(() => {\n          this.multipleSelection.forEach((selected) => {\n            this.removeItem(selected.code, selected.boxNumber);\n          });\n          this.deleteItemBtn = null;\n        })\n        .catch(() => {\n          Message({\n            type: \"info\",\n            message: \"Removing of Items canceled.\",\n          });\n        });\n    },\n    createTableData() {\n      this.tableData = [];\n      this.multipleSelection = [];\n      this.newTransaction.boxLabels.forEach((box, key) => {\n        this.tableData.push([]);\n        this.newTransaction.items.forEach((item) => {\n          if (box.boxNumber == item.boxNumber) this.tableData[key].push(item);\n        });\n      });\n\n      console.log(\"Table DATA::::: \", this.tableData);\n    },\n    reArrangeItems(deletedBoxNumber) {\n      console.log(\"Deleted ID Box Number\", deletedBoxNumber);\n      this.newTransaction.items.forEach((temp) => {\n        if (deletedBoxNumber < temp.boxNumber) temp.boxNumber--;\n      });\n    },\n    reArrangeBoxNumber(transfer) {\n      console.log(\"Transfer from edit box Label\", transfer);\n\n      this.newTransaction.boxLabels = transfer;\n      console.log(\"New Transfer from edit box Label\", this.newTransaction.boxLabels);\n      this.newItemInputBox = [];\n      this.newTransaction.boxLabels.forEach((boxLabel) => {\n        var tempIdBox = {\n          id: boxLabel.id,\n        };\n        this.newItemInputBox.push(tempIdBox);\n      });\n\n      console.log(\"Itemssssss:\", this.newTransaction.items);\n    },\n    clearItemInput() {\n      this.newItemInput = \"\";\n    },\n    restrictChar($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode == 91 || keyCode == 93) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    addCategoryBoxLabel() {\n      if (this.isDraft == false) {\n        this.newTransaction.boxLabels.forEach((box) => {\n          var filteredItems = this.newTransaction.items.filter(\n            (item) => item.boxNumber === box.boxNumber\n          );\n          // console.log(\"Filtered Items\", filteredItems);\n          var uniqueCategory = [\n            ...new Set(filteredItems.map((item) => item.categorybrand)),\n          ];\n          let strCategory = \"\";\n          for (let i = 0; i < uniqueCategory.length; i++) {\n            if (i == 0) strCategory = \" [ \" + uniqueCategory[i];\n            else strCategory = strCategory + \", \" + uniqueCategory[i];\n            if (i == uniqueCategory.length - 1) strCategory = strCategory + \" ]\";\n          }\n          let tempIndex = box.boxLabel.indexOf(\"[\");\n          if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n          box.boxLabel = box.boxLabel + strCategory;\n        });\n        // console.log(\"Changes on Category Box Label\");\n      }\n      // console.log(this.newTransaction.boxLabels);\n    },\n    filterRemarks() {\n      this.filteredRemarks = this.remarksList.filter((newBoxLabel) => {\n        return newBoxLabel.toLowerCase().includes(this.newBoxLabel.toLowerCase());\n      });\n    },\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      var file = e.target.files[0];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2MB\n\n      if (file && file.size > maxSizeInBytes) {\n        // File size exceeds the limit\n        // alert(\"Please select an image file smaller than 2MB.\");\n        Message.error(\"Please select an image file smaller than 2MB.\");\n        // Clear the file input\n        e.target.value = \"\";\n        return;\n      } else {\n        this.files.push(e.target.files[0]);\n\n        if (!files.length) return;\n        this.createImage(files);\n        this.uploadImageFileName = e.target.files[0].name;\n      }\n    },\n    createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          const imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n      console.log(\"Images:::\", this.files);\n    },\n    removeImage(confirm, index) {\n      if (confirm) {\n        console.log(\"TYPE:: \", typeof this.images[index], this.images[index]);\n        if (typeof this.images[index] == \"string\") {\n          let tempPath = this.images[index].split(\"/\");\n          let removePath = tempPath[tempPath.length - 1];\n          // console.log(\"removeIMAGE: \", removePath);\n          axiosClient\n            .post(\"/deleteImage\", {\n              company: this.newTransaction.company,\n              path: removePath,\n            })\n            .then((response) => {\n              console.log(response.data);\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }\n\n        this.images.splice(index, 1);\n        this.uploadImageFileName = \"Choose an Image\";\n\n        Message({\n          type: \"success\",\n          message: \"Image has been removed.\",\n        });\n      }\n    },\n    clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage() {\n      console.log(\"image:\", this.files);\n      console.log(\"Transaction ID:\", this.transferTransactionID);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      if (this.img_counter < this.files.length) {\n        axiosClient\n          .post(\n            \"/upload\",\n            {\n              image: this.files[this.img_counter],\n              company: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionID: this.transferTransactionID,\n            },\n            config\n          )\n          .then((response) => {\n            console.log(\"Success Upload Image\", response.data);\n            this.img_counter++;\n            setTimeout(this.handleFileUploadImage, 2000);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n    handleFileUpload(event) {\n      console.log(\"File Name: \", event.target.files[0]);\n      if (event.target.files.length != 0) {\n        this.uploadExcelFileName = event.target.files[0].name;\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: \"array\" });\n\n          const worksheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[worksheetName];\n\n          const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n          // header: 1 indicates that the first row contains column headers\n\n          // Save the JSON data to a Vue variable\n          console.log(\"Excel Data\", jsonData);\n          this.myData = jsonData;\n          let arrayBox = [];\n          for (var x = 0; x < this.myData.length; x++) {\n            this.dataArray.push(this.myData[x]);\n            arrayBox.push(this.myData[x][1]);\n          }\n\n          console.log(\"Data:\", this.dataArray);\n\n          console.log(\"Import Excel\", this.dataArray.length);\n\n          const filteredArray = arrayBox.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n          });\n\n          let tempBoxLabel = [];\n          for (var x = 0; x < filteredArray.length; x++) {\n            tempBoxLabel = {\n              id: x + 1,\n              boxNumber: x + 1,\n              boxLabel: filteredArray[x],\n            };\n\n            this.newTransaction.boxLabels.push(tempBoxLabel);\n            let tempItem = [];\n\n            if (this.newTransaction.boxLabels.length == 0) {\n              tempItem = {\n                id: this.newTransaction.boxLabels.length + 1,\n              };\n            } else {\n              tempItem = {\n                id:\n                  this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1]\n                    .id + 1,\n              };\n            }\n            this.newItemInputBox.push(tempItem);\n          }\n\n          console.log(filteredArray);\n          // for (var x = 0; x < this.dataArray.length; x++) {\n          //   console.log(\"ItemCode\", this.dataArray[x][2]);\n          // }\n          // var y = 0;\n          // while (y < this.dataArray.length) {\n\n          //   y++;\n          // }\n          this.counter = 0;\n          this.saveItemsExcel();\n        };\n\n        reader.readAsArrayBuffer(file);\n      }\n    },\n\n    saveItemsExcel() {\n      if (this.counter < this.dataArray.length) {\n        console.log(\"Counter:\", this.counter + \" Data Length: \", this.dataArray.length);\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient\n          .get(\"/fetchSameItems\", {\n            params: {\n              company: this.newTransaction.company,\n              ItemNo: this.dataArray[this.counter][2],\n            },\n          })\n          .then((response) => {\n            console.log(\"Data\", response.data);\n            if (response.data.length == 0) {\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n            for (var x = 0; x < response.data.length; x++) {\n              var flag = true;\n\n              for (var i = 0; i < this.newTransaction.items.length; i++) {\n                if (\n                  this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                  this.newTransaction.items[i].boxNumber == boxNumber\n                ) {\n                  this.newTransaction.items[i].quantity =\n                    parseInt(this.newTransaction.items[x].quantity) + 1;\n                  flag = false;\n                  break;\n                }\n              }\n              if (flag) {\n                let tempItem = {\n                  code: response.data[x].ItemNo,\n                  description: response.data[x].ItemDescription,\n                  categorybrand: response.data[x].brandNames,\n                  quantity: quantity,\n                  size: response.data[x].Size,\n                  color: response.data[x].Color,\n                  // boxLabel: label,\n                  boxNumber: parseInt(boxNumber),\n                  category: response.data[x].Category,\n                };\n                this.newTransaction.items.push(tempItem);\n              }\n\n              console.log(\"Items\", this.newTransaction.items);\n\n              this.isAddItem = true;\n              this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } else {\n        this.draft(true);\n      }\n      this.counter++;\n    },\n\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    validateSubmit() {\n      let uniqueItems = [\n        ...new Set(this.newTransaction.items.map((item) => item.boxNumber)),\n      ];\n      let itemsValidation = false;\n      let itemsValidationTemp = false;\n      for (let j in this.newTransaction.boxLabels) {\n        for (let i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (let x in this.newTransaction.items) {\n        if (this.newTransaction.items[x].quantity == 0) {\n          itemsValidation = false;\n          // let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n          // tooltip._config.title = \"No items should have a quantity of 0.\";\n          // tooltip.update();\n          const submitTooltip = document.getElementById(\"submitBTN\");\n          const tooltip = new bootstrap.Tooltip(submitTooltip, {\n            title: \"No items should have a quantity of 0.\",\n          });\n          tooltip.update();\n          break;\n        }\n      }\n      if (!itemsValidationTemp) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"Kindly add item/s on every boxes you've added.\",\n        });\n        tooltip.update();\n      }\n      if (\n        !this.newTransaction.company ||\n        !this.newTransaction.chainCode ||\n        !this.newTransaction.branchName ||\n        !this.newTransaction.transactionType\n      ) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"Complete the form above to enable this button.\",\n        });\n        tooltip.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"No box added. Kindly add box/es to be able to add item/s.\",\n        });\n        tooltip.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        const submitTooltip = document.getElementById(\"submitBTN\");\n        const tooltip = new bootstrap.Tooltip(submitTooltip, {\n          title: \"No items added. Kindly add item/s for this pull-out request.\",\n        });\n        tooltip.update();\n      }\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType &&\n        this.newTransaction.boxLabels.length > 0 &&\n        itemsValidation\n      ) {\n        this.isDisabledSubmit = false;\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel({ index, value, tempBL }) {\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;\n      else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n        // console.log(this.newTransaction.boxLabels.length);\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons() {\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType\n      ) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n        else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        // console.log(\"ID\", id);\n        // console.log(\"Company\", transactionID.split(\"=\")[2]);\n        var company = this.decodeFromAlphanumeric(transactionID.split(\"=\")[2]);\n        this.isDraft = true;\n        console.log(\"PLIDDD: \", id);\n        this.transferTransactionID = id;\n        axiosClient\n          .get(\"/fetchEditDraftBranch\", {\n            params: {\n              company: company,\n              plID: id,\n            },\n          })\n          .then((response) => {\n            console.log(\"Edit Branch:\", response.data, this.itemss);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.transactionType = response.data[0].transactionType;\n            this.promoName = response.data[0].name;\n            this.promoEmail = response.data[0].promoEmail;\n            this.pullOutStartDate = response.data[0].dateStart;\n            this.pullOutEndDate = response.data[0].dateEnd;\n\n            if (\n              response.data[0].status == \"denied\" ||\n              response.data[0].status == \"endorsement\" ||\n              response.data[0].status == \"unprocessed\"\n            ) {\n              this.isDenied = false;\n              this.isCancel = true;\n              this.isApproved = true;\n              this.isSubmit = false;\n            } else {\n              this.isDenied = true;\n              this.isCancel = false;\n            }\n\n            // if (response.data[0].status == \"endorsement\") {\n            //   this.isApproved = true;\n            //   this.isSubmit = false;\n            // }\n\n            axiosClient\n              .get(\"/fetchEditDraftItem\", {\n                params: {\n                  company: company,\n                  plID: id,\n                },\n              })\n              .then((response) => {\n                // console.log(\"Edit Item:\", response.data);\n                for (var x = 0; x < response.data.length; x++) {\n                  this.newTransaction.items.push(response.data[x]);\n                }\n\n                const filteredData = this.newTransaction.items.filter(\n                  (obj, index, self) => {\n                    const boxLabel = obj.boxLabel;\n                    return self.findIndex((o) => o.boxLabel === boxLabel) === index;\n                  }\n                );\n\n                const boxData = filteredData.map((obj) => {\n                  return {\n                    boxLabel: obj.boxLabel,\n                    boxNumber: obj.boxNumber,\n                  };\n                });\n\n                // console.log(\"Filtered Box label:\", boxData);\n\n                for (var x = 0; x < boxData.length; x++) {\n                  // console.log(\"Box Label:\", boxData[x].boxLabel);\n                  this.newTransaction.boxLabels.push({\n                    id: boxData[x].boxNumber,\n                    boxNumber: boxData[x].boxNumber,\n                    boxLabel: boxData[x].boxLabel,\n                  });\n                  this.newItemInputBox.push({\n                    id: boxData[x].boxNumber,\n                  });\n                  console.log(\"New Box Label:\", this.newTransaction.boxLabels);\n                }\n\n                this.isDraft = false;\n                console.log(\"Draft:\", this.isDraft);\n                if (this.newTransaction.company) {\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.fetchCompany();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.chainCode) {\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.fetchChainName();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.branchName) {\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  this.fetchChainName();\n                }\n\n                if (this.newTransaction.transactionType) {\n                  // console.log(\"Yes\", this.isShowButton);\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  // this.isShowButton = true;\n                  // console.log(\"Yes 2\", this.isShowButton);\n                }\n\n                if (this.newTransaction.items.length) {\n                  // console.log(\"Disable\", this.newTransaction.items.length);\n                  this.isCompany = true;\n                  this.isChainCode = true;\n                  this.isBranchName = true;\n                  this.isTransactionType = true;\n                  // this.isShowButton = true;\n                }\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            axiosClient\n              .get(\"/fetchImageBranchDoc\", {\n                params: {\n                  transactionID: id,\n                  company: company,\n                },\n              })\n              .then((response) => {\n                console.log(\"Pull out path image:\", response.data);\n                console.log(\"Pull out path image length:\", response.data.length);\n\n                this.images = response.data.imagePaths;\n                // for (var x = 0; x < response.data.length; x++) {\n                //   this.viewImages.push(\n                //     \"http://192.168.0.7:40/public/uploads/\" +\n                //       sessionStorage.getItem(\"Company\") +\n                //       \"/\" +\n                //       response.data[x].path\n                //   );\n                // }\n                // console.log(\"Images:\", this.viewImages);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } catch {\n        // console.log(\"No Edit\");\n        //Fetching Promo Info\n        axiosClient\n          .get(\"/fetchPromoBranchInfo\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            // console.log(\"Promo Branch Info:\", response.data);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.fetchChainCode();\n            this.fetchChainName();\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      }\n    },\n    cancelTransaction() {\n      // location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n      if (\n        sessionStorage.getItem(\"Position\") == \"Reviewer\" ||\n        sessionStorage.getItem(\"Position\") == \"Approver\"\n      )\n        this.$router.push({\n          path: \"/pull-out/requests\",\n        });\n      else\n        this.$router.push({\n          path: \"/pull-out/pullout-transaction\",\n        });\n    },\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      // console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      data.boxLabels.forEach((box) => {\n        let tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n      });\n      console.log(\"Edit: \", data);\n      this.transferredData = data;\n    },\n    closeModal() {\n      // console.log(\"CLOSE\");\n      this.addCategoryBoxLabel();\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxNumber) {\n      this.validateSubmit();\n      console.log(\"New DATAs\", code, boxNumber);\n      // this.images.splice(index, 1);\n      // this.newTransaction.items = this.newTransaction.items.filter(\n      //   (item) => item.code !== code || item.boxNumber !== boxNumber\n      // );\n      for (let key in this.newTransaction.items) {\n        console.log(\n          \"Condition if will delete\",\n          this.newTransaction.items[key].code === code ||\n            this.newTransaction.items[key].boxNumber === boxNumber\n        );\n\n        console.log(\"Items:\", this.newTransaction.items[key].code);\n        console.log(\"Code:\", code);\n        console.log(\"BoxNumbers:\", this.newTransaction.items[key].boxNumber);\n        console.log(\"BoxNumber:\", boxNumber);\n        if (\n          this.newTransaction.items[key].code === code &&\n          this.newTransaction.items[key].boxNumber === boxNumber\n        ) {\n          try {\n            const uri = window.location.href;\n            var transactionID = uri.split(\"?\")[1];\n            var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n            // console.log(\"ID\", id);\n            // console.log(\"Company\", transactionID.split(\"=\")[2]);\n            var company = transactionID.split(\"=\")[2];\n            axiosClient\n              .post(\"/logsDeleteItemEdit\", {\n                id: id,\n                itemCode: this.newTransaction.items[key].code,\n                boxNumber: this.newTransaction.items[key].boxNumber,\n                userID: sessionStorage.getItem(\"UserID\"),\n              })\n              .then((response) => {\n                console.log(\"Success Log:\", response.data);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          } catch {\n            console.log(\"No Changes\");\n          }\n          console.log(\"Key:\", key);\n          this.newTransaction.items.splice(key, 1);\n          break;\n        }\n      }\n      // this.newTransaction.items.for((key, index) => {\n      //   console.log(\n      //     \"Condition if will delete\",\n      //     key.code === code || key.boxNumber === boxNumber\n      //   );\n      //   if (key.code === code || key.boxNumber === boxNumber) {\n      //     this.newTransaction.items.splice(index, 1);\n      //   }\n      // });\n\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      // console.log(\"Barcode\", this.barcode);\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n                barcode: this.barcode,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      } else if (this.newItemInput.length == 0) this.itemCodeList = [];\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n    },\n    handleQuantity(item) {\n      //console.log(\"Item Quantity\", item.quantity);\n      if (!item.quantity) {\n        //console.log(\"Empty\");\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n\n      this.$notify({\n        component: notification,\n        // icon: \"nc-icon nc-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      if (\"User\" != sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchCompany\")\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else\n        axiosClient\n          .get(\"/fetchCompanyByUser\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            this.companyList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      var company = sessionStorage.getItem(\"Company\");\n      if (company == \"NBFI\" || company == \"ASC\" || company == \"CMC\")\n        this.showCategoryBrand = true;\n      else this.showCategoryBrand = false;\n\n      // if (sessionStorage.getItem(\"Position\") == \"Admin\") this.showUploadImage = true;\n    },\n    fetchChainCode() {\n      if (\n        this.newTransaction.company == \"NBFI\" ||\n        this.newTransaction.company == \"CMC\" ||\n        this.newTransaction.company == \"ASC\"\n      )\n        this.isNBFI = true;\n      else this.isNBFI = false;\n\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainByUser\", {\n            params: {\n              company: this.newTransaction.company,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n      else\n        axiosClient\n          .get(\"/fetchChain\", {\n            params: {\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      // this.notifyVue(\"bottom\", \"right\");\n\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      if (\"User\" == sessionStorage.getItem(\"Position\"))\n        axiosClient\n          .get(\"/fetchChainNameByUser\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            //console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      else {\n        axiosClient\n          .get(\"/fetchChainName\", {\n            params: {\n              chainCode: this.newTransaction.chainCode,\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        this.isBranchName = false;\n      }\n    },\n    addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n      // console.log(\"clicked nUMBER:\", this.showItemInput);\n    },\n    saveItem(boxNUMBER) {\n      if (this.barcode == \"item_16\") {\n        if (this.newItemInput.length > 16)\n          this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        this.newItemInput = this.newItemInput.slice(0, 12);\n      }\n      if (this.barcode == \"item_12\") {\n        axiosClient\n          .get(\"/fetchItemsBarcode\", {\n            params: {\n              ItemNo: this.newItemInput,\n              company: this.newTransaction.company,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Item Barcode to Item No: \", response.data[0]);\n            this.newItemInput = response.data[0].ItemNo;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      var checkItemData = true;\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      setTimeout(() => {\n        // console.log(\"New Item Input:\", this.newItemInput);\n        axiosClient\n          .get(\"/compareItemCode\", {\n            params: {\n              companyType: this.newTransaction.company,\n              ItemNo: this.newItemInput,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Success Item No:\", response.data);\n            if (response.data.length == 0) {\n              // console.log(\"No Item Retrieved\");\n              checkItemData = false;\n            }\n            //console.log(\"Success Item Description\", response.data[0].ItemDescription);\n            this.newItemCode = response.data[0].ItemNo;\n            this.newItemDescription = response.data[0].ItemDescription;\n            this.newStyleCode = response.data[0].StyleCode;\n\n            let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n            axiosClient\n              .get(\"/fetchBrands\", {\n                params: {\n                  companyType: this.newTransaction.company,\n                  brandCode: brandCode,\n                },\n              })\n              .then((response) => {\n                //console.log(\"Success\", response.data);\n                this.newBrand = response.data[0].brandNames;\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          })\n          .catch((error) => {\n            this.missItemCode = 0;\n            !this.newItemInput ? true : (this.isRightCode = true);\n            //console.log(\"Not Equal\");\n            //console.error(error);\n          });\n      }, 300);\n      var newResponseData;\n\n      setTimeout(() => {\n        if (checkItemData) {\n          // console.log(\"Check the value of checkItemData\", checkItemData);\n          // console.log(\"Barcode Selected\", this.barcode);\n          let confirmSave = false;\n          this.isNewItem = !this.newItemInput ? true : false;\n\n          if (this.isNewItem) {\n            this.isRightCode = false;\n            return 0;\n          }\n          // console.log(\"Item Code from the input\", this.newItemCode);\n          axiosClient\n            .get(\"/fetchSameItem\", {\n              params: {\n                company: this.newTransaction.company,\n                ItemCode: this.newItemCode,\n                ItemDescription: this.newItemDescription,\n                StyleCode: this.newStyleCode,\n              },\n            })\n            .then((response) => {\n              // console.log(\"Same Item:\", response.data);\n              newResponseData = response.data;\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n          // console.log(\"Confirm Save: \", confirmSave);\n          // console.log(\"Items: \", this.newTransaction.items);\n          // console.log(this.newListBoxLabel);\n        }\n      }, 500);\n\n      setTimeout(() => {\n        if (checkItemData) {\n          for (var x = 0; x < newResponseData.length; x++) {\n            var flag = true;\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == newResponseData[x].ItemNo &&\n                this.newTransaction.items[i].boxNumber == boxNUMBER\n              ) {\n                // console.log(\"Old Item Code\", this.newTransaction.items[i].code);\n                // console.log(\"New Item Code\", newResponseData[x].ItemNo);\n                // console.log(\"Old Box Number\", this.newTransaction.items[i].boxNumber);\n                // console.log(\"New Box Number\", boxNUMBER);\n                // console.log(\"Same Item Code\");\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[i].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              // console.log(\"Company:\", this.newTransaction.company);\n              if (\n                this.newTransaction.company == \"NBFI\" ||\n                this.newTransaction.company == \"CMC\" ||\n                this.newTransaction.company == \"ASC\"\n              ) {\n                var categorybrand = this.newBrand;\n              } else {\n                var categorybrand = newResponseData[x].Category;\n              }\n              let tempItem = {\n                code: newResponseData[x].ItemNo,\n                description: newResponseData[x].ItemDescription,\n                categorybrand: categorybrand,\n                quantity: 0,\n                size: newResponseData[x].Size,\n                color: newResponseData[x].Color,\n                // boxLabel: label,\n                boxNumber: boxNUMBER,\n                category: newResponseData[x].Category,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        }\n      }, 1000);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      //console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            parseInt(\n              this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id\n            ) + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        console.log(\n          \"Before Add Box\",\n          this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id\n        );\n        tempItem = {\n          id:\n            parseInt(\n              this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id\n            ) + 1,\n        };\n        console.log(\"After Add Box\", tempItem);\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      // this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      console.log(\"New Add Box:\", this.newItemInputBox);\n      //Disable the above select buttons\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n      else this.isEditBLDisabled = false;\n    },\n    submit(confirmation) {\n      if (confirmation) {\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          console.log(\"Items After Saving:\", this.newTransaction.items);\n          //console.log(\"Company: \", this.isValid.company);\n\n          // console.log(\"company\", this.newTransaction.items);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n\n          // if (\n          //   sessionStorage.getItem(\"Position\") == \"Agent\" ||\n          //   sessionStorage.getItem(\"Position\") == \"Admin\"\n          // ) {\n          //   var status = \"endorsement\";\n\n          //   axiosClient\n          //     .post(\"/updateBranchStatus\", {\n          //       userID: sessionStorage.getItem(\"UserID\"),\n          //       company: sessionStorage.getItem(\"Company\"),\n          //       status: status,\n          //       id: id,\n          //     })\n          //     .then((response) => {\n          //       console.log(\"Success Update Branch:\", response.data);\n          //     })\n          //     .catch((error) => {\n          //       console.error(error);\n          //     });\n          // } else if (\n          //   sessionStorage.getItem(\"Position\") == \"Admin\" ||\n          //   sessionStorage.getItem(\"Position\") == \"Approver\"\n          // ) {\n          //   var status = \"approved\";\n\n          //   axiosClient\n          //     .post(\"/updateBranchStatusApprover\", {\n          //       userID: sessionStorage.getItem(\"UserID\"),\n          //       company: sessionStorage.getItem(\"Company\"),\n          //       status: status,\n          //       id: id,\n          //     })\n          //     .then((response) => {\n          //       console.log(\"Success Update Branch:\", response.data);\n          //     })\n          //     .catch((error) => {\n          //       console.error(error);\n          //     });\n          // } else {\n          //   var status = \"unprocessed\";\n          // }\n\n          // // console.log(\"Items to be saved:\", this.newTransaction.items);\n\n          // axiosClient\n          //   .post(\"/updatePullOutBranchRequest\", {\n          //     id: id,\n          //     chainCode: this.newTransaction.chainCode,\n          //     companyType: this.newTransaction.company,\n          //     branchName: this.newTransaction.branchName,\n          //     transactionType: this.newTransaction.transactionType,\n          //     email: sessionStorage.getItem(\"Email\"),\n          //     status: status,\n          //   })\n          //   .then((response) => {\n          //     //console.log(\"Success Branch Save: \", response.data);\n          //     this.transferTransactionID = id;\n          //     let tempObjectTransaction = this.newTransaction.items;\n          //     for (var x = 0; x < this.newTransaction.items.length; x++) {\n          //       let labelBox = \"\";\n          //       for (let box of this.newTransaction.boxLabels) {\n          //         if (box.id == this.newTransaction.items[x].boxNumber) {\n          //           labelBox = box.boxLabel;\n          //         }\n          //       }\n          //       console.log(\"Items to be saved:\", tempObjectTransaction[x]);\n          //       console.log(\"Quantity\", tempObjectTransaction[x].quantity);\n          //       axiosClient\n          //         .post(\"/updatePullOutItemRequest\", {\n          //           id: tempObjectTransaction[x].id,\n          //           plID: id,\n          //           companyType: this.newTransaction.company,\n          //           brand: tempObjectTransaction[x].categorybrand,\n          //           boxNumber: tempObjectTransaction[x].boxNumber,\n          //           boxLabel: labelBox,\n          //           itemCode: tempObjectTransaction[x].code,\n          //           quantity: tempObjectTransaction[x].quantity,\n          //           email: sessionStorage.getItem(\"Email\"),\n          //           status: status,\n          //         })\n          //         .then((response) => {\n          //           // console.log(\"Success Items Save: \", response.data);\n          //           // window.location.href =\n          //           //   \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n          //         })\n          //         .catch((error) => {\n          //           console.error(error);\n          //         });\n          //     }\n          //     // const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n          //     // transactionModal.show();\n          //     this.saving_counter = this.files.length * 2;\n          //   })\n          //   .catch((error) => {\n          //     //console.error(error);\n          //   });\n          // setTimeout(this.handleFileUploadImage, 2000);\n        } catch {\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          //console.log(\"Company: \", this.isValid.company);\n\n          //console.log(\"company\", this.newTransaction.company);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n          axiosClient\n            .post(\"/savePullOutBranchRequest\", {\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              email: sessionStorage.getItem(\"Email\"),\n              status: \"unprocessed\",\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n              this.transferTransactionID = response.data.id;\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/savePullOutItemRequest\", {\n                    plID: response.data.id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    email: sessionStorage.getItem(\"Email\"),\n                    status: \"unprocessed\",\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n              transactionModal.show();\n              this.saving_counter = this.files.length * 2;\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        }\n        setTimeout(this.handleFileUploadImage, 2000);\n      }\n    },\n    draft(confirmation) {\n      if (confirmation) {\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          axiosClient\n            .post(\"/updatePullOutBranchRequest\", {\n              id: id,\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\"),\n            })\n            .then((response) => {\n              console.log(\"draft PLID:: \", id);\n              this.transferTransactionID = id;\n              // console.log(\"Success Branch Save: \", response.data);\n              //console.log(\"Items Length:\", this.newTransaction.items.length);\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                console.log(\"Items\", this.newTransaction.items);\n                console.log(\"Length Items\", this.newTransaction.items.length);\n\n                axiosClient\n                  .post(\"/updatePullOutItemRequest\", {\n                    plID: id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    status: \"draft\",\n                    email: sessionStorage.getItem(\"Email\"),\n                  })\n                  .then((response) => {\n                    console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                  });\n              }\n              const draftModal = new bootstrap.Modal(\"#draftModal\");\n              draftModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n          setTimeout(this.handleFileUploadImage, 2000);\n        } catch {\n          axiosClient\n            .post(\"/savePullOutBranchRequest\", {\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\"),\n            })\n            .then((response) => {\n              this.transferTransactionID = id;\n              //console.log(\"Success Branch Save: \", response.data);\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/savePullOutItemRequest\", {\n                    plID: response.data.id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    status: \"draft\",\n                    email: sessionStorage.getItem(\"Email\"),\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const draftModal = new bootstrap.Modal(\"#draftModal\");\n              draftModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n          setTimeout(this.handleFileUploadImage, 2000);\n        }\n      }\n    },\n    editBoxLabel(code, quantity, boxNumber) {\n      // console.log(\"Items\", code, quantity, boxNumber);\n      this.validateSubmit();\n      //console.log(\n      //   \"Item Code Edit:\",\n      //   code,\n      //   \" Quantity:\",\n      //   quantity,\n      //   \" Box Number\",\n      //   boxNumber\n      // );\n      //console.log(\" == : \", this.newTransaction.items);\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxNumber === boxNumber\n      );\n\n      //console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          if (existingItem.quantity == 0 && item.quantity == 0) existingItem.quantity = 1;\n          else existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      //console.log(\"Unique Items: 1\", uniqueItems);\n      //console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      //console.log(\"Unique Items: Box Number\", uniqueItems[0].boxNumber);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    },\n    decodeFromAlphanumeric(input) {\n      let result = \"\";\n\n      for (let i = 0; i < input.length; i += 2) {\n        const alphanumericChar = input.substr(i, 2);\n        const charCode = parseInt(alphanumericChar, 36);\n\n        result += String.fromCharCode(charCode);\n      }\n\n      return result;\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n/* .tblItemsCell {\n  padding-top: 10px;\n  padding: 10px;\n  color: red;\n} */\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.gendelete-buttons {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n\n.card-attachment {\n  background-color: #66615b;\n}\n\n.card-generator {\n  margin-top: 100px;\n}\n\n.box-with-shadow {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\n  padding: 10px;\n}\n\n.pic-button {\n  padding-top: 5px;\n  padding-bottom: 5px;\n  font-size: 10px !important;\n}\n\n.w-full {\n  width: 100% !important;\n}\n.h-div-32 {\n  height: 32.2px !important;\n}\n.importBtn {\n  width: 100% !important;\n  height: 100% !important;\n  padding: 0.8vh !important;\n}\n\n.image-container {\n  position: relative;\n  width: fit-content;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\n  border-radius: 6px;\n  padding: 5px;\n  overflow: hidden;\n}\n.image-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: background 0.5s ease;\n  transition: opacity 0.5s ease;\n  border-radius: 6px;\n}\n.image-overlay:hover {\n  backdrop-filter: blur(1px);\n  background: rgba(0, 0, 0, 0.2);\n  opacity: 1;\n}\n.image-overlay-button {\n  width: 25% !important;\n  height: 25% !important;\n  /* height: 25% !important; */\n}\n.imageUpload {\n  /* position: absolute; */\n  display: block;\n  width: 10vw;\n}\n\n.imageClose {\n  display: block;\n  height: 23px;\n  font-size: 20px;\n  position: absolute;\n  top: -7px;\n  right: 1px;\n  color: red !important;\n  padding: 1.5px;\n  overflow: hidden;\n  text-decoration: none;\n  border-bottom-left-radius: 2.5px;\n  background-color: white;\n}\n\n.span-upload-image {\n  border: solid;\n  border-left: none;\n  border-width: 1px;\n  border-radius: 4px;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  padding: 8px 9px;\n  width: fit-content;\n  white-space: nowrap;\n  display: inline-block;\n}\n\n@media (max-width: 767px) {\n  .span-upload-image {\n    text-align: center;\n    border: solid;\n    border-width: 1px;\n    border-radius: 4px;\n    padding: 8px 9px;\n    width: 100%;\n    white-space: nowrap;\n    text-overflow: clip;\n    overflow: hidden;\n    margin-top: 2px;\n    display: inline-block;\n  }\n}\n@media (max-width: 575px) {\n  .imageUpload {\n    width: 40vw;\n  }\n}\n@media (min-width: 576px) {\n  .imageUpload {\n    width: 30vw;\n  }\n}\n@media (min-width: 768px) {\n  .imageUpload {\n    width: 20vw;\n  }\n}\n@media (min-width: 1283px) {\n  .imageUpload {\n    width: 15vw;\n  }\n}\n@media (min-width: 1400px) {\n  .imageUpload {\n    width: 10vw;\n  }\n}\n\n.el-table .warning-row {\n  background: rgb(253, 230, 230) !important;\n}\n</style>\n"],"mappings":"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ACAP,OAAA;QACAC,SAAA;QACAC,UAAA;QACAC,eAAA;QACAK,QAAA;QACAC,IAAA;MACA;MACAC,UAAA;MACAC,QAAA;MACAC,QAAA;MACAC,UAAA;MACAC,mBAAA;MACAC,mBAAA;MAEAC,mBAAA,GACA;QACAC,KAAA;QACAC,KAAA;QACAlB,OAAA;MACA,GACA;QACAiB,KAAA;QACAC,KAAA;QACAlB,OAAA;MACA,GACA;QACAiB,KAAA;QACAC,KAAA;QACAlB,OAAA;MACA,GACA;QACAiB,KAAA;QACAC,KAAA;QACAlB,OAAA;MACA,GACA;QACAiB,KAAA;QACAC,KAAA;QACAlB,OAAA;MACA,GACA;QACAiB,KAAA;QACAC,KAAA;QACAlB,OAAA;MACA,EAEA;MACAmB,WAAA;MACAC,YAAA;MACAC,QAAA;MACAC,kBAAA;MACAC,YAAA;MACAC,WAAA;MACAC,aAAA;QACAC,SAAA;MACA;MACAC,MAAA;QACAC,OAAA;QACAC,MAAA;QACAC,IAAA;MACA;MACAC,aAAA;MACAC,SAAA;MACAC,WAAA;MACAC,qBAAA;MACAC,YAAA;MACAC,eAAA;MACAC,QAAA;MACAC,SAAA;MACAC,MAAA;MACAC,OAAA;MACAC,WAAA,GACA,oCACA,6CACA,8DACA,iCACA,0CACA,2DACA,gDACA,yDACA,yEACA;MACAC,MAAA;MACAC,KAAA;MACAC,WAAA;MACAC,WAAA;QACAC,SAAA;QACA5B,KAAA;MACA;MACA6B,OAAA;MACAC,OAAA;MACAC,cAAA;MACAC,QAAA;MACAC,eAAA;QACAC,KAAA;MACA;MACAC,SAAA;QACAD,KAAA;QACAE,UAAA;MACA;MACAC,SAAA;MACAC,iBAAA;MACAC,aAAA;MACAC,MAAA;MACAC,SAAA;MACAC,UAAA;MACAC,gBAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA,WAAAA,gBAAA;MAAA,IAAAC,KAAA;MACA,YAAAxB,WAAA,CAAAyB,MAAA,WAAA/C,WAAA;QACA,OAAAA,WAAA,CAAAgD,WAAA,GAAAC,QAAA,CAAAH,KAAA,CAAA9C,WAAA,CAAAgD,WAAA;MACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}