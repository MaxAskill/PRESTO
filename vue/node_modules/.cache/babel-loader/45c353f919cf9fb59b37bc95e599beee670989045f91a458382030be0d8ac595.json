{"ast":null,"code":"import _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Button2 from \"element-ui/lib/theme-chalk/button.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Button from \"element-ui/lib/button\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: {\n    [_DatePicker.name]: _DatePicker,\n    [_TimeSelect.name]: _TimeSelect,\n    [_Slider.name]: _Slider,\n    [_Tag.name]: _Tag,\n    [_Input.name]: _Input,\n    [_Button.name]: _Button,\n    [_Option.name]: _Option,\n    [_Select.name]: _Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate\n  },\n  data() {\n    return {\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      tableData: [{\n        id: 1,\n        name: \"Dakota Rice\",\n        salary: \"$36.738\",\n        country: \"Niger\",\n        city: \"Oud-Turnhout\"\n      }, {\n        id: 2,\n        name: \"Minerva Hooper\",\n        salary: \"$23,789\",\n        country: \"Curaçao\",\n        city: \"Sinaai-Waas\"\n      }, {\n        id: 3,\n        name: \"Sage Rodriguez\",\n        salary: \"$56,142\",\n        country: \"Netherlands\",\n        city: \"Baileux\"\n      }, {\n        id: 4,\n        name: \"Philip Chaney\",\n        salary: \"$38,735\",\n        country: \"Korea, South\",\n        city: \"Overland Park\"\n      }, {\n        id: 5,\n        name: \"Doris Greene\",\n        salary: \"$63,542\",\n        country: \"Malawi\",\n        city: \"Feldkirchen in Kärnten\"\n      }],\n      newListBoxLabel: [{\n        id: 1,\n        boxLabel: \"Box Label One\"\n      }, {\n        id: 2,\n        boxLabel: \"Box Label Two\"\n      }, {\n        id: 3,\n        boxLabel: \"Box Label Three\"\n      }, {\n        id: 4,\n        boxLabel: \"Box Label Four\"\n      }],\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"Concess Pull-Out Item Disposal\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"Concess Pull-Out - Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"Concess Pull-Out - Warehouse\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      }\n    };\n  },\n  mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        axiosClient.get(\"/fetchItemsNBFI\", {\n          params: {\n            ItemNo: this.newItemInput\n          }\n        }).then(response => {\n          console.log(\"Item Code Response: \", response.data);\n          this.itemCodeList = response.data;\n        }).catch(error => {});\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: \"NBFI\",\n          ItemNo: this.newItemInput\n        }\n      }).then(response => {\n        console.log(\"Success Item Description\", response.data[0].ItemDescription);\n        this.newItemDescription = response.data[0].ItemDescription;\n        this.newStyleCode = response.data[0].StyleCode;\n        let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: \"NBFI\",\n            brandCode: brandCode\n          }\n        }).then(response => {\n          console.log(\"Success\", response.data);\n          this.newBrand = response.data[0].brandNames;\n        }).catch(error => {\n          console.error(error);\n        });\n      }).catch(error => {\n        this.missItemCode = 0;\n        console.log(\"Not Equal\");\n        console.error(error);\n      });\n    },\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    handleLabel() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\"\n        }\n      });\n    },\n    fetchCompany() {\n      axiosClient.get(\"/fetchCompany\").then(response => {\n        console.log(\"Company Response:\", response.data);\n        this.companyList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    fetchChainCode() {\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(response => {\n        console.log(\"Chain Code Response:\", response.data);\n        this.chainCodeList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    fetchChainName() {\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(response => {\n        console.log(\"Chain Name Response:\", response.data);\n        this.branchNameList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(label) {\n      this.isItem = false;\n      this.isAddItem = true;\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n      let str = label.toLowerCase();\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: \"NBFI\",\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(response => {\n        console.log(\"Success Fetch Same Items:\", response.data);\n        for (var i = 0; i < this.newTransaction.items.length; i++) {\n          var flag = true;\n          for (var x = 0; x < response.data.length; x++) {\n            if (this.newTransaction.items[i].code == response.data[x].ItemNo && this.newTransaction.items[i].boxLabel.toLowerCase() == str) {\n              this.newTransaction.items[i].quantity = parseInt(this.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                categorybrand: this.newBrand,\n                quantity: 1,\n                boxLabel: label\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n          }\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n      console.log(\"Items: \", this.newTransaction.items);\n      this.notifyVue(\"bottom\", \"right\");\n      this.newItemInput = \"\";\n      this.showItemInput = \"\";\n    },\n    cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel\n      };\n      let tempItem = {\n        id: this.newTransaction.boxLabels.length + 1\n      };\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      console.log(\"itemBox:\", this.newItemInputBox);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    updateProfile() {\n      console.log(\"company\", this.newTransaction.company);\n      alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","use","_Table","_TableColumn","components","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Button","_Option","_Select","data","itemCodeList","isBoxLabel","isItem","isAddItem","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","tableData","id","salary","country","city","newListBoxLabel","boxLabel","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","notifications","topCenter","modals","classic","notice","mini","mounted","fetchCompany","methods","fetchItems","length","get","params","ItemNo","then","response","console","log","catch","error","compareItemCode","indexOf","parts","split","slice","companyType","ItemDescription","StyleCode","brandCode","toString","substr","brandNames","missItemCode","handleQuantity","notifyVue","handleLabel","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","props","customValue","fetchChainCode","fetchChainName","addItem","saveItem","str","toLowerCase","i","flag","x","code","quantity","parseInt","tempItem","description","Size","categorybrand","push","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","updateProfile","alert","JSON","stringify"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"fetchChainCode\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.shortName\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"fetchChainName\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button type=\"default\" link class=\"font-weight-bold\">\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label\"\n                    v-model=\"newBoxLabel\"\n                    class=\"w-100\"\n                  ></fg-input>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"saveBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n              </div>\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"boxLabel.boxLabel\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.id)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.id\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <div class=\"relative\">\n                        <input\n                          :disabled=\"switchItemCode\"\n                          type=\"text\"\n                          v-model=\"newItemInput\"\n                          @input=\"fetchItems\"\n                          @change=\"compareItemCode\"\n                          list=\"items\"\n                          class=\"block appearance-none w-full bg-gray-100 border-2 border-gray-200 text-gray-700 py-2.5 px-2 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                        />\n                        <datalist id=\"items\">\n                          <option\n                            v-for=\"item in itemCodeList\"\n                            :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                            :key=\"item.ItemNo\"\n                          ></option>\n                        </datalist>\n                      </div>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"saveItem(boxLabel.boxLabel)\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"nowrap\">Description</th>\n                        <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-show=\"boxLabel.boxLabel == item.boxLabel\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.id\"\n                      >\n                        <th scope=\"row\" class=\"px-3\">{{ item.code }}</th>\n                        <td class=\"cell px-3\">{{ item.description }}</td>\n                        <td class=\"cell px-3\">{{ item.categorybrand }}</td>\n                        <td class=\"cell\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                          />\n                        </td>\n                        <td class=\"cell\">\n                          <input\n                            type=\"text\"\n                            @blur=\"handleLabel(item.id)\"\n                            v-model=\"item.boxLabel\"\n                            class=\"table-input-box\"\n                          />\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n            </collapse>\n          </card>\n        </div>\n\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"updateProfile\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from \"src/components/UIComponents\";\nimport {\n  DatePicker,\n  TimeSelect,\n  Slider,\n  Tag,\n  Input,\n  Button,\n  Select,\n  Option,\n} from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n  },\n  data() {\n    return {\n      itemCodeList: [],\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      tableData: [\n        {\n          id: 1,\n          name: \"Dakota Rice\",\n          salary: \"$36.738\",\n          country: \"Niger\",\n          city: \"Oud-Turnhout\",\n        },\n        {\n          id: 2,\n          name: \"Minerva Hooper\",\n          salary: \"$23,789\",\n          country: \"Curaçao\",\n          city: \"Sinaai-Waas\",\n        },\n        {\n          id: 3,\n          name: \"Sage Rodriguez\",\n          salary: \"$56,142\",\n          country: \"Netherlands\",\n          city: \"Baileux\",\n        },\n        {\n          id: 4,\n          name: \"Philip Chaney\",\n          salary: \"$38,735\",\n          country: \"Korea, South\",\n          city: \"Overland Park\",\n        },\n        {\n          id: 5,\n          name: \"Doris Greene\",\n          salary: \"$63,542\",\n          country: \"Malawi\",\n          city: \"Feldkirchen in Kärnten\",\n        },\n      ],\n      newListBoxLabel: [\n        {\n          id: 1,\n          boxLabel: \"Box Label One\",\n        },\n        {\n          id: 2,\n          boxLabel: \"Box Label Two\",\n        },\n        {\n          id: 3,\n          boxLabel: \"Box Label Three\",\n        },\n        {\n          id: 4,\n          boxLabel: \"Box Label Four\",\n        },\n      ],\n\n      transactionTypeList: [\n        { value: \"CPO - BranchDisposal\", label: \"Concess Pull-Out Item Disposal\" },\n        { value: \"CPO - Store\", label: \"Concess Pull-Out - Store\" },\n        { value: \"CPO - Warehouse\", label: \"Concess Pull-Out - Warehouse\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n    };\n  },\n  mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        axiosClient\n          .get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput,\n            },\n          }) // Make a GET request to the specified URL\n          .then((response) => {\n            console.log(\"Item Code Response: \", response.data);\n            this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n            // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n            // //   ItemNo: ItemNo,\n            // // }));\n            //     console.log(\"Success Array Item: \", this.itemCodeArray);\n            //    console.log(\"Success Item: \", response.data);\n            //this.validateItemCode();\n          })\n          .catch((error) => {\n            // console.error(error.reponse); // Handle any errors that may occur\n          });\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: \"NBFI\",\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          // console.log(\"Success Item No:\", response.data[0].ItemNo);\n          console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: \"NBFI\",\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          console.log(\"Not Equal\");\n          console.error(error);\n        });\n    },\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    handleLabel() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(label) {\n      this.isItem = false;\n      this.isAddItem = true;\n\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n\n      let str = label.toLowerCase();\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: \"NBFI\",\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Fetch Same Items:\", response.data);\n          for (var i = 0; i < this.newTransaction.items.length; i++) {\n            var flag = true;\n            for (var x = 0; x < response.data.length; x++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxLabel.toLowerCase() == str\n              ) {\n                // console.log(\"Equals Item Code must be add the quantity\");\n                // console.log(\n                //   \"OLD Quantity: \" +\n                //     parseInt(this.items[x].itemQuantity) +\n                //     \"NEW Quantity: \" +\n                //     parseInt(this.newItemQuantity)\n                // );\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                // console.log(\"Quantity\", this.items[x].itemQuantity);\n                flag = false;\n                break;\n              }\n              if (flag) {\n                let tempItem = {\n                  code: response.data[x].ItemNo,\n                  description:\n                    response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                  categorybrand: this.newBrand,\n                  quantity: 1,\n                  boxLabel: label,\n                };\n\n                this.newTransaction.items.push(tempItem);\n              }\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      console.log(\"Items: \", this.newTransaction.items);\n      this.notifyVue(\"bottom\", \"right\");\n\n      this.newItemInput = \"\";\n      this.showItemInput = \"\";\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n    },\n    saveBoxLabel() {\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = {\n        id: this.newTransaction.boxLabels.length + 1,\n        boxLabel: this.newBoxLabel,\n      };\n\n      let tempItem = {\n        id: this.newTransaction.boxLabels.length + 1,\n      };\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      console.log(\"itemBox:\", this.newItemInputBox);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n      // console.log(\"Console:\",this.newItem);\n    },\n    cancelBoxLabel() {\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n    },\n    updateProfile() {\n      console.log(\"company\", this.newTransaction.company);\n      alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\n/* .th-itemcode{\n\n    } */\n.table-input-box:focus {\n  border-color: blue;\n  border-width: 1px;\n  outline: none;\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}