{"ast":null,"code":"import \"core-js/modules/es.string.link.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { CollapseTransition } from \"vue2-transitions\";\nimport linkName from \"../../../linkName\";\nimport axiosClient from \"../../../axios\";\nexport default {\n  components: {\n    CollapseTransition: CollapseTransition\n  },\n  props: {\n    name: {\n      type: String,\n      default: \"\"\n    },\n    menu: {\n      type: Boolean,\n      default: false,\n      description: \"Whether item is a menu containing multiple items\"\n    },\n    link: {\n      type: Object,\n      default: function _default() {\n        return {\n          name: \"\",\n          path: \"\",\n          children: []\n        };\n      },\n      description: \"Link object\"\n    }\n  },\n  provide: function provide() {\n    return {\n      addLink: this.addChild,\n      removeLink: this.removeChild\n    };\n  },\n  inject: {\n    addLink: {\n      default: null\n    },\n    removeLink: {\n      default: null\n    },\n    autoClose: {\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      children: [],\n      collapsed: true,\n      date: \"\",\n      time: \"\",\n      position: \"\"\n    };\n  },\n  created: function created() {\n    setInterval(this.dateTime, 1000);\n  },\n  computed: {\n    baseComponent: function baseComponent() {\n      return this.isMenu || this.link.isRoute ? \"li\" : \"router-link\";\n    },\n    isMenu: function isMenu() {\n      return this.children.length > 0 || this.menu === true;\n    },\n    isActive: function isActive() {\n      var _this = this;\n      if (this.$route) {\n        var matchingRoute = this.children.find(function (c) {\n          return _this.$route.path.startsWith(c.link.path);\n        });\n        if (matchingRoute !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  methods: {\n    dateTime: function dateTime() {\n      var today = new Date();\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var formattedDate = months[today.getMonth()] + \" \" + (today.getDate() < 10 ? \"0\" : \"\") + today.getDate() + \", \" + today.getFullYear();\n      this.date = formattedDate;\n      var hours = today.getHours();\n      var minutes = today.getMinutes();\n      var seconds = today.getSeconds();\n      var formattedHours = hours % 12;\n      formattedHours = formattedHours === 0 ? 12 : formattedHours;\n      var period = hours >= 12 ? \"PM\" : \"AM\";\n      var formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      var formattedSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n      var time = formattedHours + \":\" + formattedMinutes + \":\" + formattedSeconds + \" \" + period;\n      this.time = time;\n      this.position = sessionStorage.getItem(\"Position\");\n    },\n    addChild: function addChild(item) {\n      var index = this.$slots.default.indexOf(item.$vnode);\n      this.children.splice(index, 0, item);\n    },\n    removeChild: function removeChild(item) {\n      var tabs = this.children;\n      var index = tabs.indexOf(item);\n      tabs.splice(index, 1);\n    },\n    elementType: function elementType(link) {\n      var isParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (link.isRoute === false) {\n        return isParent ? \"li\" : \"a\";\n      } else {\n        return \"router-link\";\n      }\n    },\n    collapseMenu: function collapseMenu() {\n      this.collapsed = !this.collapsed;\n    },\n    onItemClick: function onItemClick() {\n      if (this.autoClose) {\n        this.$sidebar.showSidebar = false;\n      }\n      if (this.link.name == \"Logout\") this.logout();else linkName.val = this.link.name;\n    },\n    logout: function logout() {\n      var _this2 = this;\n      axiosClient.post(\"/logout\").then(function (response) {\n        sessionStorage.removeItem(\"UserID\");\n        sessionStorage.removeItem(\"Token\");\n        sessionStorage.removeItem(\"Position\");\n        sessionStorage.removeItem(\"Company\");\n        sessionStorage.removeItem(\"Email\");\n        _this2.$router.push({\n          name: \"Login\"\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (this.addLink) {\n      this.addLink(this);\n    }\n    if (this.link.collapsed !== undefined) {\n      this.collapsed = this.link.collapsed;\n    }\n    if (this.isActive && this.isMenu) {\n      this.collapsed = false;\n    }\n  },\n  destroyed: function destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n    if (this.removeLink) {\n      this.removeLink(this);\n    }\n  }\n};","map":{"version":3,"names":["CollapseTransition","linkName","axiosClient","components","props","name","type","String","default","menu","Boolean","description","link","Object","_default","path","children","provide","addLink","addChild","removeLink","removeChild","inject","autoClose","data","collapsed","date","time","position","created","setInterval","dateTime","computed","baseComponent","isMenu","isRoute","length","isActive","_this","$route","matchingRoute","find","c","startsWith","undefined","methods","today","Date","months","formattedDate","getMonth","getDate","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedHours","period","formattedMinutes","formattedSeconds","sessionStorage","getItem","item","index","$slots","indexOf","$vnode","splice","tabs","elementType","isParent","arguments","collapseMenu","onItemClick","$sidebar","showSidebar","logout","val","_this2","post","then","response","removeItem","$router","push","mounted","destroyed","$el","parentNode"],"sources":["src/components/UIComponents/SidebarPlugin/SidebarItem.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"baseComponent\"\n    :to=\"link.path ? link.path : '/'\"\n    :class=\"{ active: isActive || $route.fullPath.startsWith(link.path) }\"\n    tag=\"li\"\n  >\n    <div v-if=\"link.name == 'UserPromo'\" class=\"user\">\n      <div class=\"photo\">\n        <img src=\"static/img/faces/user-icon.png\" alt=\"user avatar\" />\n        <!-- import router from \"../../../routes/routes\"; -->\n      </div>\n      <div class=\"info\">\n        <a v-if=\"isMenu\" data-toggle=\"collapse\" href=\"#\" @click.prevent=\"collapseMenu\">\n          <span>\n            {{ name }}\n            <b class=\"caret\" :class=\"{ rotated: !collapsed }\"></b>\n          </span>\n          <span class=\"simple-text customize-datetimeposition\">\n            {{ position }}\n          </span>\n          <span class=\"simple-text customize-datetimeposition\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date:\n            {{ date }}\n          </span>\n          <span class=\"simple-text customize-datetimeposition\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Time:\n            {{ time }}\n          </span>\n        </a>\n\n        <collapse-transition v-if=\"$slots.default || this.isMenu\">\n          <div v-show=\"!collapsed\" class=\"collapse-menu\">\n            <ul class=\"nav\">\n              <slot></slot>\n            </ul>\n          </div>\n        </collapse-transition>\n\n        <slot name=\"title\" v-if=\"children.length === 0 && !$slots.default && link.path\">\n          <component\n            :to=\"link.path\"\n            :is=\"elementType(link, false)\"\n            :class=\"{ active: link.active }\"\n            :target=\"link.target\"\n            @click.native.stop=\"onItemClick\"\n            :href=\"link.path\"\n          >\n            <template v-if=\"addLink\">\n              <span class=\"sidebar-mini-icon\">{{ link.name.substring(0, 1) }}</span>\n              <span class=\"sidebar-normal\">{{ link.name }}</span>\n            </template>\n            <template v-else>\n              <i :class=\"link.icon\"></i>\n              <p>{{ link.name }}</p>\n            </template>\n          </component>\n        </slot>\n      </div>\n    </div>\n    <a\n      v-if=\"isMenu && link.name != 'UserPromo'\"\n      data-toggle=\"collapse\"\n      href=\"#\"\n      @click.prevent=\"collapseMenu\"\n    >\n      <i :class=\"link.icon\"></i>\n      <p>\n        {{ link.name }}\n        <b class=\"caret\" :class=\"{ rotated: !collapsed }\"></b>\n      </p>\n    </a>\n    <collapse-transition\n      v-if=\"($slots.default || this.isMenu) && this.link.name != 'UserPromo'\"\n    >\n      <div v-show=\"!collapsed\" class=\"collapse-menu\">\n        <ul class=\"nav\">\n          <slot></slot>\n        </ul>\n      </div>\n    </collapse-transition>\n    <slot name=\"title\" v-if=\"children.length === 0 && !$slots.default && link.path\">\n      <component\n        :to=\"link.path\"\n        :is=\"elementType(link, false)\"\n        :class=\"{ active: link.active }\"\n        :target=\"link.target\"\n        @click.native.stop=\"onItemClick\"\n        :href=\"link.path\"\n      >\n        <template v-if=\"addLink\">\n          <span class=\"sidebar-mini-icon\">{{ link.name.substring(0, 1) }}</span>\n          <span class=\"sidebar-normal\">{{ link.name }}</span>\n        </template>\n        <template v-else>\n          <i :class=\"link.icon\"></i>\n          <p>{{ link.name }}</p>\n        </template>\n      </component>\n    </slot>\n  </component>\n</template>\n<script>\nimport { CollapseTransition } from \"vue2-transitions\";\nimport linkName from \"../../../linkName\";\nimport axiosClient from \"../../../axios\";\n\nexport default {\n  components: {\n    CollapseTransition,\n  },\n  props: {\n    name: {\n      type: String,\n      default: \"\",\n    },\n    menu: {\n      type: Boolean,\n      default: false,\n      description: \"Whether item is a menu containing multiple items\",\n    },\n    link: {\n      type: Object,\n      default: () => {\n        return {\n          name: \"\",\n          path: \"\",\n          children: [],\n        };\n      },\n      description: \"Link object\",\n    },\n  },\n  provide() {\n    return {\n      addLink: this.addChild,\n      removeLink: this.removeChild,\n    };\n  },\n  inject: {\n    addLink: { default: null },\n    removeLink: { default: null },\n    autoClose: { default: false },\n  },\n  data() {\n    return {\n      children: [],\n      collapsed: true,\n      date: \"\",\n      time: \"\",\n      position: \"\",\n    };\n  },\n  created() {\n    setInterval(this.dateTime, 1000);\n  },\n  computed: {\n    baseComponent() {\n      return this.isMenu || this.link.isRoute ? \"li\" : \"router-link\";\n    },\n    isMenu() {\n      return this.children.length > 0 || this.menu === true;\n    },\n    isActive() {\n      if (this.$route) {\n        let matchingRoute = this.children.find((c) =>\n          this.$route.path.startsWith(c.link.path)\n        );\n        if (matchingRoute !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    },\n  },\n  methods: {\n    dateTime() {\n      const today = new Date();\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      const formattedDate =\n        months[today.getMonth()] +\n        \" \" +\n        (today.getDate() < 10 ? \"0\" : \"\") +\n        today.getDate() +\n        \", \" +\n        today.getFullYear();\n\n      this.date = formattedDate;\n\n      const hours = today.getHours();\n      const minutes = today.getMinutes();\n      const seconds = today.getSeconds();\n\n      let formattedHours = hours % 12;\n      formattedHours = formattedHours === 0 ? 12 : formattedHours;\n\n      const period = hours >= 12 ? \"PM\" : \"AM\";\n      const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      const formattedSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      const time =\n        formattedHours + \":\" + formattedMinutes + \":\" + formattedSeconds + \" \" + period;\n      // const dateTime = date + ' ' + time;\n\n      this.time = time;\n      // console.log(\"Date:\", this.date);\n\n      this.position = sessionStorage.getItem(\"Position\");\n    },\n    addChild(item) {\n      const index = this.$slots.default.indexOf(item.$vnode);\n      this.children.splice(index, 0, item);\n    },\n    removeChild(item) {\n      const tabs = this.children;\n      const index = tabs.indexOf(item);\n      tabs.splice(index, 1);\n    },\n    elementType(link, isParent = true) {\n      if (link.isRoute === false) {\n        return isParent ? \"li\" : \"a\";\n      } else {\n        return \"router-link\";\n      }\n    },\n    collapseMenu() {\n      this.collapsed = !this.collapsed;\n    },\n    onItemClick() {\n      if (this.autoClose) {\n        this.$sidebar.showSidebar = false;\n      }\n      if (this.link.name == \"Logout\") this.logout();\n      else linkName.val = this.link.name;\n    },\n    logout() {\n      axiosClient.post(\"/logout\").then((response) => {\n        // console.log(response);\n        sessionStorage.removeItem(\"UserID\");\n        sessionStorage.removeItem(\"Token\");\n        sessionStorage.removeItem(\"Position\");\n        sessionStorage.removeItem(\"Company\");\n        sessionStorage.removeItem(\"Email\");\n        this.$router.push({ name: \"Login\" });\n      });\n    },\n  },\n  mounted() {\n    if (this.addLink) {\n      this.addLink(this);\n    }\n    if (this.link.collapsed !== undefined) {\n      this.collapsed = this.link.collapsed;\n    }\n    if (this.isActive && this.isMenu) {\n      this.collapsed = false;\n    }\n  },\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n    if (this.removeLink) {\n      this.removeLink(this);\n    }\n  },\n};\n</script>\n<style scoped>\n.caret.rotated {\n  transform: rotate(180deg);\n}\n\n.customize-datetimeposition {\n  font-size: 12px !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}