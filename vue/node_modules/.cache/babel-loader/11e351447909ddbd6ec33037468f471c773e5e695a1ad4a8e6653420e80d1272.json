{"ast":null,"code":"import _defineProperty from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _props$watch$computed;\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default (_props$watch$computed = {\n  props: [\"itemDetail\"],\n  watch: {},\n  computed: {},\n  data: function data() {\n    return {\n      CodeList: [{\n        id: 1,\n        brand: \"Barbizon\"\n      }, {\n        id: 2,\n        brand: \"Sassa\"\n      }, {\n        id: 3,\n        brand: \"Island Haze\"\n      }],\n      chainCodeList: [],\n      companyList: [],\n      newItemCode: \"\",\n      newItemDescription: \"\",\n      newItemBrand: \"\",\n      newItemDepartment: \"\",\n      newItemSubDepartment: \"\",\n      newItemCategory: \"\",\n      newItemSubCategory: \"\",\n      isEmpty: true\n    };\n  },\n  mounted: function mounted() {\n    this.fetchChainCode();\n  }\n}, _defineProperty(_props$watch$computed, \"watch\", {\n  newItemCode: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  },\n  newItemDescription: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  },\n  newItemBrand: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  },\n  newItemDepartment: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  },\n  newItemSubDepartment: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  },\n  newItemCategory: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  },\n  newItemSubCategory: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  }\n}), _defineProperty(_props$watch$computed, \"methods\", {\n  checking: function checking() {\n    if (this.newItemCode === \"\" || this.newItemDescription === \"\" || this.newItemBrand === \"\" || this.newItemDepartment === \"\" || this.newItemSubDepartment === \"\" || this.newItemCategory === \"\" || this.newItemSubCategory === \"\") {\n      this.isEmpty = true;\n    } else {\n      this.isEmpty = false;\n    }\n  },\n  convertToUppercase: function convertToUppercase() {\n    this.newBrandName = this.newBrandName.toUpperCase();\n  },\n  submit: function submit() {},\n  closeModal: function closeModal() {\n    this.newItemCode = \"\";\n    this.newItemDescription = \"\";\n    this.newItemBrand = \"\";\n    this.newItemDepartment = \"\";\n    this.newItemSubDepartment = \"\";\n    this.newItemCategory = \"\";\n    this.newItemSubCategory = \"\";\n  },\n  fetchChainCode: function fetchChainCode() {\n    var _this = this;\n    axiosClient.get(\"/fetchChainCodeAdmin\", {\n      params: {\n        company: this.company\n      }\n    }).then(function (response) {\n      _this.chainCodeList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n    axiosClient.get(\"/fetchCompany\").then(function (response) {\n      _this.companyList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n}), _props$watch$computed);","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","_props$watch$computed","props","watch","computed","data","CodeList","id","brand","chainCodeList","companyList","newItemCode","newItemDescription","newItemBrand","newItemDepartment","newItemSubDepartment","newItemCategory","newItemSubCategory","isEmpty","mounted","fetchChainCode","_defineProperty","handler","checking","deep","convertToUppercase","newBrandName","toUpperCase","submit","closeModal","_this","get","params","company","then","response","catch","error","console"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/ModalMaintenance/EditMaintenanceModal/EditItemModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"edititemmodal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"edititemmodalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"edititemmodal\">EDIT ITEM</h1>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"row\">\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Item Code\"\n                  :placeholder=\"itemDetail.ItemNo\"\n                  v-model.trim=\"newItemCode\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-6\">\n                <fg-input\n                  label=\"Item Description\"\n                  :placeholder=\"itemDetail.ItemDescription\"\n                  v-model.trim=\"newItemDescription\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input label=\"Chain Code\">\n                  <el-select\n                    class=\"select-default\"\n                    size=\"large\"\n                    :placeholder=\"itemDetail.brandNames\"\n                    v-model=\"newItemBrand\"\n                  >\n                    <el-option\n                      v-for=\"option in CodeList\"\n                      class=\"select-default\"\n                      :value=\"option.brand\"\n                      :label=\"option.brand\"\n                      :key=\"option.id\"\n                    >\n                    </el-option>\n                  </el-select>\n                </fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Department\"\n                  :placeholder=\"itemDetail.Department\"\n                  v-model.trim=\"newItemDepartment\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Sub-Department\"\n                  :placeholder=\"itemDetail.SubDepartment\"\n                  v-model.trim=\"newItemSubDepartment\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Category\"\n                  :placeholder=\"itemDetail.Category\"\n                  v-model.trim=\"newItemCategory\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Sub-Category\"\n                  :placeholder=\"itemDetail.SubCategory\"\n                  v-model.trim=\"newItemSubCategory\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            @click.prevent=\"closeModal()\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            :disabled=\"isEmpty\"\n            @click.prevent=\"submit\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  props: [\"itemDetail\"],\n  // props: [\"branchDetail\"],\n\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      CodeList: [\n        {\n          id: 1,\n          brand: \"Barbizon\",\n        },\n        {\n          id: 2,\n          brand: \"Sassa\",\n        },\n        {\n          id: 3,\n          brand: \"Island Haze\",\n        },\n      ],\n      chainCodeList: [],\n      companyList: [],\n      newItemCode: \"\",\n      newItemDescription: \"\",\n      newItemBrand: \"\",\n      newItemDepartment: \"\",\n      newItemSubDepartment: \"\",\n      newItemCategory: \"\",\n      newItemSubCategory: \"\",\n      isEmpty: true,\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    newItemCode: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n    newItemDescription: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n    newItemBrand: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n    newItemDepartment: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n    newItemSubDepartment: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n    newItemCategory: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n    newItemSubCategory: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    checking() {\n      if (\n        this.newItemCode === \"\" ||\n        this.newItemDescription === \"\" ||\n        this.newItemBrand === \"\" ||\n        this.newItemDepartment === \"\" ||\n        this.newItemSubDepartment === \"\" ||\n        this.newItemCategory === \"\" ||\n        this.newItemSubCategory === \"\"\n      ) {\n        this.isEmpty = true;\n      } else {\n        this.isEmpty = false;\n      }\n    },\n    convertToUppercase() {\n      this.newBrandName = this.newBrandName.toUpperCase();\n    },\n    submit() {\n      // axiosClient\n      //   .post(\"/addNewBranch\", {\n      //     branchCode: this.newBranch.branchCode,\n      //     chainCode: this.newBranch.chainCode,\n      //     branchName: this.newBranch.branchName,\n      //     userID: sessionStorage.getItem(\"UserID\"),\n      //     companyType: this.newBranch.company,\n      //     company: this.company,\n      //   })\n      //   .then((response) => {\n      //     // console.log(\"Response:\", response.data);\n      //     setTimeout(() => {\n      //       window.location.reload();\n      //     }, 3000); // Reload after 3 seconds\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n    closeModal() {\n      this.newItemCode = \"\";\n      this.newItemDescription = \"\";\n      this.newItemBrand = \"\";\n      this.newItemDepartment = \"\";\n      this.newItemSubDepartment = \"\";\n      this.newItemCategory = \"\";\n      this.newItemSubCategory = \"\";\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChainCodeAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AAgHA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA,gBAAAC,qBAAA;EACAC,KAAA;EAGAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA,GACA;QACAC,EAAA;QACAC,KAAA;MACA,GACA;QACAD,EAAA;QACAC,KAAA;MACA,GACA;QACAD,EAAA;QACAC,KAAA;MACA,EACA;MACAC,aAAA;MACAC,WAAA;MACAC,WAAA;MACAC,kBAAA;MACAC,YAAA;MACAC,iBAAA;MACAC,oBAAA;MACAC,eAAA;MACAC,kBAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;AAAA,GAAAC,eAAA,CAAApB,qBAAA,WACA;EACAU,WAAA;IACAW,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;EACAZ,kBAAA;IACAU,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;EACAX,YAAA;IACAS,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;EACAV,iBAAA;IACAQ,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;EACAT,oBAAA;IACAO,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;EACAR,eAAA;IACAM,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;EACAP,kBAAA;IACAK,OAAA,WAAAA,QAAA;MACA,KAAAC,QAAA;IACA;IACAC,IAAA;EACA;AACA,IAAAH,eAAA,CAAApB,qBAAA,aACA;EACAsB,QAAA,WAAAA,SAAA;IACA,IACA,KAAAZ,WAAA,WACA,KAAAC,kBAAA,WACA,KAAAC,YAAA,WACA,KAAAC,iBAAA,WACA,KAAAC,oBAAA,WACA,KAAAC,eAAA,WACA,KAAAC,kBAAA,SACA;MACA,KAAAC,OAAA;IACA;MACA,KAAAA,OAAA;IACA;EACA;EACAO,kBAAA,WAAAA,mBAAA;IACA,KAAAC,YAAA,QAAAA,YAAA,CAAAC,WAAA;EACA;EACAC,MAAA,WAAAA,OAAA,GAmBA;EACAC,UAAA,WAAAA,WAAA;IACA,KAAAlB,WAAA;IACA,KAAAC,kBAAA;IACA,KAAAC,YAAA;IACA,KAAAC,iBAAA;IACA,KAAAC,oBAAA;IACA,KAAAC,eAAA;IACA,KAAAC,kBAAA;EACA;EACAG,cAAA,WAAAA,eAAA;IAAA,IAAAU,KAAA;IACAnC,WAAA,CACAoC,GAAA;MACAC,MAAA;QACAC,OAAA,OAAAA;MACA;IACA,GACAC,IAAA,WAAAC,QAAA;MACAL,KAAA,CAAArB,aAAA,GAAA0B,QAAA,CAAA9B,IAAA;IACA,GACA+B,KAAA,WAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;IACA;IACA1C,WAAA,CACAoC,GAAA,kBACAG,IAAA,WAAAC,QAAA;MACAL,KAAA,CAAApB,WAAA,GAAAyB,QAAA,CAAA9B,IAAA;IACA,GACA+B,KAAA,WAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;IACA;EACA;AACA,IAAApC,qBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}