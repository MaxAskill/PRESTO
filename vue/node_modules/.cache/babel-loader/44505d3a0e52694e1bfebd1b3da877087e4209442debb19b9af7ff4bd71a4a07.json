{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  props: [\"itemDetail\"],\n  watch: {},\n  computed: {},\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\"\n      },\n      chainCodeList: [],\n      companyList: [],\n      newBrandName: \"\",\n      isEmpty: true\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    newBrandName: {\n      handler() {\n        this.checking();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    checking() {\n      if (this.newBrandName === \"\") {\n        this.isEmpty = true;\n      } else {\n        this.isEmpty = false;\n      }\n    },\n    convertToUppercase() {\n      this.newBrandName = this.newBrandName.toUpperCase();\n    },\n    submit() {},\n    closeModal() {\n      this.newBrandName = \"\";\n    },\n    fetchChainCode() {\n      axiosClient.get(\"/fetchChainCodeAdmin\", {\n        params: {\n          company: this.company\n        }\n      }).then(response => {\n        this.chainCodeList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n      axiosClient.get(\"/fetchCompany\").then(response => {\n        this.companyList = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","props","watch","computed","data","newBranch","branchCode","chainCode","branchName","company","chainCodeList","companyList","newBrandName","isEmpty","mounted","fetchChainCode","handler","checking","deep","methods","convertToUppercase","toUpperCase","submit","closeModal","get","params","then","response","catch","error","console"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/ModalMaintenance/EditMaintenanceModal/EditItemModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"edititemmodal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"edititemmodalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"edititemmodal\">\n            EDIT ITEM{{ itemDetail }}\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"row\">\n              <div class=\"mx-auto col-4\">\n                <fg-input\n                  label=\"Item Code\"\n                  :placeholder=\"itemDetail.ItemNo\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-4\">\n                <fg-input\n                  label=\"Item Description\"\n                  :placeholder=\"itemDetail.ItemDescription\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-4\">\n                <fg-input\n                  label=\"Brand Name\"\n                  :placeholder=\"itemDetail.brandNames\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Department\"\n                  :placeholder=\"itemDetail.Department\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Sub-Department\"\n                  :placeholder=\"itemDetail.SubDepartment\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Category\"\n                  :placeholder=\"itemDetail.Category\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n              <div class=\"mx-auto col-3\">\n                <fg-input\n                  label=\"Sub-Category\"\n                  :placeholder=\"itemDetail.SubCategory\"\n                  v-model.trim=\"newBrandName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            @click.prevent=\"closeModal()\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            :disabled=\"isEmpty\"\n            @click.prevent=\"submit\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  props: [\"itemDetail\"],\n  // props: [\"branchDetail\"],\n\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\",\n      },\n      chainCodeList: [],\n      companyList: [],\n      newBrandName: \"\",\n      isEmpty: true,\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    newBrandName: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    checking() {\n      if (this.newBrandName === \"\") {\n        this.isEmpty = true;\n      } else {\n        this.isEmpty = false;\n      }\n    },\n    convertToUppercase() {\n      this.newBrandName = this.newBrandName.toUpperCase();\n    },\n    submit() {\n      // axiosClient\n      //   .post(\"/addNewBranch\", {\n      //     branchCode: this.newBranch.branchCode,\n      //     chainCode: this.newBranch.chainCode,\n      //     branchName: this.newBranch.branchName,\n      //     userID: sessionStorage.getItem(\"UserID\"),\n      //     companyType: this.newBranch.company,\n      //     company: this.company,\n      //   })\n      //   .then((response) => {\n      //     // console.log(\"Response:\", response.data);\n      //     setTimeout(() => {\n      //       window.location.reload();\n      //     }, 3000); // Reload after 3 seconds\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n    closeModal() {\n      this.newBrandName = \"\";\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChainCodeAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;AAuGA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA;EACAC,KAAA;EAGAC,KAAA;EACAC,QAAA,GAOA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACAC,aAAA;MACAC,WAAA;MACAC,YAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAb,KAAA;IACAU,YAAA;MACAI,QAAA;QACA,KAAAC,QAAA;MACA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAF,SAAA;MACA,SAAAL,YAAA;QACA,KAAAC,OAAA;MACA;QACA,KAAAA,OAAA;MACA;IACA;IACAO,mBAAA;MACA,KAAAR,YAAA,QAAAA,YAAA,CAAAS,WAAA;IACA;IACAC,OAAA,GAmBA;IACAC,WAAA;MACA,KAAAX,YAAA;IACA;IACAG,eAAA;MACApB,WAAA,CACA6B,GAAA;QACAC,MAAA;UACAhB,OAAA,OAAAA;QACA;MACA,GACAiB,IAAA,CAAAC,QAAA;QACA,KAAAjB,aAAA,GAAAiB,QAAA,CAAAvB,IAAA;MACA,GACAwB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;MACAlC,WAAA,CACA6B,GAAA,kBACAE,IAAA,CAAAC,QAAA;QACA,KAAAhB,WAAA,GAAAgB,QAAA,CAAAvB,IAAA;MACA,GACAwB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}