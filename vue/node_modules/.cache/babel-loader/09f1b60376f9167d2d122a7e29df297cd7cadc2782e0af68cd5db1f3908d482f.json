{"ast":null,"code":"import _toConsumableArray from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport axiosClient from \"../../../../axios\";\nimport PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\nexport default {\n  components: {\n    PromoRequestBranchApproveConfirmationModal: PromoRequestBranchApproveConfirmationModal\n  },\n  watch: {\n    dateEnd: \"validateApprove\",\n    promoRequest: {\n      handler: function handler() {\n        this.promoDetailsTransfer();\n      },\n      deep: true\n    },\n    checkedBranch: function checkedBranch() {\n      if (this.checkedBranch.length == 0) this.rejected = true;else this.rejected = false;\n    }\n  },\n  props: [\"promoData\", \"promoDetails\", \"promoRequest\"],\n  computed: {},\n  data: function data() {\n    return {\n      dateEnd: null,\n      disableApprove: true,\n      checkedBranch: [],\n      rejectMode: false,\n      tempPromoRequest: [],\n      rejected: true\n    };\n  },\n  mounted: function mounted() {},\n  methods: {\n    approveRequest: function approveRequest(confirm) {\n      var _this = this;\n      if (confirm) axiosClient.post(\"/updateUserBranchByRequest\", {\n        userID: this.promoData.id,\n        dateEnd: this.dateEnd\n      }).then(function (response) {\n        _this.$emit(\"fetchUsers\");\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    rejectBranch: function rejectBranch() {\n      var _this2 = this;\n      var selectedBranchReject = this.checkedBranch.map(function (i) {\n        return _this2.tempPromoRequest[i];\n      });\n      this.tempPromoRequest = this.tempPromoRequest.filter(function (_, index) {\n        return !_this2.checkedBranch.includes(index);\n      });\n      selectedBranchReject.forEach(function (reject) {\n        axiosClient.post(\"/deleteUserBranch\", {\n          userID: _this2.promoData.id,\n          company: reject.company,\n          chainCode: reject.chainCode,\n          branchName: reject.branchName,\n          req: reject.request\n        }).then(function (response) {}).catch(function (error) {\n          console.error(error);\n        });\n      });\n      if (this.tempPromoRequest.length <= 0) {\n        window.location.reload();\n      }\n      this.rejected = true;\n      this.checkedBranch = [];\n      this.$emit(\"fetchUsers\");\n    },\n    promoDetailsTransfer: function promoDetailsTransfer() {\n      this.tempPromoRequest = _toConsumableArray(this.promoRequest);\n    },\n    validateApprove: function validateApprove() {\n      if (this.dateEnd) this.disableApprove = false;else this.disableApprove = true;\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","PromoRequestBranchApproveConfirmationModal","components","watch","dateEnd","promoRequest","handler","promoDetailsTransfer","deep","checkedBranch","length","rejected","props","computed","data","disableApprove","rejectMode","tempPromoRequest","mounted","methods","approveRequest","confirm","_this","post","userID","promoData","id","then","response","$emit","catch","error","console","rejectBranch","_this2","selectedBranchReject","map","i","filter","_","index","includes","forEach","reject","company","chainCode","branchName","req","request","window","location","reload","_toConsumableArray","validateApprove"],"sources":["src/components/Dashboard/Views/PullOut/PromoRequestBranchModal.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"promoRequestBranchModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"promoRequestBranchModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header py-3\">\n            <span style=\"font-size: 16px\"\n              >Promo Name:\n              <b style=\"font-size: 16px; text-transform: uppercase\">{{\n                promoData.name\n              }}</b></span\n            ><br />\n            <span\n              >Email: <b>{{ promoData.email }}</b></span\n            >\n          </div>\n          <div class=\"modal-body row pt-2 pb-3 px-4\">\n            <span class=\"text-center mb-2\" style=\"font-size: 13px\">\n              <b>{{ promoDetails.length }} Assigned Branch:</b>\n            </span>\n            <div style=\"overflow-x: auto; min-width: 350px\">\n              <table class=\"table table-borderless\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"labelRows\">Company</th>\n                    <th scope=\"col\" class=\"labelRows\">Chain Code</th>\n                    <th scope=\"col\" class=\"labelRows\">Branch Name</th>\n                    <th scope=\"col\" class=\"labelRows\">Start Date</th>\n                    <th scope=\"col\" class=\"labelRows\">Expiry Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"details in promoDetails\">\n                    <td class=\"cell text-nowrap py-1\">{{ details.company }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ details.chainCode }}</td>\n                    <td class=\"cell text-nowrap py-1\">\n                      <el-tooltip\n                        v-if=\"details.permanent\"\n                        effect=\"light\"\n                        content=\"Permanent Branch\"\n                        placement=\"top-start\"\n                      >\n                        <span class=\"p-icon\">P</span></el-tooltip\n                      >\n                      <el-tooltip\n                        v-else-if=\"!details.permanent\"\n                        effect=\"light\"\n                        content=\"Temporary Branch\"\n                        placement=\"top-start\"\n                      >\n                        <span class=\"t-icon\">T</span>\n                      </el-tooltip>\n                      &nbsp;{{ details.branchName }}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- <div class=\"d-flex\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"details in promoDetails\">\n              <span class=\"col-3\">{{ details.company }}</span>\n              <span class=\"col-3\">{{ details.chainCode }}</span>\n              <span class=\"col-6\">{{ details.branchName }}</span>\n            </div> -->\n            <div class=\"d-flex mt-3 text-center\">\n              <span class=\"col-12 mb-2\" style=\"font-size: 13px\"\n                ><b>This Promo wants to remove this branch: </b>\n              </span>\n              <span class=\"col-12 mb-2\" style=\"font-size: 13px\"\n                ><b>This Promo wants to add this branch: </b>\n              </span>\n            </div>\n            <div style=\"overflow-x: auto; min-width: 350px\">\n              <table class=\"table table-borderless\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"labelRows\">Company</th>\n                    <th scope=\"col\" class=\"labelRows\">Chain Code</th>\n                    <th scope=\"col\" class=\"labelRows\">Branch Name</th>\n                    <th scope=\"col\" class=\"labelRows\">Reject</th>\n                    <th scope=\"col\" class=\"labelRows\">Start Date</th>\n                    <th scope=\"col\" class=\"labelRows\">Expiry Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"request in tempPromoRequest\">\n                    <td class=\"cell text-nowrap py-1\">{{ request.company }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ request.chainCode }}</td>\n                    <td class=\"cell text-nowrap py-1\">{{ request.branchName }}</td>\n                    <td class=\"cell text-nowrap py-1\">\n                      <button\n                        v-show=\"!rejectMode\"\n                        class=\"btn btn-danger py-1 px-2\"\n                        @click=\"rejectMode = true\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- <div class=\"d-flex mt-1\">\n              <span class=\"labelRows col-3\">Company</span>\n              <span class=\"labelRows col-3\">Chain Code</span>\n              <span class=\"labelRows col-6\">Branch Name</span>\n            </div>\n            <div class=\"d-flex mt-1\" v-for=\"(request, key) in tempPromoRequest\">\n              <span class=\"col-3\">{{ request.company }}</span>\n              <span class=\"col-3\">{{ request.chainCode }}</span>\n              <span class=\"col-6\">{{ request.branchName }}</span>\n              <input\n                v-show=\"rejectMode\"\n                class=\"align-self-start\"\n                type=\"checkbox\"\n                v-model=\"checkedBranch\"\n                :value=\"key\"\n              />\n            </div> -->\n            <!-- <div class=\"mt-3\">\n              <fg-input label=\"Date End Promo\" class=\"col-12 text-center mb-0\"\n                ><el-date-picker\n                  v-model=\"dateEnd\"\n                  type=\"date\"\n                  placeholder=\"Select a Day\"\n                  :disabled=\"rejectMode\"\n                >\n                </el-date-picker\n              ></fg-input>\n            </div> -->\n          </div>\n          <div class=\"modal-footer d-flex justify-content-center\">\n            <button v-show=\"!rejectMode\" class=\"btn btn-default\" data-bs-dismiss=\"modal\">\n              Cancel\n            </button>\n            <button\n              v-show=\"rejectMode\"\n              class=\"btn btn-default\"\n              @click=\"(rejectMode = false), (checkedBranch = [])\"\n            >\n              Back\n            </button>\n            <button\n              v-show=\"!rejectMode\"\n              class=\"btn btn-danger\"\n              @click=\"rejectMode = true\"\n            >\n              Reject\n            </button>\n            <button\n              v-show=\"rejectMode\"\n              class=\"btn btn-danger\"\n              @click=\"rejectBranch\"\n              :disabled=\"rejected\"\n            >\n              Reject Selected Branch\n            </button>\n            <button\n              v-show=\"!rejectMode\"\n              class=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#requestBranchApproveConfirmation\"\n              @click=\"approveRequest()\"\n              :disabled=\"disableApprove\"\n            >\n              Approve this Request\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <PromoRequestBranchApproveConfirmationModal\n      :promoData=\"promoData\"\n      @confirm=\"approveRequest($event)\"\n    ></PromoRequestBranchApproveConfirmationModal>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\nimport PromoRequestBranchApproveConfirmationModal from \"./PromoRequestBranchApproveConfirmationModal.vue\";\n\nexport default {\n  components: {\n    PromoRequestBranchApproveConfirmationModal,\n  },\n  watch: {\n    dateEnd: \"validateApprove\",\n    promoRequest: {\n      handler() {\n        this.promoDetailsTransfer();\n      },\n      deep: true,\n    },\n    checkedBranch: function () {\n      if (this.checkedBranch.length == 0) this.rejected = true;\n      else this.rejected = false;\n    },\n  },\n  props: [\"promoData\", \"promoDetails\", \"promoRequest\"],\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      dateEnd: null,\n      disableApprove: true,\n      checkedBranch: [],\n      rejectMode: false,\n      tempPromoRequest: [],\n      rejected: true,\n    };\n  },\n  mounted() {},\n  methods: {\n    approveRequest(confirm) {\n      if (confirm)\n        axiosClient\n          .post(\"/updateUserBranchByRequest\", {\n            userID: this.promoData.id,\n            dateEnd: this.dateEnd,\n          })\n          .then((response) => {\n            this.$emit(\"fetchUsers\");\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n    },\n    rejectBranch() {\n      let selectedBranchReject = this.checkedBranch.map((i) => this.tempPromoRequest[i]);\n      this.tempPromoRequest = this.tempPromoRequest.filter(\n        (_, index) => !this.checkedBranch.includes(index)\n      );\n      selectedBranchReject.forEach((reject) => {\n        axiosClient\n          .post(\"/deleteUserBranch\", {\n            userID: this.promoData.id,\n            company: reject.company,\n            chainCode: reject.chainCode,\n            branchName: reject.branchName,\n            req: reject.request,\n          })\n          .then((response) => {})\n          .catch((error) => {\n            console.error(error);\n          });\n      });\n      if (this.tempPromoRequest.length <= 0) {\n        window.location.reload();\n      }\n      // this.rejectMode = false;\n      this.rejected = true;\n      this.checkedBranch = [];\n      this.$emit(\"fetchUsers\");\n    },\n    promoDetailsTransfer() {\n      this.tempPromoRequest = [...this.promoRequest];\n    },\n    validateApprove() {\n      if (this.dateEnd) this.disableApprove = false;\n      else this.disableApprove = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.tr_num {\n  font-size: 35px;\n  font-weight: 700;\n}\n.labelRows {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  // margin-bottom: 5px;\n}\n</style>\n"],"mappings":";;;;;;;AA8LA,OAAAA,WAAA;AACA,OAAAC,0CAAA;AAEA;EACAC,UAAA;IACAD,0CAAA,EAAAA;EACA;EACAE,KAAA;IACAC,OAAA;IACAC,YAAA;MACAC,OAAA,WAAAA,QAAA;QACA,KAAAC,oBAAA;MACA;MACAC,IAAA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,SAAAA,aAAA,CAAAC,MAAA,YAAAC,QAAA,aACA,KAAAA,QAAA;IACA;EACA;EACAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAV,OAAA;MACAW,cAAA;MACAN,aAAA;MACAO,UAAA;MACAC,gBAAA;MACAN,QAAA;IACA;EACA;EACAO,OAAA,WAAAA,QAAA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAAC,OAAA;MAAA,IAAAC,KAAA;MACA,IAAAD,OAAA,EACArB,WAAA,CACAuB,IAAA;QACAC,MAAA,OAAAC,SAAA,CAAAC,EAAA;QACAtB,OAAA,OAAAA;MACA,GACAuB,IAAA,WAAAC,QAAA;QACAN,KAAA,CAAAO,KAAA;MACA,GACAC,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACAE,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,oBAAA,QAAA1B,aAAA,CAAA2B,GAAA,WAAAC,CAAA;QAAA,OAAAH,MAAA,CAAAjB,gBAAA,CAAAoB,CAAA;MAAA;MACA,KAAApB,gBAAA,QAAAA,gBAAA,CAAAqB,MAAA,CACA,UAAAC,CAAA,EAAAC,KAAA;QAAA,QAAAN,MAAA,CAAAzB,aAAA,CAAAgC,QAAA,CAAAD,KAAA;MAAA,CACA;MACAL,oBAAA,CAAAO,OAAA,WAAAC,MAAA;QACA3C,WAAA,CACAuB,IAAA;UACAC,MAAA,EAAAU,MAAA,CAAAT,SAAA,CAAAC,EAAA;UACAkB,OAAA,EAAAD,MAAA,CAAAC,OAAA;UACAC,SAAA,EAAAF,MAAA,CAAAE,SAAA;UACAC,UAAA,EAAAH,MAAA,CAAAG,UAAA;UACAC,GAAA,EAAAJ,MAAA,CAAAK;QACA,GACArB,IAAA,WAAAC,QAAA,MACAE,KAAA,WAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA;MACA;MACA,SAAAd,gBAAA,CAAAP,MAAA;QACAuC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA;MAEA,KAAAxC,QAAA;MACA,KAAAF,aAAA;MACA,KAAAoB,KAAA;IACA;IACAtB,oBAAA,WAAAA,qBAAA;MACA,KAAAU,gBAAA,GAAAmC,kBAAA,MAAA/C,YAAA;IACA;IACAgD,eAAA,WAAAA,gBAAA;MACA,SAAAjD,OAAA,OAAAW,cAAA,cACA,KAAAA,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}