{"ast":null,"code":"import _regeneratorRuntime from \"/home/Projects/PRESTOv1Test/vue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/Projects/PRESTOv1Test/vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport axiosClient from \"../../../axios\";\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      positionEmployee: \"\",\n      name: \"\",\n      date: \"\",\n      time: \"\",\n      ipAddress: \"\"\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Vue PDP Pro\",\n      description: \"Sidebar title\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: function validator(value) {\n        var acceptedValues = [\"white\", \"brown\", \"black\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar background color (white|brown|black)\"\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: function validator(value) {\n        var acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar active text color (primary|info|success|warning|danger)\"\n    },\n    logo: {\n      type: String,\n      default: \"static/img/logo.png\",\n      description: \"Sidebar Logo\"\n    },\n    sidebarLinks: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: \"Sidebar links. Can be also provided as children components (sidebar-item)\"\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide: function provide() {\n    return {\n      autoClose: this.autoClose\n    };\n  },\n  methods: {\n    initScrollBarAsync: function initScrollBarAsync() {\n      var _this = this;\n      return _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {\n        var isWindows;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.positionEmployee = sessionStorage.getItem(\"Position\");\n              if (_this.positionEmployee == \"Approver\") {\n                _this.positionEmployee = \"Reviewer\";\n              }\n              isWindows = navigator.platform.startsWith(\"Win\");\n              if (isWindows) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    logoDashboard: function logoDashboard() {\n      if (this.positionEmployee == \"Admin\") {\n        this.$router.push({\n          path: \"/admin/overview\"\n        });\n      } else if (this.positionEmployee == \"Reviewer\" || this.positionEmployee == \"Approver\") {\n        this.$router.push({\n          path: \"/pull-out/requests\"\n        });\n      } else if (this.positionEmployee == \"User\") {\n        this.$router.push({\n          path: \"/pull-out/requisition-form\"\n        });\n      }\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n      axiosClient.get(\"/users\", {\n        params: {\n          email: sessionStorage.getItem(\"Email\")\n        }\n      }).then(function (response) {\n        _this2.name = response.data[0].name;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n    this.initScrollBarAsync();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  },\n  computed: {\n    filteredSidebarLinks: function filteredSidebarLinks() {\n      var userPosition = this.positionEmployee;\n      if (userPosition === \"User\") {\n        return this.sidebarLinks.filter(function (link) {\n          return link.access === \"User\" || link.access === \"All\";\n        });\n      } else if (userPosition === \"Reviewer\" || userPosition === \"Approver\") {\n        console.log(\"Approver\");\n        return this.sidebarLinks.filter(function (link) {\n          return link.access === \"Reviewer\" || link.access === \"All\";\n        });\n      } else {\n        return this.sidebarLinks;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","axios","data","positionEmployee","name","date","time","ipAddress","props","title","type","String","default","description","backgroundColor","validator","value","acceptedValues","indexOf","activeColor","logo","sidebarLinks","Array","_default","autoClose","Boolean","provide","methods","initScrollBarAsync","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isWindows","wrap","_callee$","_context","prev","next","sessionStorage","getItem","navigator","platform","startsWith","abrupt","stop","logoDashboard","$router","push","path","fetchData","_this2","get","params","email","then","response","catch","error","console","mounted","beforeDestroy","$sidebar","showSidebar","computed","filteredSidebarLinks","userPosition","filter","link","access","log"],"sources":["src/components/UIComponents/SidebarPlugin/SideBar.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar\" :data-color=\"backgroundColor\" :data-active-color=\"activeColor\">\n    <div class=\"logo\">\n      <a\n        class=\"simple-text logo-mini user-select-none\"\n        aria-label=\"sidebar mini logo\"\n        @click=\"logoDashboard\"\n      >\n        <div class=\"logo-img\">\n          <img :src=\"logo\" alt=\"\" />\n        </div>\n      </a>\n      <a class=\"simple-text logo-normal user-select-none\" @click=\"logoDashboard\">\n        PRESTO\n      </a>\n      <!-- <div>\n        <span class=\"simple-text\"> Date Today: {{ date }} </span>\n        <span class=\"simple-text\"> Time Today: {{ time }} </span>\n      </div> -->\n    </div>\n\n    <div class=\"sidebar-wrapper\" ref=\"sidebarScrollArea\">\n      <slot> </slot>\n      <ul class=\"nav\">\n        <slot name=\"links\">\n          <sidebar-item\n            :name=\"name\"\n            v-for=\"(link, index) in filteredSidebarLinks\"\n            :key=\"link.name + index\"\n            :link=\"link\"\n          >\n            <sidebar-item\n              :name=\"name\"\n              v-for=\"(subLink, index) in link.children\"\n              v-if=\"\n                positionEmployee === subLink.access ||\n                positionEmployee === 'Admin' ||\n                subLink.access === 'All'\n              \"\n              :key=\"subLink.name + index\"\n              :link=\"subLink\"\n            >\n            </sidebar-item>\n          </sidebar-item>\n        </slot>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport axiosClient from \"../../../axios\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      positionEmployee: \"\",\n      name: \"\",\n      date: \"\",\n      time: \"\",\n      ipAddress: \"\",\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Vue PDP Pro\",\n      description: \"Sidebar title\",\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: (value) => {\n        let acceptedValues = [\"white\", \"brown\", \"black\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar background color (white|brown|black)\",\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: (value) => {\n        let acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar active text color (primary|info|success|warning|danger)\",\n    },\n    logo: {\n      type: String,\n      default: \"static/img/logo.png\",\n      description: \"Sidebar Logo\",\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => [],\n      description:\n        \"Sidebar links. Can be also provided as children components (sidebar-item)\",\n    },\n    autoClose: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose,\n    };\n  },\n  methods: {\n    async initScrollBarAsync() {\n      this.positionEmployee = sessionStorage.getItem(\"Position\");\n\n      if (this.positionEmployee == \"Approver\") {\n        this.positionEmployee = \"Reviewer\";\n      }\n      // console.log(\"SideBar: \", this.sidebarLinks);\n      let isWindows = navigator.platform.startsWith(\"Win\");\n      if (!isWindows) {\n        return;\n      }\n      // const PerfectScroll = await import('perfect-scrollbar')\n      // PerfectScroll.initialize(this.$refs.sidebarScrollArea)\n    },\n    logoDashboard() {\n      if (this.positionEmployee == \"Admin\") {\n        // window.location.href = \"http://192.168.0.7:4040/#/admin/overview\";\n        this.$router.push({\n          path: \"/admin/overview\",\n        });\n      } else if (\n        this.positionEmployee == \"Reviewer\" ||\n        this.positionEmployee == \"Approver\"\n      ) {\n        // window.location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n        this.$router.push({\n          path: \"/pull-out/requests\",\n        });\n      } else if (this.positionEmployee == \"User\") {\n        // window.location.href = \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n        this.$router.push({\n          path: \"/pull-out/requisition-form\",\n        });\n      }\n    },\n    fetchData() {\n      axiosClient\n        .get(\"/users\", {\n          params: {\n            email: sessionStorage.getItem(\"Email\"),\n          },\n        })\n        .then((response) => {\n          // console.log(\"Success User Response:\", response.data);\n          this.name = response.data[0].name;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n  mounted() {\n    this.fetchData();\n    this.initScrollBarAsync();\n  },\n  beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  },\n  computed: {\n    filteredSidebarLinks() {\n      // Get the user's position from a variable or Vuex state, replace 'userPosition' with the actual variable or state\n      const userPosition = this.positionEmployee;\n\n      // Filter the sidebar links based on the user's position\n      if (userPosition === \"User\") {\n        return this.sidebarLinks.filter(\n          (link) => link.access === \"User\" || link.access === \"All\"\n        );\n      } else if (userPosition === \"Reviewer\" || userPosition === \"Approver\") {\n        console.log(\"Approver\");\n        return this.sidebarLinks.filter(\n          (link) => link.access === \"Reviewer\" || link.access === \"All\"\n        );\n      } else {\n        return this.sidebarLinks;\n      }\n    },\n  },\n};\n</script>\n<style>\n@media (min-width: 992px) {\n  .navbar-search-form-mobile,\n  .nav-mobile-menu {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}