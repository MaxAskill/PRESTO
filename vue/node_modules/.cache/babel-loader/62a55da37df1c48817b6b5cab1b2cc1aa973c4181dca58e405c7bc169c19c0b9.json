{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Button2 from \"element-ui/lib/theme-chalk/button.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Button from \"element-ui/lib/button\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card } from 'src/components/UIComponents';\nimport PProgress from 'src/components/UIComponents/Progress.vue';\nimport PSwitch from 'src/components/UIComponents/Switch.vue';\nimport Vue from 'vue';\nimport NotificationTemplate from '../Components/NotificationTemplate';\nimport Swal from 'sweetalert2';\nimport axiosClient from '../../../../axios';\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, _Button.name, _Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _components),\n  data: function data() {\n    return {\n      isOpen: false,\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      tableData: [{\n        id: 1,\n        name: 'Dakota Rice',\n        salary: '$36.738',\n        country: 'Niger',\n        city: 'Oud-Turnhout'\n      }, {\n        id: 2,\n        name: 'Minerva Hooper',\n        salary: '$23,789',\n        country: 'Curaçao',\n        city: 'Sinaai-Waas'\n      }, {\n        id: 3,\n        name: 'Sage Rodriguez',\n        salary: '$56,142',\n        country: 'Netherlands',\n        city: 'Baileux'\n      }, {\n        id: 4,\n        name: 'Philip Chaney',\n        salary: '$38,735',\n        country: 'Korea, South',\n        city: 'Overland Park'\n      }, {\n        id: 5,\n        name: 'Doris Greene',\n        salary: '$63,542',\n        country: 'Malawi',\n        city: 'Feldkirchen in Kärnten'\n      }],\n      newListBoxLabel: [{\n        id: 1,\n        boxLabel: \"Box Label One\"\n      }, {\n        id: 2,\n        boxLabel: \"Box Label Two\"\n      }, {\n        id: 3,\n        boxLabel: \"Box Label Three\"\n      }, {\n        id: 4,\n        boxLabel: \"Box Label Four\"\n      }],\n      user: {\n        company: 'Paper Dashboard',\n        username: 'michael23',\n        email: '',\n        lastName: 'Faker',\n        address: 'Melbourne, Australia',\n        city: 'melbourne',\n        postalCode: '',\n        aboutMe: \"Oh so, your weak rhyme. You doubt I'll bother, reading into it.I'll probably won't, left to my own devicesBut that's the difference in our opinions.\"\n      },\n      selects: {\n        simple: '',\n        countries: [{\n          value: 'Bahasa Indonesia',\n          label: 'Bahasa Indonesia'\n        }, {\n          value: 'Bahasa Melayu',\n          label: 'Bahasa Melayu'\n        }, {\n          value: 'Català',\n          label: 'Català'\n        }, {\n          value: 'Dansk',\n          label: 'Dansk'\n        }, {\n          value: 'Deutsch',\n          label: 'Deutsch'\n        }, {\n          value: 'English',\n          label: 'English'\n        }, {\n          value: 'Español',\n          label: 'Español'\n        }, {\n          value: 'Eλληνικά',\n          label: 'Eλληνικά'\n        }, {\n          value: 'Français',\n          label: 'Français'\n        }, {\n          value: 'Italiano',\n          label: 'Italiano'\n        }, {\n          value: 'Magyar',\n          label: 'Magyar'\n        }, {\n          value: 'Nederlands',\n          label: 'Nederlands'\n        }, {\n          value: 'Norsk',\n          label: 'Norsk'\n        }, {\n          value: 'Polski',\n          label: 'Polski'\n        }, {\n          value: 'Português',\n          label: 'Português'\n        }, {\n          value: 'Suomi',\n          label: 'Suomi'\n        }, {\n          value: 'Svenska',\n          label: 'Svenska'\n        }, {\n          value: 'Türkçe',\n          label: 'Türkçe'\n        }, {\n          value: 'Íslenska',\n          label: 'Íslenska'\n        }, {\n          value: 'Čeština',\n          label: 'Čeština'\n        }, {\n          value: 'Русский',\n          label: 'Русский'\n        }, {\n          value: 'ภาษาไทย',\n          label: 'ภาษาไทย'\n        }, {\n          value: '中文 (简体)',\n          label: '中文 (简体)'\n        }, {\n          value: 'W\">中文 (繁體)',\n          label: 'W\">中文 (繁體)'\n        }, {\n          value: '日本語',\n          label: '日本語'\n        }, {\n          value: '한국어',\n          label: '한국어'\n        }],\n        multiple: 'ARS'\n      },\n      newBoxLabel: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchCompany();\n  },\n  methods: {\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: 'Success Add Box'\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this = this;\n      axiosClient.get('/fetchCompany').then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this2 = this;\n      axiosClient.get('/fetchChain', {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this2.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainName: function fetchChainName() {\n      var _this3 = this;\n      axiosClient.get('/fetchChainName', {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this3.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isOpen = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isOpen = false;\n      console.log(this.newListBoxLabel.length);\n      var tempBoxLabel = {\n        id: this.newListBoxLabel.length + 1,\n        boxLabel: this.newBoxLabel\n      };\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isOpen = false;\n      this.newBoxLabel = \"\";\n    },\n    updateProfile: function updateProfile() {\n      console.log(\"company\", this.newTransaction.company);\n      alert('Your data: ' + JSON.stringify(this.newTransaction));\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","PProgress","PSwitch","Vue","NotificationTemplate","Swal","axiosClient","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Button","_Option","_Select","data","isOpen","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","tableData","id","salary","country","city","newListBoxLabel","boxLabel","user","username","email","lastName","address","postalCode","aboutMe","selects","simple","countries","value","label","multiple","newBoxLabel","notifications","topCenter","modals","classic","notice","mini","mounted","fetchCompany","methods","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","icon","type","props","customValue","_this","get","then","response","console","log","catch","error","fetchChainCode","_this2","params","fetchChainName","_this3","addBoxLabel","saveBoxLabel","length","tempBoxLabel","push","cancelBoxLabel","updateProfile","alert","JSON","stringify"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"row\">\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Company\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Company\"\n                            v-model=\"newTransaction.company\"\n                            @change=\"fetchChainCode\">\n                        <el-option v-for=\"option in companyList\"\n                            class=\"select-default\"\n                            :value=\"option.shortName\"\n                            :label=\"option.shortName\"\n                            :key=\"option.id\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Chain Code\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Chain Code\"\n                            v-model=\"newTransaction.chainCode\"\n                            @change=\"fetchChainName\">\n                        <el-option v-for=\"option in chainCodeList\"\n                            class=\"select-default\"\n                            :value=\"option.chainCode\"\n                            :label=\"option.chainCode\"\n                            :key=\"option.chainCode\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Branch Name\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Branch Name\"\n                            v-model=\"newTransaction.branchName\">\n                        <el-option v-for=\"option in branchNameList\"\n                            class=\"select-default\"\n                            :value=\"option.branchName\"\n                            :label=\"option.branchName\"\n                            :key=\"option.branchName\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n                <div class=\"col-sm-3\">\n                    <fg-input label=\"Transaction Type\">\n                        <el-select class=\"select-default\"\n                            size=\"large\"\n                            placeholder=\"Select Transaction Type\"\n                            v-model=\"newTransaction.transactionType\">\n                        <el-option v-for=\"option in selects.countries\"\n                            class=\"select-default\"\n                            :value=\"option.value\"\n                            :label=\"option.label\"\n                            :key=\"option.label\">\n                        </el-option>\n                    </el-select>\n                    </fg-input>\n                </div>\n            </div>\n            <div class=\"col-sm-12\">\n                <card type=\"plain\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <p-button type=\"default\" link class=\"font-weight-bold\" @click.prevent=\"addBoxLabel()\">\n                                <i class=\"nc-icon nc-simple-add font-weight-bold\"></i>Add Box Label\n                            </p-button>\n                            <p-button type=\"default\" link class=\"font-weight-bold\">\n                                <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                            </p-button>\n                        </div>\n                        <div class=\"col-sm-12 mx-n3\" v-show=\"isOpen\">\n                            <div class=\"col-sm-12\">\n                                <fg-input placeholder=\"Box Label\" v-model=\"newBoxLabel\" class=\"w-100\"></fg-input>\n                            </div>\n                            <div class=\"col-sm-2 mt-n3\">\n                                <p-button type=\"default\" size=\"sm\" outline class=\"font-weight-bold\" @click.prevent=\"saveBoxLabel()\">\n                                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                                </p-button>\n                                <p-button type=\"default\" size=\"sm\" outline class=\"font-weight-bold\" @click.prevent=\"cancelBoxLabel()\">\n                                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                                </p-button>\n                            </div>\n                        </div>\n                    </div>\n                <collapse>\n                    <collapse-item v-for=\"boxLabel in newTransaction.boxLabels\" :key=\"boxLabel.id\" :title=\"boxLabel.boxLabel\"  name=\"1\" class=\"font-weight-bold\">\n\n                    <div class=\"row font-weight-normal\">\n                        <div class=\"col-sm-4\">\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n                        </div>\n                        <div class=\"col-sm-4\">\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n                        </div>\n                        <div class=\"col-sm-4\">\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n                        </div>\n                    </div>\n\n                    </collapse-item>\n                </collapse>\n                </card>\n            </div>\n\n            <div class=\"text-center\">\n            <button type=\"submit\" class=\"btn btn-info btn-fill btn-wd\" @click.prevent=\"updateProfile\">\n                Submit\n            </button>\n            </div>\n            <div class=\"clearfix\"></div>\n        </form>\n    </div>\n  </div>\n\n</template>\n<script>\n  import {Collapse, CollapseItem, Tabs, TabPane, Card} from 'src/components/UIComponents'\n  import {DatePicker, TimeSelect, Slider, Tag, Input, Button, Select, Option} from 'element-ui'\n  import PProgress from 'src/components/UIComponents/Progress.vue'\n  import PSwitch from 'src/components/UIComponents/Switch.vue'\n  import Vue from 'vue'\n  import NotificationTemplate from '../Components/NotificationTemplate'\n  import Swal from 'sweetalert2';\n  import {Table, TableColumn} from 'element-ui'\n  import axiosClient from '../../../../axios'\n\n  Vue.use(Table)\n  Vue.use(TableColumn)\n  export default {\n    components: {\n      [DatePicker.name]: DatePicker,\n      [TimeSelect.name]: TimeSelect,\n      [Slider.name]: Slider,\n      [Tag.name]: Tag,\n      [Input.name]: Input,\n      [Button.name]: Button,\n      [Option.name]: Option,\n      [Select.name]: Select,\n      PSwitch,\n      PProgress,\n      TabPane,\n      Tabs,\n      CollapseItem,\n      Collapse,\n      Card,\n      NotificationTemplate\n    },\n    data () {\n      return {\n        isOpen: false,\n        companyList: [],\n        chainCodeList: [],\n        branchNameList: [],\n        newTransaction: {\n            company: \"\",\n            chainCode: \"\",\n            branchName: \"\",\n            transactionType: \"\",\n            boxLabels: [],\n            items: []\n        },\n        tableData: [{\n          id: 1,\n          name: 'Dakota Rice',\n          salary: '$36.738',\n          country: 'Niger',\n          city: 'Oud-Turnhout'\n        },\n        {\n          id: 2,\n          name: 'Minerva Hooper',\n          salary: '$23,789',\n          country: 'Curaçao',\n          city: 'Sinaai-Waas'\n        },\n        {\n          id: 3,\n          name: 'Sage Rodriguez',\n          salary: '$56,142',\n          country: 'Netherlands',\n          city: 'Baileux'\n        },\n        {\n          id: 4,\n          name: 'Philip Chaney',\n          salary: '$38,735',\n          country: 'Korea, South',\n          city: 'Overland Park'\n        },\n        {\n          id: 5,\n          name: 'Doris Greene',\n          salary: '$63,542',\n          country: 'Malawi',\n          city: 'Feldkirchen in Kärnten'\n        }],\n        newListBoxLabel:[{\n            id: 1,\n            boxLabel: \"Box Label One\"\n        },\n        {\n            id: 2,\n            boxLabel: \"Box Label Two\"\n        },\n        {\n            id: 3,\n            boxLabel: \"Box Label Three\"\n        },\n        {\n            id: 4,\n            boxLabel: \"Box Label Four\"\n        },],\n        user: {\n          company: 'Paper Dashboard',\n          username: 'michael23',\n          email: '',\n          lastName: 'Faker',\n          address: 'Melbourne, Australia',\n          city: 'melbourne',\n          postalCode: '',\n          aboutMe: `Oh so, your weak rhyme. You doubt I'll bother, reading into it.I'll probably won't, left to my own devicesBut that's the difference in our opinions.`\n        },\n\n        selects: {\n          simple: '',\n          countries: [{value: 'Bahasa Indonesia', label: 'Bahasa Indonesia'},\n            {value: 'Bahasa Melayu', label: 'Bahasa Melayu'},\n            {value: 'Català', label: 'Català'},\n            {value: 'Dansk', label: 'Dansk'},\n            {value: 'Deutsch', label: 'Deutsch'},\n            {value: 'English', label: 'English'},\n            {value: 'Español', label: 'Español'},\n            {value: 'Eλληνικά', label: 'Eλληνικά'},\n            {value: 'Français', label: 'Français'},\n            {value: 'Italiano', label: 'Italiano'},\n            {value: 'Magyar', label: 'Magyar'},\n            {value: 'Nederlands', label: 'Nederlands'},\n            {value: 'Norsk', label: 'Norsk'},\n            {value: 'Polski', label: 'Polski'},\n            {value: 'Português', label: 'Português'},\n            {value: 'Suomi', label: 'Suomi'},\n            {value: 'Svenska', label: 'Svenska'},\n            {value: 'Türkçe', label: 'Türkçe'},\n            {value: 'Íslenska', label: 'Íslenska'},\n            {value: 'Čeština', label: 'Čeština'},\n            {value: 'Русский', label: 'Русский'},\n            {value: 'ภาษาไทย', label: 'ภาษาไทย'},\n            {value: '中文 (简体)', label: '中文 (简体)'},\n            {value: 'W\">中文 (繁體)', label: 'W\">中文 (繁體)'},\n            {value: '日本語', label: '日本語'},\n            {value: '한국어', label: '한국어'}],\n          multiple: 'ARS'\n        },\n        newBoxLabel: \"\",\n        notifications: {\n          topCenter: false\n        },\n        modals: {\n          classic: false,\n          notice: false,\n          mini: false\n        }\n      }\n    },\n    mounted() {\n      this.fetchCompany();\n    },\n    methods: {\n\n      notifyVue(verticalAlign, horizontalAlign) {\n        const color = Math.floor((Math.random() * 4) + 1)\n        this.$notify(\n          {\n            component: NotificationTemplate,\n            icon: 'nc-icon nc-app',\n            horizontalAlign: horizontalAlign,\n            verticalAlign: verticalAlign,\n            type: \"success\",\n            props: {\n              customValue: 'Success Add Box',\n            }\n          })\n      },\n      fetchCompany(){\n        axiosClient.get('/fetchCompany')\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        }).catch((error) => {\n          console.error(error);\n        });\n      },\n      fetchChainCode(){\n        axiosClient.get('/fetchChain', {\n          params: {\n            company: this.newTransaction.company,\n          }\n        })\n          .then((response) => {\n            console.log(\"Chain Code Response:\", response.data);\n            this.chainCodeList = response.data;\n          }).catch((error) => {\n            console.error(error);\n          });\n      },\n      fetchChainName(){\n        axiosClient.get('/fetchChainName', {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          }\n        })\n          .then((response) => {\n            console.log(\"Chain Name Response:\", response.data);\n            this.branchNameList = response.data;\n          }).catch((error) => {\n            console.error(error);\n          })\n      },\n    addBoxLabel() {\n      this.isOpen = true;\n    },\n    saveBoxLabel() {\n      this.isOpen = false;\n      console.log(this.newListBoxLabel.length);\n      let tempBoxLabel = {\n        id: this.newListBoxLabel.length+1,\n        boxLabel: this.newBoxLabel,\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newBoxLabel = \"\";\n      this.notifyVue(\"bottom\",\"right\");\n    //   console.log(this.newListBoxLabel);\n    },\n    cancelBoxLabel() {\n      this.isOpen = false;\n      this.newBoxLabel = \"\";\n    },\n      updateProfile () {\n        console.log(\"company\", this.newTransaction.company);\n        alert('Your data: ' + JSON.stringify(this.newTransaction))\n      },\n    }\n  }\n\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}