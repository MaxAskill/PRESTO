{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../axios\";\nimport NotificationTemplate from \"../../../Components/Notification/NotificationSuccessfulRename.vue\";\nimport { createPopper } from \"@popperjs/core/lib/popper-lite.js\";\nimport DeniedUnprocessModal from \"./UnprocessModal/DeniedUnprocessModal.vue\";\nimport ApprovedUnprocessModal from \"./UnprocessModal/ApprovedUnprocessModal.vue\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  props: [\"transferredData\", \"itemData\"],\n  components: {\n    NotificationTemplate: NotificationTemplate,\n    DeniedUnprocessModal: DeniedUnprocessModal,\n    ApprovedUnprocessModal: ApprovedUnprocessModal\n  },\n  mounted: function mounted() {},\n  watch: {\n    transferredData: function transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    }\n  },\n  computed: {\n    transfer: function transfer() {\n      return this.itemData;\n    },\n    popperInstance: function popperInstance() {\n      return createPopper(this.button, this.popover, {\n        placement: \"left\",\n        modifiers: [{\n          name: \"offset\",\n          options: {\n            offset: [0, 30]\n          }\n        }],\n        strategy: \"absolute\"\n      });\n    }\n  },\n  data: function data() {\n    return {\n      tableColumns: [{\n        prop: \"brand\",\n        label: \"Brand\",\n        minWidth: 200\n      }, {\n        prop: \"boxLabel\",\n        label: \"Box Label\",\n        minWidth: 250\n      }, {\n        prop: \"boxNumber\",\n        label: \"Box Number\",\n        minWidth: 125\n      }, {\n        prop: \"itemCode\",\n        label: \"Item Code\",\n        minWidth: 175\n      }, {\n        prop: \"quantity\",\n        label: \"Quantity\",\n        minWidth: 100\n      }],\n      itemsData: [],\n      button: null,\n      popover: null,\n      toggle: false\n    };\n  },\n  methods: {\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(verticalAlign, horizontalAlign) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\"\n        }\n      });\n    },\n    handleEdit: function handleEdit(index, row) {\n      alert(\"Your want to edit \".concat(row.id));\n    },\n    handleDelete: function handleDelete(index, row) {\n      var indexToDelete = this.itemData.findIndex(function (tableRow) {\n        return tableRow.id === row.id;\n      });\n      console.log(\"ID to be deleted\", row.id);\n      if (indexToDelete >= 0) {\n        this.itemData.splice(indexToDelete, 1);\n        console.log(\"Delete ID: \", this.itemData);\n      }\n      axiosClient.post(\"/updateStatus\", {\n        company: sessionStorage.getItem(\"Company\"),\n        id: row.id,\n        status: \"deleted\",\n        userID: sessionStorage.getItem(\"UserID\")\n      }).then(function (response) {\n        console.log(\"Success Delete: \", response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    insertElement: function insertElement(btn, tip) {\n      this.button = btn;\n      this.popover = tip;\n      console.log(\"insertElement: \", this.popover, this.button);\n    },\n    handleClick: function handleClick(e) {\n      console.log(\"handleClick: \", this.popover);\n      if (this.button === null && this.popover === null) {\n        console.log(\"true!\");\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      console.log(this.popover);\n      this.popover.setAttribute(\"data-show\", \"\");\n      this.popperInstance.update();\n      this.toggle = true;\n    },\n    handleHide: function handleHide(e) {\n      if (this.button === null && this.popover === null) {\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      this.popover.removeAttribute(\"data-show\");\n      this.toggle = false;\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","NotificationTemplate","createPopper","DeniedUnprocessModal","ApprovedUnprocessModal","use","_Table","_TableColumn","_Select","_Option","props","components","mounted","watch","transferredData","newValue","$emit","computed","transfer","itemData","popperInstance","button","popover","placement","modifiers","name","options","offset","strategy","data","tableColumns","prop","label","minWidth","itemsData","toggle","methods","handleQuantity","notifyVue","verticalAlign","horizontalAlign","color","Math","floor","random","$notify","component","type","customValue","handleEdit","index","row","alert","concat","id","handleDelete","indexToDelete","findIndex","tableRow","console","log","splice","post","company","sessionStorage","getItem","status","userID","then","response","catch","error","insertElement","btn","tip","handleClick","e","target","document","querySelector","setAttribute","update","handleHide","removeAttribute"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/ModalPullOut/UnprocessModal.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"unprocessModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"unprocessModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"unprocessModalLabel\">\n              {{ transferredData.branchName }} {{ itemData }}\n            </h1>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"col-sm-12 mt-2\">\n              <table\n                class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n              >\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                    <th scope=\"col\" class=\"nowrap\">Description</th>\n                    <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                    <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                    <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"item in itemData\" :key=\"item.itemCode\">\n                    <th scope=\"row\" class=\"px-3 d-flex\">\n                      <!-- <button\n                        class=\"table-delete-button\"\n                        @click.prevent=\"removeItem(item.code, item.boxLabel)\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </button> -->\n                      {{ item.itemCode }}\n                    </th>\n                    <td class=\"cell px-3\">{{ item.brand }}</td>\n                    <td class=\"cell px-3\">{{ item.boxNumber }}</td>\n                    <td class=\"cell px-3\">{{ item.boxLabel }}</td>\n                    <td class=\"cell px-3\">{{ item.quantity }}</td>\n                    <!-- <td class=\"cell\">\n                      <input\n                        type=\"number\"\n                        @blur=\"handleQuantity(item.id)\"\n                        v-model=\"item.quantity\"\n                        class=\"table-input-box\"\n                      />\n                    </td>\n                    <td class=\"cell\">\n                      <el-select\n                        class=\"table-select-box\"\n                        size=\"large\"\n                        v-model=\"item.boxLabel\"\n                        @change=\"editBoxLabel(item.code, item.quantity, item.boxLabel)\"\n                      >\n                        <el-option\n                          v-for=\"boxLabel in newTransaction.boxLabels\"\n                          class=\"table-select-box\"\n                          :value=\"boxLabel.boxLabel\"\n                          :label=\"boxLabel.boxLabel\"\n                          :key=\"boxLabel.id\"\n                        >\n                        </el-option>\n                      </el-select>\n                    </td> -->\n                  </tr>\n                </tbody>\n              </table>\n              <el-table class=\"table-striped\" :data=\"itemData\" border style=\"width: 100%\">\n                <el-table-column\n                  v-for=\"column in tableColumns\"\n                  :key=\"column.label\"\n                  :min-width=\"column.minWidth\"\n                  :prop=\"column.prop\"\n                  :label=\"column.label\"\n                >\n                </el-table-column>\n                <el-table-column :min-width=\"120\" class-name=\"td-actions\" label=\"Actions\">\n                  <template slot-scope=\"props\">\n                    <p-button\n                      type=\"success\"\n                      size=\"sm\"\n                      icon\n                      @click=\"toggle === false ? handleClick($event) : handleHide($event)\"\n                    >\n                      <i class=\"fa fa-edit\"></i>\n                    </p-button>\n                    <div class=\"popoverPanel\">\n                      <div class=\"popoverArrow\" data-popper-arrow></div>\n                      <div class=\"popoverBody\">The is popover content</div>\n                    </div>\n\n                    <p-button\n                      type=\"danger\"\n                      size=\"sm\"\n                      icon\n                      @click=\"handleDelete(props.$index, props.row)\"\n                    >\n                      <i class=\"fa fa-times\"></i>\n                    </p-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </div>\n          <div class=\"modal-footer mrgn-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n              Close\n            </button>\n            <button\n              class=\"btn btn-danger\"\n              data-bs-target=\"#deniedunprocess\"\n              data-bs-toggle=\"modal\"\n            >\n              Denied\n            </button>\n            <button\n              class=\"btn btn-primary\"\n              data-bs-target=\"#approvedunprocess\"\n              data-bs-toggle=\"modal\"\n            >\n              Approved\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <DeniedUnprocessModal></DeniedUnprocessModal>\n    <ApprovedUnprocessModal></ApprovedUnprocessModal>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../axios\";\nimport NotificationTemplate from \"../../../Components/Notification/NotificationSuccessfulRename.vue\";\nimport { createPopper } from \"@popperjs/core/lib/popper-lite.js\";\nimport DeniedUnprocessModal from \"./UnprocessModal/DeniedUnprocessModal.vue\";\nimport ApprovedUnprocessModal from \"./UnprocessModal/ApprovedUnprocessModal.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  // mounted() {\n  //   this.fetchData();\n  // },\n  props: [\"transferredData\", \"itemData\"],\n  components: {\n    NotificationTemplate,\n    DeniedUnprocessModal,\n    ApprovedUnprocessModal,\n  },\n\n  mounted() {\n    // this.itemsData = this.transfer();\n    // console.log(\"Item Data: \", this.itemsData);\n  },\n  watch: {\n    transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    },\n  },\n  computed: {\n    transfer() {\n      return this.itemData;\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    popperInstance() {\n      return createPopper(this.button, this.popover, {\n        placement: \"left\",\n        modifiers: [\n          {\n            name: \"offset\",\n            options: {\n              offset: [0, 30],\n            },\n          },\n        ],\n        strategy: \"absolute\",\n      });\n    },\n  },\n\n  data() {\n    return {\n      tableColumns: [\n        {\n          prop: \"brand\",\n          label: \"Brand\",\n          minWidth: 200,\n        },\n        {\n          prop: \"boxLabel\",\n          label: \"Box Label\",\n          minWidth: 250,\n        },\n        {\n          prop: \"boxNumber\",\n          label: \"Box Number\",\n          minWidth: 125,\n        },\n        {\n          prop: \"itemCode\",\n          label: \"Item Code\",\n          minWidth: 175,\n        },\n        {\n          prop: \"quantity\",\n          label: \"Quantity\",\n          minWidth: 100,\n        },\n      ],\n      itemsData: [],\n      button: null,\n      popover: null,\n      toggle: false,\n    };\n  },\n  methods: {\n    handleQuantity() {\n      this.notifyVue(\"bottom\", \"right\");\n    },\n    notifyVue(verticalAlign, horizontalAlign) {\n      const color = Math.floor(Math.random() * 4 + 1);\n      this.$notify({\n        component: NotificationTemplate,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: \"success\",\n        props: {\n          customValue: \"Success Add Box\",\n        },\n      });\n    },\n    handleEdit(index, row) {\n      alert(`Your want to edit ${row.id}`);\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.itemData.findIndex((tableRow) => tableRow.id === row.id);\n      console.log(\"ID to be deleted\", row.id);\n      if (indexToDelete >= 0) {\n        this.itemData.splice(indexToDelete, 1);\n        console.log(\"Delete ID: \", this.itemData);\n      }\n\n      axiosClient\n        .post(\"/updateStatus\", {\n          company: sessionStorage.getItem(\"Company\"),\n          id: row.id,\n          status: \"deleted\",\n          userID: sessionStorage.getItem(\"UserID\"),\n        })\n        .then((response) => {\n          console.log(\"Success Delete: \", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    insertElement(btn, tip) {\n      this.button = btn;\n      this.popover = tip;\n      console.log(\"insertElement: \", this.popover, this.button);\n    },\n\n    handleClick(e) {\n      console.log(\"handleClick: \", this.popover);\n      if (this.button === null && this.popover === null) {\n        console.log(\"true!\");\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      console.log(this.popover);\n      this.popover.setAttribute(\"data-show\", \"\");\n      this.popperInstance.update();\n      this.toggle = true;\n    },\n\n    handleHide(e) {\n      if (this.button === null && this.popover === null) {\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      this.popover.removeAttribute(\"data-show\");\n      this.toggle = false;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n\n.mrgn-footer {\n  margin-right: 10px;\n}\n\n.popoverPanel {\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.3rem;\n  font-size: 0.875rem;\n  display: none;\n}\n\n.popoverPanel[data-show] {\n  display: block;\n}\n\n.popoverHeader {\n  padding: 0.5rem 1rem;\n  margin: 0;\n  font-size: 1rem;\n  background-color: #f0f0f0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  border-top-left-radius: calc(0.3rem - 1px);\n  border-top-right-radius: calc(0.3rem - 1px);\n}\n\n.popoverBody {\n  padding: 1rem 1rem;\n  color: #212529;\n}\n\n.popoverArrow,\n.popoverArrow::before {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: inherit;\n}\n\n.popoverArrow {\n  visibility: hidden;\n}\n\n.popoverArrow::before {\n  visibility: visible;\n  content: \"\";\n  transform: rotate(45deg);\n}\n\n.popoverPanel[data-popper-placement^=\"left\"] > .popoverArrow {\n  right: -5px;\n}\n\n.popoverPanel[data-popper-placement^=\"left\"] > .popoverArrow::before {\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}