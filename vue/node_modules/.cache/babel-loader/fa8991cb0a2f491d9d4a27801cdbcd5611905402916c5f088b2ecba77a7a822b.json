{"ast":null,"code":"import _defineProperty from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _props$watch$computed;\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default (_props$watch$computed = {\n  props: [\"branchDetail\"],\n  watch: {},\n  computed: {},\n  data: function data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\"\n      },\n      chainCodeList: [],\n      companyList: [],\n      newBranchCode: \" \",\n      newBranchName: \" \",\n      isEmpty: true,\n      activeInput: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.fetchChainCode();\n  }\n}, _defineProperty(_props$watch$computed, \"watch\", {\n  newBranchCode: {\n    handler: function handler() {\n      if (this.newBranchCode === \"\") this.newBranchCode = this.branchDetail.branchCode;\n      this.checking();\n    },\n    deep: true\n  },\n  newBranchName: {\n    handler: function handler() {\n      this.checking();\n    },\n    deep: true\n  }\n}), _defineProperty(_props$watch$computed, \"methods\", {\n  handleBlur: function handleBlur(inputName) {\n    if (inputName === \"\") {\n      this[inputName] = \"OUTCLICKED\";\n    }\n  },\n  checking: function checking() {\n    if (this.newBranchCode === \"\" || this.newBranchName === \"\") {\n      this.isEmpty = true;\n    } else {\n      this.isEmpty = false;\n    }\n  },\n  convertToUppercase: function convertToUppercase() {\n    this.newBranchCode = this.newBranchCode.toUpperCase();\n    this.newBranchName = this.newBranchName.toUpperCase();\n  },\n  submit: function submit() {},\n  closeModal: function closeModal() {\n    this.newBranchCode = \"\";\n    this.newBranchName = \"\";\n  },\n  fetchChainCode: function fetchChainCode() {\n    var _this = this;\n    axiosClient.get(\"/fetchChainCodeAdmin\", {\n      params: {\n        company: this.company\n      }\n    }).then(function (response) {\n      _this.chainCodeList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n    axiosClient.get(\"/fetchCompany\").then(function (response) {\n      _this.companyList = response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n}), _props$watch$computed);","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","_props$watch$computed","props","watch","computed","data","newBranch","branchCode","chainCode","branchName","company","chainCodeList","companyList","newBranchCode","newBranchName","isEmpty","activeInput","mounted","fetchChainCode","_defineProperty","handler","branchDetail","checking","deep","handleBlur","inputName","convertToUppercase","toUpperCase","submit","closeModal","_this","get","params","then","response","catch","error","console"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/ModalMaintenance/EditMaintenanceModal/EditBranchModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"editbranchmodal\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"editbranchmodalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"editbranchmodalLabel\">\n            EDIT BRANCH\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"row\">\n              <div class=\"col-4 pull-left\">\n                <fg-input\n                  label=\"Chain Code\"\n                  :disabled=\"true\"\n                  v-model=\"branchDetail.chainCode\"\n                ></fg-input>\n              </div>\n              <div class=\"col-4\">\n                <fg-input\n                  label=\"Branch Code\"\n                  :placeholder=\"branchDetail.branchCode\"\n                  v-model.trim=\"newBranchCode\"\n                  @input=\"convertToUppercase\"\n                  @blur=\"handleBlur('newBranchCode')\"\n                ></fg-input>\n              </div>\n              <div class=\"col-4\">\n                <fg-input\n                  label=\"Branch Name\"\n                  :placeholder=\"branchDetail.branchName\"\n                  v-model.trim=\"newBranchName\"\n                  @input=\"convertToUppercase\"\n                ></fg-input>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            @click.prevent=\"closeModal()\"\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            :disabled=\"isEmpty\"\n            @click.prevent=\"submit\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  props: [\"branchDetail\"],\n  // props: [\"branchDetail\"],\n\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      newBranch: {\n        branchCode: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        company: \"\",\n      },\n      chainCodeList: [],\n      companyList: [],\n      newBranchCode: \" \",\n      newBranchName: \" \",\n      isEmpty: true,\n      activeInput: \"\",\n    };\n  },\n  mounted() {\n    this.fetchChainCode();\n  },\n  watch: {\n    newBranchCode: {\n      handler() {\n        if (this.newBranchCode === \"\") this.newBranchCode = this.branchDetail.branchCode;\n        this.checking();\n      },\n      deep: true,\n    },\n    newBranchName: {\n      handler() {\n        this.checking();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    handleBlur(inputName) {\n      if (inputName === \"\") {\n        // Clear activeInput\n        // Update the input box with \"OUTCLICKED\"\n        this[inputName] = \"OUTCLICKED\";\n      }\n    },\n    checking() {\n      if (this.newBranchCode === \"\" || this.newBranchName === \"\") {\n        this.isEmpty = true;\n      } else {\n        this.isEmpty = false;\n      }\n    },\n    convertToUppercase() {\n      this.newBranchCode = this.newBranchCode.toUpperCase();\n      this.newBranchName = this.newBranchName.toUpperCase();\n    },\n    submit() {\n      // axiosClient\n      //   .post(\"/addNewBranch\", {\n      //     branchCode: this.newBranch.branchCode,\n      //     chainCode: this.newBranch.chainCode,\n      //     branchName: this.newBranch.branchName,\n      //     userID: sessionStorage.getItem(\"UserID\"),\n      //     companyType: this.newBranch.company,\n      //     company: this.company,\n      //   })\n      //   .then((response) => {\n      //     // console.log(\"Response:\", response.data);\n      //     setTimeout(() => {\n      //       window.location.reload();\n      //     }, 3000); // Reload after 3 seconds\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n    closeModal() {\n      this.newBranchCode = \"\";\n      this.newBranchName = \"\";\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChainCodeAdmin\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AAuEA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA,gBAAAC,qBAAA;EACAC,KAAA;EAGAC,KAAA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;QACAC,UAAA;QACAC,SAAA;QACAC,UAAA;QACAC,OAAA;MACA;MACAC,aAAA;MACAC,WAAA;MACAC,aAAA;MACAC,aAAA;MACAC,OAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,cAAA;EACA;AAAA,GAAAC,eAAA,CAAAlB,qBAAA,WACA;EACAY,aAAA;IACAO,OAAA,WAAAA,QAAA;MACA,SAAAP,aAAA,cAAAA,aAAA,QAAAQ,YAAA,CAAAd,UAAA;MACA,KAAAe,QAAA;IACA;IACAC,IAAA;EACA;EACAT,aAAA;IACAM,OAAA,WAAAA,QAAA;MACA,KAAAE,QAAA;IACA;IACAC,IAAA;EACA;AACA,IAAAJ,eAAA,CAAAlB,qBAAA,aACA;EACAuB,UAAA,WAAAA,WAAAC,SAAA;IACA,IAAAA,SAAA;MAGA,KAAAA,SAAA;IACA;EACA;EACAH,QAAA,WAAAA,SAAA;IACA,SAAAT,aAAA,gBAAAC,aAAA;MACA,KAAAC,OAAA;IACA;MACA,KAAAA,OAAA;IACA;EACA;EACAW,kBAAA,WAAAA,mBAAA;IACA,KAAAb,aAAA,QAAAA,aAAA,CAAAc,WAAA;IACA,KAAAb,aAAA,QAAAA,aAAA,CAAAa,WAAA;EACA;EACAC,MAAA,WAAAA,OAAA,GAmBA;EACAC,UAAA,WAAAA,WAAA;IACA,KAAAhB,aAAA;IACA,KAAAC,aAAA;EACA;EACAI,cAAA,WAAAA,eAAA;IAAA,IAAAY,KAAA;IACAnC,WAAA,CACAoC,GAAA;MACAC,MAAA;QACAtB,OAAA,OAAAA;MACA;IACA,GACAuB,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAAnB,aAAA,GAAAuB,QAAA,CAAA7B,IAAA;IACA,GACA8B,KAAA,WAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;IACA;IACAzC,WAAA,CACAoC,GAAA,kBACAE,IAAA,WAAAC,QAAA;MACAJ,KAAA,CAAAlB,WAAA,GAAAsB,QAAA,CAAA7B,IAAA;IACA,GACA8B,KAAA,WAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;IACA;EACA;AACA,IAAAnC,qBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}