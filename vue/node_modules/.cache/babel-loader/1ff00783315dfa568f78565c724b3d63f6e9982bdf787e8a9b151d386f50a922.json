{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../axios\";\nimport NotifItemQuantity from \"../../../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifDeleteItem from \"../../../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport { createPopper } from \"@popperjs/core/lib/popper-lite.js\";\nimport DeniedUnprocessModal from \"./UnprocessModal/DeniedUnprocessModal.vue\";\nimport ApprovedUnprocessModal from \"./UnprocessModal/ApprovedUnprocessModal.vue\";\nimport ViewModal from \"./UnprocessModal/ViewModal.vue\";\nimport PPagination from \"../../../../../UIComponents/Pagination.vue\";\nimport axios from \"axios\";\nimport XLSX from \"../../../../../../../node_modules/xlsx/dist/xlsx.full.min.js\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  props: [\"transactionData\", \"itemData\", \"totalNumbers\", \"listBoxLabel\"],\n  components: {\n    [_Select.name]: _Select,\n    NotifItemQuantity,\n    DeniedUnprocessModal,\n    ApprovedUnprocessModal,\n    ViewModal,\n    PPagination,\n    NotifDeleteItem\n  },\n  mounted() {\n    this.checkPos();\n  },\n  watch: {\n    transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    }\n  },\n  computed: {\n    transfer() {\n      return this.itemData;\n    },\n    pagedData() {\n      return this.itemData.slice(this.from, this.to);\n    },\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.itemData.length;\n        return this.pagedData;\n      }\n      let result = this.itemData.filter(row => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.itemData.length;\n      return this.itemData.length;\n    },\n    popperInstance() {\n      return createPopper(this.button, this.popover, {\n        placement: \"left\",\n        modifiers: [{\n          name: \"offset\",\n          options: {\n            offset: [0, 30]\n          }\n        }],\n        strategy: \"absolute\"\n      });\n    }\n  },\n  data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"itemCode\", \"brand\", \"boxNumber\", \"boxLabel\", \"quantity\"],\n      tableColumns: [{\n        prop: \"brand\",\n        label: \"Brand\",\n        minWidth: 200\n      }, {\n        prop: \"boxLabel\",\n        label: \"Box Label\",\n        minWidth: 250\n      }, {\n        prop: \"boxNumber\",\n        label: \"Box Number\",\n        minWidth: 125\n      }, {\n        prop: \"itemCode\",\n        label: \"Item Code\",\n        minWidth: 175\n      }, {\n        prop: \"quantity\",\n        label: \"Quantity\",\n        minWidth: 100\n      }],\n      itemsData: [],\n      button: null,\n      popover: null,\n      toggle: false,\n      viewImages: [],\n      isReviewer: false,\n      headerRow: [\"Item Code\", \"Item Description\", \"Brand\", \"Box Number\", \"Box Label\", \"Quantity\"],\n      headerCellStyle: {\n        fontSize: \"10px\"\n      },\n      cellStyle: {\n        fontSize: \"12px !important\"\n      }\n    };\n  },\n  methods: {\n    exportExcel() {\n      var dataArray = \"\";\n      const selectedItems = [this.transactionData.plID];\n      axiosClient.get(\"/fetchAllItemsRequestExport\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\"),\n          plID: selectedItems\n        }\n      }).then(response => {\n        this.excelBranch = response.data;\n        dataArray = this.excelBranch.map(obj => [obj.itemCode, obj.ItemDescription, obj.brand, obj.boxNumber, obj.boxLabel, obj.quantity]);\n        const currentDate = new Date();\n        const options = {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        };\n        const currentDateString = currentDate.toLocaleDateString(\"en-PH\", options).replace(/\\//g, \"-\");\n        dataArray = [this.headerRow, ...dataArray];\n        const workbook = XLSX.utils.book_new();\n        const worksheet = XLSX.utils.aoa_to_sheet(dataArray);\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Raw Data\");\n        const excelBuffer = XLSX.write(workbook, {\n          bookType: \"xlsx\",\n          type: \"array\"\n        });\n        const blob = new Blob([excelBuffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.download = currentDateString + \"_ \" + this.transactionData.branchName + \".xlsx\";\n        link.click();\n        window.URL.revokeObjectURL(url);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    checkPos() {\n      if (sessionStorage.getItem(\"Position\") == \"Reviewer\" || sessionStorage.getItem(\"Position\") == \"Admin\") this.isReviewer = true;\n    },\n    viewImage() {\n      console.log(\"Transaction Number:\", this.transactionData);\n      axiosClient.get(\"/fetchImageBranchDoc\", {\n        params: {\n          transactionID: this.transactionData.plID,\n          company: sessionStorage.getItem(\"Company\")\n        }\n      }).then(response => {\n        console.log(\"Pull out path image:\", response.data);\n        console.log(\"Pull out path image length:\", response.data.length);\n        this.viewImages = response.data.imagePaths;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    submit() {\n      console.log(\"Transaction Number:\", this.transactionData);\n      console.log(\"Company\", this.transactionData.shortName);\n      var tempTransactionID = this.convertToAlphanumeric(\"transactionID\");\n      var tempcompany = this.convertToAlphanumeric(\"company\");\n      location.href = \"http://192.168.0.7:4040/#/pull-out/requisition-form?\" + tempTransactionID + \"=\" + this.transactionData.plID + \"&\" + tempcompany + \"=\" + this.convertToAlphanumeric(this.transactionData.shortName);\n    },\n    changeBoxNumber(item) {\n      console.log(\"Edit Labels:\", item);\n      const matchingObject = this.listBoxLabel.find(obj => obj.boxLabel === item.boxLabel);\n      console.log(\"Edit matchingObject:\", matchingObject);\n      if (matchingObject) {\n        item.boxNumber = matchingObject.boxNumber;\n        item.boxLabel = matchingObject.boxLabel;\n      }\n      console.log(\"Edit Labels:\", item);\n    },\n    getBoxLabels() {},\n    handleQuantity(item) {\n      console.log(\"Quantity\", item.itemCode);\n      axiosClient.get(\"/fetchNewAmount\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\"),\n          itemCode: item.itemCode,\n          quantity: item.quantity\n        }\n      }).then(response => {\n        console.log(\"Success New Amount\", response.data);\n        item.amount = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n      if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      }\n      this.$notify({\n        component: notification,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success Add Box\"\n        }\n      });\n    },\n    handleEdit(index, row) {\n      alert(`Your want to edit ${row.id}`);\n    },\n    handleDelete(item) {\n      let indexToDelete = this.itemData.findIndex(tableRow => tableRow.id === item.id);\n      if (indexToDelete >= 0) {\n        this.itemData.splice(indexToDelete, 1);\n        this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n      }\n    },\n    insertElement(btn, tip) {\n      this.button = btn;\n      this.popover = tip;\n    },\n    handleClick(e) {\n      if (this.button === null && this.popover === null) {\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      this.popover.setAttribute(\"data-show\", \"\");\n      this.popperInstance.update();\n      this.toggle = true;\n    },\n    handleHide(e) {\n      if (this.button === null && this.popover === null) {\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      this.popover.removeAttribute(\"data-show\");\n      this.toggle = false;\n    },\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        $event.preventDefault();\n      }\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n        if (char >= \"0\" && char <= \"9\" || char >= \"a\" && char <= \"z\" || char >= \"A\" && char <= \"Z\") {\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          result += char;\n        }\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","NotifItemQuantity","NotifDeleteItem","createPopper","DeniedUnprocessModal","ApprovedUnprocessModal","ViewModal","PPagination","axios","XLSX","use","_Table","_TableColumn","_Select","_Option","props","components","name","mounted","checkPos","watch","transferredData","newValue","$emit","computed","transfer","itemData","pagedData","slice","from","to","queriedData","searchQuery","pagination","total","length","result","filter","row","isIncluded","key","propsToSearch","rowValue","toString","toLowerCase","includes","highBound","perPage","currentPage","popperInstance","button","popover","placement","modifiers","options","offset","strategy","data","perPageOptions","tableColumns","prop","label","minWidth","itemsData","toggle","viewImages","isReviewer","headerRow","headerCellStyle","fontSize","cellStyle","methods","exportExcel","dataArray","selectedItems","transactionData","plID","get","params","company","sessionStorage","getItem","then","response","excelBranch","map","obj","itemCode","ItemDescription","brand","boxNumber","boxLabel","quantity","currentDate","Date","year","month","day","currentDateString","toLocaleDateString","replace","workbook","utils","book_new","worksheet","aoa_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","branchName","click","revokeObjectURL","catch","error","console","viewImage","log","transactionID","imagePaths","submit","shortName","tempTransactionID","convertToAlphanumeric","tempcompany","location","changeBoxNumber","item","matchingObject","listBoxLabel","find","getBoxLabels","handleQuantity","amount","notifyVue","notify","verticalAlign","horizontalAlign","notification","notifType","$notify","component","customValue","handleEdit","index","alert","id","handleDelete","indexToDelete","findIndex","tableRow","splice","insertElement","btn","tip","handleClick","e","target","querySelector","setAttribute","update","handleHide","removeAttribute","numberOnly","$event","keyCode","which","preventDefault","input","i","char","charCode","charCodeAt","alphanumericChar"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/ModalPullOut/UnprocessModal.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"unprocessModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"unprocessModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <!-- <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"unprocessModalLabel\">\n              Pull Out Transaction\n            </h1> -->\n            <div class=\"row\">\n              <div class=\"col d-flex justify-content-center\">\n                <h6 class=\"modal-title\">For Review Pull Out Transaction</h6>\n              </div>\n              <div class=\"col-auto\">\n                <button class=\"delete-buttons\" data-bs-dismiss=\"modal\">\n                  <i\n                    class=\"nc-icon nc-simple-remove font-weight-bold\"\n                    style=\"margin-top: 5px\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Transaction Number</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center font-weight-bold\"\n                  >\n                    {{ transactionData.plID }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Transaction Type</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transactionData.transactionType }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Status</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transactionData.status }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Branch</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center\"\n                  >\n                    {{ transactionData.branchName }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Created By</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transactionData.createdBy }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Date Created</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transactionData.date }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Chain</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center\"\n                  >\n                    {{ transactionData.chainCode }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Reviewed By</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transactionData.reviewedBy }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Date Reviewed</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transactionData.reviewedDate }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Company</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center\"\n                  >\n                    {{ transactionData.company }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Approved By</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transactionData.approvedBy }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Date Approved</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transactionData.approvedDate }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-12 pt-5\">\n                <fg-input\n                  class=\"input-md\"\n                  placeholder=\"Search\"\n                  v-model=\"searchQuery\"\n                  addon-right-icon=\"nc-icon nc-zoom-split\"\n                >\n                </fg-input>\n              </div>\n              <div class=\"col-sm-12 mt-2\">\n                <table\n                  class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                >\n                  <thead>\n                    <tr class=\"text-center\">\n                      <th scope=\"col\" class=\"nowrap\" style=\"font-size: 10px\">\n                        Item Code\n                      </th>\n                      <th scope=\"col\" class=\"nowrap\" style=\"font-size: 10px\">\n                        Category/Brand\n                      </th>\n                      <th scope=\"col\" class=\"nowrap\" style=\"font-size: 10px\">\n                        Box Number\n                      </th>\n                      <th scope=\"col\" class=\"nowrap\" style=\"font-size: 10px\">\n                        Box Label\n                      </th>\n                      <th scope=\"col\" class=\"nowrap\" style=\"font-size: 10px\">Quantity</th>\n                      <th scope=\"col\" class=\"nowrap\" style=\"font-size: 10px\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody class=\"text-center\">\n                    <tr\n                      v-for=\"(item, index) in queriedData\"\n                      :key=\"item.id\"\n                      style=\"font-size: 12px\"\n                    >\n                      <th style=\"min-width: 150px\" class=\"px-3\">\n                        {{ item.itemCode }}\n                      </th>\n                      <td style=\"min-width: 50px\" class=\"cell-unprocess\">\n                        {{ item.brand }}\n                      </td>\n                      <td style=\"min-width: 100px\" class=\"cell-unprocess\">\n                        {{ item.boxNumber }}\n                      </td>\n                      <td style=\"min-width: 400px\" class=\"cell-unprocess\">\n                        {{ item.boxLabel }}\n                        <!-- {{ item.boxLabel }} -->\n                        <!-- <el-select\n                        class=\"table-select-box\"\n                        size=\"large\"\n                        v-model=\"item.boxLabel\"\n                        @change=\"editBoxLabel(item.code, item.quantity, item.boxLabel)\"\n                      > -->\n                        <!-- <el-select\n                        class=\"table-select-box\"\n                        style=\"font-size: 12px; font-weight: bold\"\n                        size=\"large\"\n                        @visible-change=\"getBoxLabels\"\n                        @change=\"changeBoxNumber(item)\"\n                        v-model=\"item.boxLabel\"\n                        :style=\"{ width: '100%' }\"\n                      >\n                        <el-option\n                          v-for=\"boxLabel in listBoxLabel\"\n                          class=\"table-select-box\"\n                          :value=\"boxLabel.boxLabel\"\n                          :label=\"boxLabel.boxLabel\"\n                          :key=\"boxLabel.id\"\n                        >\n                        </el-option>\n                      </el-select> -->\n                      </td>\n                      <!-- <td class=\"cell px-3\">{{ item.quantity }}</td> -->\n                      <td style=\"min-width: 50px\" class=\"cell-unprocess\">\n                        <!-- <div class=\"btn-group btn-group-sm d-flex flex-row\"> -->\n                        {{ item.quantity }}\n                        <!-- <p-button\n                          type=\"default\"\n                          round\n                          outline\n                          size=\"sm\"\n                          @click=\"\n                            item.quantity > 0 ? item.quantity-- : 0, handleQuantity(item)\n                          \"\n                        >\n                          <i class=\"nc-icon nc-simple-delete\"></i>\n                        </p-button>\n                        <input\n                          type=\"text\"\n                          @blur=\"handleQuantity(item)\"\n                          v-model=\"item.quantity\"\n                          class=\"table-input-box\"\n                          style=\"width: 75px; text-align: center\"\n                          @keypress=\"numberOnly\"\n                        />\n                        <p-button\n                          type=\"default\"\n                          round\n                          outline\n                          size=\"sm\"\n                          @click=\"item.quantity++, handleQuantity(item)\"\n                        >\n                          <i class=\"nc-icon nc-simple-add\"></i>\n                        </p-button> -->\n                        <!-- </div> -->\n                        <!-- <input\n                        type=\"number\"\n                        min=\"1\"\n                        @blur=\"handleQuantity(item)\"\n                        v-model=\"item.quantity\"\n                        class=\"table-input-box\"\n                        required=\"true\"\n                        message=\"you can give score -10 to +10 only\"\n                      /> -->\n                      </td>\n                      <td style=\"min-width: 50px\" class=\"cell-unprocess\">\n                        <!-- <div class=\"btn-group btn-group-sm d-flex flex-row\"> -->\n                        {{ item.amount }}\n                      </td>\n                      <!-- <td style=\"min-width: 50px\" class=\"cell-unprocess\">\n                      <p-button type=\"danger\" size=\"sm\" icon @click=\"handleDelete(item)\">\n                        <i class=\"fa fa-times\"></i>\n                      </p-button>\n                    </td> -->\n                    </tr>\n                  </tbody>\n                </table>\n                <div class=\"d-flex justify-content-end pagination-info\">\n                  <p class=\"category p-margin\">\n                    Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n                  </p>\n                </div>\n                <div class=\"d-flex justify-content-center\">\n                  <p-pagination\n                    class=\"pull-right\"\n                    v-model=\"pagination.currentPage\"\n                    :per-page=\"pagination.perPage\"\n                    :total=\"pagination.total\"\n                  >\n                  </p-pagination>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-sm-6 text-center\">\n                    <label> Number of Boxes</label><br />\n                    <span class=\"font-weight-bold label-size\">\n                      {{ totalNumbers.boxCount }}\n                    </span>\n                  </div>\n                  <div class=\"col-sm-6 text-center\">\n                    <label> Number of Items</label><br />\n                    <span class=\"font-weight-bold label-size\">\n                      {{ totalNumbers.totalItems }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer mrgn-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n              Close\n            </button>\n            <button\n              type=\"submit\"\n              class=\"btn btn-info\"\n              data-bs-target=\"#viewModal\"\n              data-bs-toggle=\"modal\"\n              @click=\"viewImage\"\n            >\n              View\n            </button>\n            <button type=\"submit\" class=\"btn btn-info\" @click=\"exportExcel\">\n              Export\n            </button>\n            <button\n              type=\"submit\"\n              class=\"btn btn-warning\"\n              @click=\"submit\"\n              data-bs-dismiss=\"modal\"\n              v-if=\"isReviewer\"\n            >\n              Edit\n            </button>\n\n            <button\n              class=\"btn btn-danger\"\n              data-bs-target=\"#deniedunprocess\"\n              data-bs-toggle=\"modal\"\n              v-if=\"isReviewer\"\n            >\n              Denied\n            </button>\n            <button\n              class=\"btn btn-success\"\n              data-bs-target=\"#approvedunprocess\"\n              data-bs-toggle=\"modal\"\n              v-if=\"isReviewer\"\n            >\n              Approved\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ViewModal :transferredData=\"transactionData\" :viewImages=\"viewImages\"></ViewModal>\n    <DeniedUnprocessModal :transferredData=\"transactionData\"></DeniedUnprocessModal>\n    <ApprovedUnprocessModal\n      :transferredData=\"transactionData\"\n      :itemData=\"itemData\"\n    ></ApprovedUnprocessModal>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../axios\";\nimport NotifItemQuantity from \"../../../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifDeleteItem from \"../../../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport { createPopper } from \"@popperjs/core/lib/popper-lite.js\";\nimport DeniedUnprocessModal from \"./UnprocessModal/DeniedUnprocessModal.vue\";\nimport ApprovedUnprocessModal from \"./UnprocessModal/ApprovedUnprocessModal.vue\";\nimport ViewModal from \"./UnprocessModal/ViewModal.vue\";\nimport PPagination from \"../../../../../UIComponents/Pagination.vue\";\nimport axios from \"axios\";\nimport XLSX from \"../../../../../../../node_modules/xlsx/dist/xlsx.full.min.js\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  // mounted() {\n  //   this.fetchData();\n  // },\n  props: [\"transactionData\", \"itemData\", \"totalNumbers\", \"listBoxLabel\"],\n  components: {\n    [Select.name]: Select,\n    NotifItemQuantity,\n    DeniedUnprocessModal,\n    ApprovedUnprocessModal,\n    ViewModal,\n    PPagination,\n    NotifDeleteItem,\n  },\n\n  mounted() {\n    // this.itemsData = this.transfer();\n    // console.log(\"Item Data: \", this.itemsData);\n    this.checkPos();\n  },\n  watch: {\n    transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    },\n  },\n  computed: {\n    transfer() {\n      return this.itemData;\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    pagedData() {\n      return this.itemData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.itemData.length;\n        return this.pagedData;\n      }\n      let result = this.itemData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.itemData.length;\n      return this.itemData.length;\n    },\n    popperInstance() {\n      return createPopper(this.button, this.popover, {\n        placement: \"left\",\n        modifiers: [\n          {\n            name: \"offset\",\n            options: {\n              offset: [0, 30],\n            },\n          },\n        ],\n        strategy: \"absolute\",\n      });\n    },\n  },\n\n  data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"itemCode\", \"brand\", \"boxNumber\", \"boxLabel\", \"quantity\"],\n      tableColumns: [\n        {\n          prop: \"brand\",\n          label: \"Brand\",\n          minWidth: 200,\n        },\n        {\n          prop: \"boxLabel\",\n          label: \"Box Label\",\n          minWidth: 250,\n        },\n        {\n          prop: \"boxNumber\",\n          label: \"Box Number\",\n          minWidth: 125,\n        },\n        {\n          prop: \"itemCode\",\n          label: \"Item Code\",\n          minWidth: 175,\n        },\n        {\n          prop: \"quantity\",\n          label: \"Quantity\",\n          minWidth: 100,\n        },\n      ],\n      itemsData: [],\n      button: null,\n      popover: null,\n      toggle: false,\n      // listBoxLabel: [],\n      viewImages: [],\n      isReviewer: false,\n      headerRow: [\n        \"Item Code\",\n        \"Item Description\",\n        \"Brand\",\n        \"Box Number\",\n        \"Box Label\",\n        \"Quantity\",\n      ],\n      headerCellStyle: {\n        fontSize: \"10px\",\n      },\n      cellStyle: {\n        fontSize: \"12px !important\",\n      },\n    };\n  },\n  methods: {\n    exportExcel() {\n      var dataArray = \"\";\n      const selectedItems = [this.transactionData.plID];\n\n      axiosClient\n        .get(\"/fetchAllItemsRequestExport\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            plID: selectedItems,\n          },\n        })\n        .then((response) => {\n          this.excelBranch = response.data;\n          dataArray = this.excelBranch.map((obj) => [\n            obj.itemCode,\n            obj.ItemDescription,\n            obj.brand,\n            obj.boxNumber,\n            obj.boxLabel,\n            obj.quantity,\n          ]);\n\n          const currentDate = new Date();\n          const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n          const currentDateString = currentDate\n            .toLocaleDateString(\"en-PH\", options)\n            .replace(/\\//g, \"-\");\n\n          dataArray = [this.headerRow, ...dataArray];\n          const workbook = XLSX.utils.book_new();\n          const worksheet = XLSX.utils.aoa_to_sheet(dataArray);\n\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Raw Data\");\n          const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\n          const blob = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n          });\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement(\"a\");\n          link.href = url;\n          link.download =\n            currentDateString + \"_ \" + this.transactionData.branchName + \".xlsx\";\n          link.click();\n          window.URL.revokeObjectURL(url);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    checkPos() {\n      if (\n        sessionStorage.getItem(\"Position\") == \"Reviewer\" ||\n        sessionStorage.getItem(\"Position\") == \"Admin\"\n      )\n        this.isReviewer = true;\n    },\n\n    viewImage() {\n      console.log(\"Transaction Number:\", this.transactionData);\n\n      axiosClient\n        .get(\"/fetchImageBranchDoc\", {\n          params: {\n            transactionID: this.transactionData.plID,\n            company: sessionStorage.getItem(\"Company\"),\n          },\n        })\n        .then((response) => {\n          console.log(\"Pull out path image:\", response.data);\n          console.log(\"Pull out path image length:\", response.data.length);\n\n          this.viewImages = response.data.imagePaths;\n          // for (var x = 0; x < response.data.length; x++) {\n          //   this.viewImages.push(\n          //     \"http://192.168.0.7:40/public/uploads/\" +\n          //       sessionStorage.getItem(\"Company\") +\n          //       \"/\" +\n          //       response.data[x].path\n          //   );\n          // }\n          // console.log(\"Images:\", this.viewImages);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    submit() {\n      console.log(\"Transaction Number:\", this.transactionData);\n      console.log(\"Company\", this.transactionData.shortName);\n\n      // location.href =\n      //   \"http://192.168.0.7:4040/#/pull-out/requisition-form?transactionID=\" +\n      //   this.transactionData.plID +\n      //   \"&company=\" +\n      //   this.transactionData.shortName;\n\n      var tempTransactionID = this.convertToAlphanumeric(\"transactionID\");\n      var tempcompany = this.convertToAlphanumeric(\"company\");\n      location.href =\n        \"http://192.168.0.7:4040/#/pull-out/requisition-form?\" +\n        tempTransactionID +\n        \"=\" +\n        this.transactionData.plID +\n        \"&\" +\n        tempcompany +\n        \"=\" +\n        this.convertToAlphanumeric(this.transactionData.shortName);\n\n      // this.$router.push({\n      //   path: \"/pull-out/requisition-form\",\n      //   query: {\n      //     transactionID: this.transactionData.plID,\n      //     company: this.transactionData.shortName,\n      //   },\n      // });\n    },\n    changeBoxNumber(item) {\n      console.log(\"Edit Labels:\", item);\n      const matchingObject = this.listBoxLabel.find(\n        (obj) => obj.boxLabel === item.boxLabel\n      );\n      console.log(\"Edit matchingObject:\", matchingObject);\n\n      if (matchingObject) {\n        item.boxNumber = matchingObject.boxNumber;\n        item.boxLabel = matchingObject.boxLabel;\n      }\n\n      console.log(\"Edit Labels:\", item);\n    },\n    getBoxLabels() {\n      // this.itemData.forEach((obj) => {\n      //   const index = this.listBoxLabel.findIndex(\n      //     (savedObj) => savedObj.boxNumber === obj.boxNumber\n      //   );\n      //   if (index === -1) {\n      //     this.listBoxLabel.push(obj);\n      //     // console.log(`Object ${obj.boxNumber} saved.`);\n      //   }\n      // });\n      // console.log(\"Edit Labels:\", this.listBoxLabel);\n    },\n    handleQuantity(item) {\n      console.log(\"Quantity\", item.itemCode);\n      axiosClient\n        .get(\"/fetchNewAmount\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            itemCode: item.itemCode,\n            quantity: item.quantity,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success New Amount\", response.data);\n          item.amount = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      // this.getBoxLabels();\n      // this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n\n      if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      }\n      this.$notify({\n        component: notification,\n        // icon: 'nc-icon nc-app',\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success Add Box\",\n        },\n      });\n    },\n    handleEdit(index, row) {\n      alert(`Your want to edit ${row.id}`);\n    },\n    handleDelete(item) {\n      let indexToDelete = this.itemData.findIndex((tableRow) => tableRow.id === item.id);\n      if (indexToDelete >= 0) {\n        this.itemData.splice(indexToDelete, 1);\n        this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n      }\n    },\n    insertElement(btn, tip) {\n      this.button = btn;\n      this.popover = tip;\n    },\n\n    handleClick(e) {\n      if (this.button === null && this.popover === null) {\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      this.popover.setAttribute(\"data-show\", \"\");\n      this.popperInstance.update();\n      this.toggle = true;\n    },\n\n    handleHide(e) {\n      if (this.button === null && this.popover === null) {\n        this.insertElement(e.target, document.querySelector(\".popoverPanel\"));\n      }\n      this.popover.removeAttribute(\"data-show\");\n      this.toggle = false;\n    },\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n\n        // Check if the character is alphanumeric\n        if (\n          (char >= \"0\" && char <= \"9\") ||\n          (char >= \"a\" && char <= \"z\") ||\n          (char >= \"A\" && char <= \"Z\")\n        ) {\n          // Convert the character code to a base-36 alphanumeric representation\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          // Non-alphanumeric characters are left unchanged\n          result += char;\n        }\n      }\n\n      return result;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n\n.mrgn-footer {\n  margin-right: 10px;\n}\n\n.popoverPanel {\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.3rem;\n  font-size: 0.875rem;\n  display: none;\n}\n\n.popoverPanel[data-show] {\n  display: block;\n}\n\n.popoverHeader {\n  padding: 0.5rem 1rem;\n  margin: 0;\n  font-size: 1rem;\n  background-color: #f0f0f0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  border-top-left-radius: calc(0.3rem - 1px);\n  border-top-right-radius: calc(0.3rem - 1px);\n}\n\n.popoverBody {\n  padding: 1rem 1rem;\n  color: #212529;\n}\n\n.popoverArrow,\n.popoverArrow::before {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: inherit;\n}\n\n.popoverArrow {\n  visibility: hidden;\n}\n\n.popoverArrow::before {\n  visibility: visible;\n  content: \"\";\n  transform: rotate(45deg);\n}\n\n.popoverPanel[data-popper-placement^=\"left\"] > .popoverArrow {\n  right: -5px;\n}\n\n.popoverPanel[data-popper-placement^=\"left\"] > .popoverArrow::before {\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n}\n.cell-unprocess {\n  display: table-cell !important;\n  padding: 0px !important;\n}\n// td {\n//   display: table-cell !important;\n//   padding: 0px !important;\n//   /* background-color: #111111 !important; */\n// }\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n  font-size: 12px;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  // border-radius: 0px !important;\n  background-color: transparent !important;\n  font-size: 12px;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n  font-size: 12px;\n}\n.delete-buttons {\n  background-color: transparent;\n  color: red;\n  border: 2px solid red;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  padding-bottom: -2px;\n}\n\n.delete-buttons:hover {\n  background-color: red;\n  color: white;\n}\n\n.selector-label {\n  font-size: 10px; /* Replace 16px with your desired font size */\n  color: #000 !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}