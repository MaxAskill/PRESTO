{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport ConfirmationDraftPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationDraftPullOutModal.vue\";\nimport axios, { isCancel } from \"axios\";\nimport * as XLSX from \"xlsx\";\nimport { filter } from \"vue/types/umd\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"NotifAddBoxLabel\", NotifAddBoxLabel), _defineProperty(_components, \"NotifAddItem\", NotifAddItem), _defineProperty(_components, \"NotifDeleteBoxLabel\", NotifDeleteBoxLabel), _defineProperty(_components, \"NotifDeleteItem\", NotifDeleteItem), _defineProperty(_components, \"NotifDraftSave\", NotifDraftSave), _defineProperty(_components, \"NotifItemChangeBoxLabel\", NotifItemChangeBoxLabel), _defineProperty(_components, \"NotifItemQuantity\", NotifItemQuantity), _defineProperty(_components, \"NotifRenameBoxLabel\", NotifRenameBoxLabel), _defineProperty(_components, \"NotifSubmitTransaction\", NotifSubmitTransaction), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _defineProperty(_components, \"TransactionReceiptModal\", TransactionReceiptModal), _defineProperty(_components, \"DraftModal\", DraftModal), _defineProperty(_components, \"ConfirmationSubmitPullOutModal\", ConfirmationSubmitPullOutModal), _defineProperty(_components, \"ConfirmationDraftPullOutModal\", ConfirmationDraftPullOutModal), _components),\n  data: function data() {\n    return {\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n      transactionTypeList: [{\n        value: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        label: \"CPO Item for Disposal in the Store c/o Supervisor\"\n      }, {\n        value: \"CPO for Transfer to Another Store\",\n        label: \"CPO for Transfer to Another Store\"\n      }, {\n        value: \"CPO Back to WH via In-House Service\",\n        label: \"CPO Back to WH via In-House Service\"\n      }, {\n        value: \"CPO Back to WH via Chain Distribution Center\",\n        label: \"CPO Back to WH via Chain Distribution Center\"\n      }, {\n        value: \"CPO Back to WH via 3rd Party Trucking\",\n        label: \"CPO Back to WH via 3rd Party Trucking\"\n      }, {\n        value: \"CPO Back to WH c/o Supervisor\",\n        label: \"CPO Back to WH c/o Supervisor\"\n      }, {\n        value: \"Concess Direct Pull-Out\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      remarksList: [\"GOOD\", \"DAMAGED/DIRTY\", \"DISPOSAL\"],\n      images: [],\n      files: [],\n      img_counter: 0,\n      strCategory: {\n        boxNumber: 0,\n        label: \"\"\n      }\n    };\n  },\n  computed: {\n    filteredRemarks: function filteredRemarks() {\n      var _this = this;\n      return this.remarksList.filter(function (newBoxLabel) {\n        return newBoxLabel.toLowerCase().includes(_this.newBoxLabel.toLowerCase());\n      });\n    },\n    sortedBoxes: function sortedBoxes() {\n      return this.newTransaction.boxLabels.sort(function (a, b) {\n        return a.boxNumber - b.boxNumber;\n      });\n    },\n    getItemBoxLabel: function getItemBoxLabel() {\n      var _this2 = this;\n      return function (boxNumber) {\n        var boxLabel = _this2.newTransaction.boxLabels.find(function (label) {\n          return label.boxNumber === boxNumber;\n        });\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    }\n  },\n  mounted: function mounted() {\n    var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    var tooltipList = _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n    console.log(this.isCompany, this.isChainCode, this.isBranchName, this.isTransactionType);\n  },\n  watch: {\n    newTransaction: {\n      handler: function handler(val) {\n        this.validateSubmit();\n      },\n      deep: true\n    },\n    \"newTransaction.items\": function newTransactionItems(val, oldVal) {\n      this.addCategoryBoxLabel();\n    },\n    \"newTransaction.boxLabels\": function newTransactionBoxLabels(val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function newTransactionCompany(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function newTransactionChainCode(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function newTransactionBranchName(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function newTransactionTransactionType(val, oldVal) {\n      this.showButtons();\n    },\n    sortedBoxes: function sortedBoxes(newSortedBoxes) {\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n    }\n  },\n  methods: {\n    restrictChar: function restrictChar($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode == 91 || keyCode == 93) {\n        $event.preventDefault();\n      }\n    },\n    addCategoryBoxLabel: function addCategoryBoxLabel() {\n      var _this3 = this;\n      this.newTransaction.boxLabels.forEach(function (box) {\n        var filteredItems = _this3.newTransaction.items.filter(function (item) {\n          return item.boxNumber === box.boxNumber;\n        });\n        var uniqueCategory = _toConsumableArray(new Set(filteredItems.map(function (item) {\n          return item.category;\n        })));\n        var strCategory = \"\";\n        for (var i = 0; i < uniqueCategory.length; i++) {\n          if (i == 0) strCategory = \" [ \" + uniqueCategory[i];else strCategory = strCategory + \", \" + uniqueCategory[i];\n          if (i == uniqueCategory.length - 1) strCategory = strCategory + \" ]\";\n        }\n        var tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n        box.boxLabel = box.boxLabel + strCategory;\n      });\n    },\n    filterRemarks: function filterRemarks() {\n      var _this4 = this;\n      this.filteredRemarks = this.remarksList.filter(function (newBoxLabel) {\n        return newBoxLabel.toLowerCase().includes(_this4.newBoxLabel.toLowerCase());\n      });\n    },\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      this.files.push(e.target.files[0]);\n      if (!files.length) return;\n      this.createImage(files);\n    },\n    createImage: function createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          var imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n    },\n    removeImage: function removeImage(index) {\n      this.images.splice(index, 1);\n    },\n    clearImage: function clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage: function handleFileUploadImage() {\n      var _this5 = this;\n      console.log(\"image:\", this.files);\n      console.log(\"Transaction ID:\", this.transferTransactionID);\n      var config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      if (this.img_counter < this.files.length) {\n        axiosClient.post(\"/upload\", {\n          image: this.files[this.img_counter],\n          company: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionID: this.transferTransactionID\n        }, config).then(function (response) {\n          console.log(\"Success Upload Image\", response.data);\n          _this5.img_counter++;\n          setTimeout(_this5.handleFileUploadImage, 2000);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    },\n    handleFileUpload: function handleFileUpload(event) {\n      var _this6 = this;\n      console.log(\"File Name: \", event.target.files[0].name);\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var data = new Uint8Array(e.target.result);\n        var workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        var worksheetName = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[worksheetName];\n        var jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        console.log(\"Excel Data\", jsonData);\n        _this6.myData = jsonData;\n        var arrayBox = [];\n        for (var x = 0; x < _this6.myData.length; x++) {\n          _this6.dataArray.push(_this6.myData[x]);\n          arrayBox.push(_this6.myData[x][1]);\n        }\n        console.log(\"Data:\", _this6.dataArray);\n        console.log(\"Import Excel\", _this6.dataArray.length);\n        var filteredArray = arrayBox.filter(function (value, index, self) {\n          return self.indexOf(value) === index;\n        });\n        var tempBoxLabel = [];\n        for (var x = 0; x < filteredArray.length; x++) {\n          tempBoxLabel = {\n            id: x + 1,\n            boxNumber: x + 1,\n            boxLabel: filteredArray[x]\n          };\n          _this6.newTransaction.boxLabels.push(tempBoxLabel);\n          var tempItem = [];\n          if (_this6.newTransaction.boxLabels.length == 0) {\n            tempItem = {\n              id: _this6.newTransaction.boxLabels.length + 1\n            };\n          } else {\n            tempItem = {\n              id: _this6.newTransaction.boxLabels[_this6.newTransaction.boxLabels.length - 1].id + 1\n            };\n          }\n          _this6.newItemInputBox.push(tempItem);\n        }\n        console.log(filteredArray);\n        _this6.counter = 0;\n        _this6.saveItemsExcel();\n      };\n      reader.readAsArrayBuffer(file);\n    },\n    saveItemsExcel: function saveItemsExcel() {\n      var _this7 = this;\n      if (this.counter < this.dataArray.length) {\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient.get(\"/fetchSameItems\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemNo: this.dataArray[this.counter][2]\n          }\n        }).then(function (response) {\n          console.log(\"Data\", response.data);\n          if (response.data.length == 0) {\n            setTimeout(_this7.saveItemsExcel, 2000);\n          }\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n            for (var i = 0; i < _this7.newTransaction.items.length; i++) {\n              if (_this7.newTransaction.items[i].code == response.data[x].ItemNo && _this7.newTransaction.items[i].boxNumber == boxNumber) {\n                _this7.newTransaction.items[i].quantity = parseInt(_this7.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              var tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription,\n                categorybrand: response.data[x].brandNames,\n                quantity: quantity,\n                size: response.data[x].Size,\n                color: response.data[x].Color,\n                boxNumber: parseInt(boxNumber),\n                category: response.data[x].Category\n              };\n              _this7.newTransaction.items.push(tempItem);\n            }\n            console.log(\"Items\", _this7.newTransaction.items);\n            _this7.isAddItem = true;\n            _this7.notifyVue(\"AddItem\", \"bottom\", \"right\");\n            setTimeout(_this7.saveItemsExcel, 2000);\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n      this.counter++;\n    },\n    numberOnly: function numberOnly($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        $event.preventDefault();\n      }\n    },\n    validateSubmit: function validateSubmit() {\n      var uniqueItems = _toConsumableArray(new Set(this.newTransaction.items.map(function (item) {\n        return item.boxNumber;\n      })));\n      var itemsValidation = false;\n      var itemsValidationTemp = false;\n      for (var j in this.newTransaction.boxLabels) {\n        for (var i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (var x in this.newTransaction.items) if (this.newTransaction.items[x].quantity == 0) {\n        itemsValidation = false;\n        var tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title = \"No items should have a quantity with 0.\";\n        tooltip.update();\n        break;\n      }\n      if (!itemsValidationTemp) {\n        var _tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip._config.title = \"Kindly add item/s on every boxes you've added.\";\n        _tooltip.update();\n      }\n      if (!this.newTransaction.company || !this.newTransaction.chainCode || !this.newTransaction.branchName || !this.newTransaction.transactionType) {\n        var _tooltip2 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip2._config.title = \"Complete the form above to enable this button.\";\n        _tooltip2.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        var _tooltip3 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip3._config.title = \"No box added. Kindly add box/es to be able to add item/s.\";\n        _tooltip3.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        var _tooltip4 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip4._config.title = \"No items added. Kindly add item/s for this pull-out request.\";\n        _tooltip4.update();\n      }\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType && this.newTransaction.boxLabels.length > 0 && itemsValidation) {\n        this.isDisabledSubmit = false;\n        var _tooltip5 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip5.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel: function editingBoxLabel(_ref) {\n      var index = _ref.index,\n        value = _ref.value,\n        tempBL = _ref.tempBL;\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns: function enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons: function showButtons() {\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit: function fetchEdit() {\n      var _this8 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        var company = transactionID.split(\"=\")[2];\n        axiosClient.get(\"/fetchEditDraftBranch\", {\n          params: {\n            company: company,\n            plID: id\n          }\n        }).then(function (response) {\n          _this8.newTransaction.company = response.data[0].company;\n          _this8.newTransaction.branchName = response.data[0].branchName;\n          _this8.newTransaction.chainCode = response.data[0].chainCode;\n          _this8.newTransaction.transactionType = response.data[0].transactionType;\n          if (response.data[0].status == \"denied\" || response.data[0].status == \"endorsement\" || response.data[0].status == \"unprocessed\") {\n            _this8.isDenied = false;\n            _this8.isCancel = true;\n          }\n          if (response.data[0].status == \"endorsement\") {\n            _this8.isApproved = true;\n            _this8.isSubmit = false;\n          }\n          axiosClient.get(\"/fetchEditDraftItem\", {\n            params: {\n              company: company,\n              plID: id\n            }\n          }).then(function (response) {\n            for (var x = 0; x < response.data.length; x++) {\n              _this8.newTransaction.items.push(response.data[x]);\n            }\n            var filteredData = _this8.newTransaction.items.filter(function (obj, index, self) {\n              var boxLabel = obj.boxLabel;\n              return self.findIndex(function (o) {\n                return o.boxLabel === boxLabel;\n              }) === index;\n            });\n            filteredData.forEach(function (item) {\n              _this8.newTransaction.boxLabels.push({\n                id: item.boxNumber,\n                boxNumber: item.boxNumber,\n                boxLabel: item.boxLabel\n              });\n              _this8.newItemInputBox.push({\n                id: item.boxNumber\n              });\n            });\n            console.log(\"Box Labels\", filteredData);\n            console.log(\"New Box Labels:\", _this8.newTransaction.boxLabels);\n            console.log(\"New Box Labels:\", _this8.newTransaction.boxLabels.length);\n            if (_this8.newTransaction.company) {\n              _this8.isCompany = false;\n              _this8.isChainCode = false;\n              _this8.fetchCompany();\n              _this8.fetchChainCode();\n            }\n            if (_this8.newTransaction.chainCode) {\n              _this8.isChainCode = false;\n              _this8.isBranchName = false;\n              _this8.fetchChainName();\n              _this8.fetchChainCode();\n            }\n            if (_this8.newTransaction.branchName) {\n              _this8.isBranchName = false;\n              _this8.isTransactionType = false;\n              _this8.fetchChainName();\n            }\n            if (_this8.newTransaction.transactionType) {\n              _this8.isCompany = false;\n              _this8.isChainCode = false;\n              _this8.isBranchName = false;\n              _this8.isTransactionType = false;\n            }\n            if (_this8.newTransaction.items.length) {\n              _this8.isCompany = true;\n              _this8.isChainCode = true;\n              _this8.isBranchName = true;\n              _this8.isTransactionType = true;\n            }\n          }).catch(function (error) {});\n        }).catch(function (error) {});\n      } catch (_unused) {\n        axiosClient.get(\"/fetchPromoBranchInfo\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\")\n          }\n        }).then(function (response) {\n          _this8.newTransaction.company = response.data[0].company;\n          _this8.newTransaction.chainCode = response.data[0].chainCode;\n          _this8.newTransaction.branchName = response.data[0].branchName;\n        }).catch(function (error) {});\n      }\n    },\n    cancelTransaction: function cancelTransaction() {\n      location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n    },\n    updateData: function updateData(updatedData) {},\n    openModal: function openModal(data) {\n      data.boxLabels.forEach(function (box) {\n        var tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n      });\n      console.log(\"Edit: \", data);\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      console.log(\"CLOSE\");\n      this.addCategoryBoxLabel();\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxNumber) {\n      this.validateSubmit();\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== code || item.boxNumber !== boxNumber;\n      });\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n    },\n    fetchItems: function fetchItems() {\n      var _this9 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            _this9.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            _this9.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      } else if (this.newItemInput.length == 0) this.itemCodeList = [];\n    },\n    compareItemCode: function compareItemCode() {\n      var _this10 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        _this10.newItemCode = response.data[0].ItemNo;\n        _this10.newItemDescription = response.data[0].ItemDescription;\n        _this10.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this10.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          _this10.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {});\n      }).catch(function (error) {\n        _this10.missItemCode = 0;\n        !_this10.newItemInput ? true : _this10.isRightCode = true;\n      });\n    },\n    handleQuantity: function handleQuantity(item) {\n      if (!item.quantity) {\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      var notifType = \"\";\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n      this.$notify({\n        component: notification,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this11 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        _this11.companyList = response.data;\n      }).catch(function (error) {});\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this12 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        _this12.chainCodeList = response.data;\n      }).catch(function (error) {});\n      this.isChainCode = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this13 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        _this13.branchNameList = response.data;\n      }).catch(function (error) {});\n      this.isBranchName = false;\n    },\n    addItem: function addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n      console.log(\"clicked nUMBER:\", this.showItemInput);\n    },\n    saveItem: function saveItem(boxNUMBER) {\n      var _this14 = this;\n      var confirmSave = false;\n      this.isNewItem = !this.newItemInput ? true : false;\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemCode: this.newItemCode,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this14.newTransaction.items.length; i++) {\n            if (_this14.newTransaction.items[i].code == response.data[x].ItemNo && _this14.newTransaction.items[i].boxNumber == boxNUMBER) {\n              _this14.newTransaction.items[i].quantity = parseInt(_this14.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription,\n              categorybrand: _this14.newBrand,\n              quantity: 0,\n              size: response.data[x].Size,\n              color: response.data[x].Color,\n              boxNumber: boxNUMBER,\n              category: response.data[x].Category\n            };\n            _this14.newTransaction.items.push(tempItem);\n          }\n          _this14.isRightCode = false;\n          _this14.isItem = false;\n          _this14.isAddItem = true;\n          _this14.newItemInput = \"\";\n          _this14.showItemInput = \"\";\n          _this14.notifyVue(\"AddItem\", \"bottom\", \"right\");\n        }\n      }).catch(function (error) {});\n      console.log(\"Confirm Save: \", confirmSave);\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        tempItem = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1\n        };\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n    },\n    submit: function submit(confirmation) {\n      var _this15 = this;\n      if (confirmation) {\n        try {\n          var uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n          if (sessionStorage.getItem(\"Position\") == \"Agent\" || sessionStorage.getItem(\"Position\") == \"Admin\") {\n            var status = \"endorsement\";\n          } else if (sessionStorage.getItem(\"Position\") == \"Admin\") {\n            var status = \"approved\";\n          } else {\n            var status = \"unprocessed\";\n          }\n          axiosClient.post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: status\n          }).then(function (response) {\n            _this15.transferTransactionID = id;\n            for (var x = 0; x < _this15.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator = _createForOfIteratorHelper(_this15.newTransaction.boxLabels),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var box = _step.value;\n                  if (box.id == _this15.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              axiosClient.post(\"/updatePullOutItemRequest\", {\n                plID: id,\n                companyType: _this15.newTransaction.company,\n                brand: _this15.newTransaction.items[x].categorybrand,\n                boxNumber: _this15.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this15.newTransaction.items[x].code,\n                quantity: _this15.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n                status: status\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n          }).catch(function (error) {});\n        } catch (_unused2) {\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n          axiosClient.post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: \"unprocessed\"\n          }).then(function (response) {\n            _this15.transferTransactionID = response.data.id;\n            for (var x = 0; x < _this15.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator2 = _createForOfIteratorHelper(_this15.newTransaction.boxLabels),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var box = _step2.value;\n                  if (box.id == _this15.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              axiosClient.post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: _this15.newTransaction.company,\n                brand: _this15.newTransaction.items[x].categorybrand,\n                boxNumber: _this15.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this15.newTransaction.items[x].code,\n                quantity: _this15.newTransaction.items[x].quantity,\n                email: sessionStorage.getItem(\"Email\"),\n                status: \"unprocessed\"\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n          }).catch(function (error) {});\n        }\n        setTimeout(this.handleFileUploadImage, 2000);\n      }\n    },\n    draft: function draft(confirmation) {\n      var _this16 = this;\n      console.log(\"Confirmed\");\n      if (confirmation) {\n        console.log(\"Confirmed Data:\", confirmation);\n        try {\n          var uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n          axiosClient.post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            console.log(\"Success Branch Save: \", response.data);\n            for (var x = 0; x < _this16.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator3 = _createForOfIteratorHelper(_this16.newTransaction.boxLabels),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var box = _step3.value;\n                  if (box.id == _this16.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              axiosClient.post(\"/updatePullOutItemRequest\", {\n                plID: id,\n                companyType: _this16.newTransaction.company,\n                brand: _this16.newTransaction.items[x].categorybrand,\n                boxNumber: _this16.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this16.newTransaction.items[x].code,\n                quantity: _this16.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\")\n              }).then(function (response) {\n                console.log(\"Success Items Save: \", response.data);\n              }).catch(function (error) {});\n            }\n            var draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          }).catch(function (error) {});\n        } catch (_unused3) {\n          axiosClient.post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\")\n          }).then(function (response) {\n            for (var x = 0; x < _this16.newTransaction.items.length; x++) {\n              var labelBox = \"\";\n              var _iterator4 = _createForOfIteratorHelper(_this16.newTransaction.boxLabels),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var box = _step4.value;\n                  if (box.id == _this16.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              axiosClient.post(\"/savePullOutItemRequest\", {\n                plID: response.data.id,\n                companyType: _this16.newTransaction.company,\n                brand: _this16.newTransaction.items[x].categorybrand,\n                boxNumber: _this16.newTransaction.items[x].boxNumber,\n                boxLabel: labelBox,\n                itemCode: _this16.newTransaction.items[x].code,\n                quantity: _this16.newTransaction.items[x].quantity,\n                status: \"draft\",\n                email: sessionStorage.getItem(\"Email\")\n              }).then(function (response) {}).catch(function (error) {});\n            }\n            var draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          }).catch(function (error) {});\n        }\n      }\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxNumber) {\n      console.log(\"Items\", code, quantity, boxNumber);\n      this.validateSubmit();\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxNumber === boxNumber;\n      });\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","NotifAddBoxLabel","NotifAddItem","NotifDeleteBoxLabel","NotifDeleteItem","NotifDraftSave","NotifItemChangeBoxLabel","NotifItemQuantity","NotifRenameBoxLabel","NotifSubmitTransaction","Swal","axiosClient","EditBoxLabelModal","TransactionReceiptModal","DraftModal","linkName","ConfirmationSubmitPullOutModal","ConfirmationDraftPullOutModal","axios","isCancel","XLSX","filter","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","transferredData","isCompany","isChainCode","isBranchName","isTransactionType","isShowButton","itemCodeList","isEditBLDisabled","isBoxLabel","isItem","isAddItem","isDisabledSubmit","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","isApproved","isSubmit","hoveredRow","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","newItemCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","transferTransactionID","uniqueItemss","duplicateItemss","isDenied","dataArray","myData","counter","remarksList","images","files","img_counter","strCategory","boxNumber","computed","filteredRemarks","_this","toLowerCase","includes","sortedBoxes","sort","a","b","getItemBoxLabel","_this2","find","mounted","tooltipTriggerList","document","querySelectorAll","tooltipList","_toConsumableArray","map","tooltipTriggerEl","bootstrap","Tooltip","fetchEdit","fetchCompany","window","resolveRouteChange","val","console","log","watch","handler","validateSubmit","deep","newTransactionItems","oldVal","addCategoryBoxLabel","newTransactionBoxLabels","enableDropDowns","newTransactionCompany","showButtons","newTransactionChainCode","newTransactionBranchName","newTransactionTransactionType","newSortedBoxes","set","methods","restrictChar","$event","keyCode","which","preventDefault","_this3","forEach","box","filteredItems","uniqueCategory","Set","category","i","length","tempIndex","indexOf","substr","trim","filterRemarks","_this4","onFileChange","e","target","dataTransfer","push","createImage","vm","index","reader","FileReader","onload","event","imageUrl","result","readAsDataURL","removeImage","splice","clearImage","getElementById","frame","src","handleFileUploadImage","_this5","config","headers","post","image","transactionID","then","response","setTimeout","catch","error","handleFileUpload","_this6","file","Uint8Array","workbook","read","type","worksheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","arrayBox","x","filteredArray","self","tempBoxLabel","id","tempItem","saveItemsExcel","readAsArrayBuffer","_this7","quantity","get","params","ItemNo","flag","code","parseInt","description","ItemDescription","categorybrand","brandNames","size","Size","color","Color","Category","notifyVue","numberOnly","uniqueItems","itemsValidation","itemsValidationTemp","j","tooltip","getInstance","_config","title","update","disable","editingBoxLabel","_ref","tempBL","_this8","uri","location","href","split","plID","status","filteredData","obj","findIndex","o","fetchChainCode","fetchChainName","_unused","userID","sessionStorage","getItem","cancelTransaction","updateData","updatedData","openModal","closeModal","showButton","itemId","hideButton","removeItem","fetchItems","_this9","compareItemCode","_this10","parts","slice","companyType","StyleCode","brandCode","toString","missItemCode","handleQuantity","notify","verticalAlign","horizontalAlign","notification","notifType","$notify","component","props","customValue","_this11","_this12","_this13","addItem","boxNUMBER","saveItem","_this14","confirmSave","ItemCode","cancelItem","addBoxLabel","saveBoxLabel","cancelBoxLabel","submit","confirmation","_this15","email","labelBox","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","f","brand","itemCode","transactionModal","Modal","show","_unused2","_iterator2","_step2","draft","_this16","_iterator3","_step3","draftModal","_unused3","_iterator4","_step4","editBoxLabel","existingItem","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <!-- <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div> -->\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Company\" :disabled=\"isCompany\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Company\"\n              v-model=\"newTransaction.company\"\n              @change=\"\n                fetchChainCode(),\n                  (newTransaction.chainCode = ''),\n                  (newTransaction.branchName = ''),\n                  (newTransaction.transactionType = '')\n              \"\n              :disabled=\"isCompany\"\n            >\n              <el-option\n                v-for=\"option in companyList\"\n                class=\"select-default\"\n                :value=\"option.shortName\"\n                :label=\"option.name + ' (' + option.shortName + ') '\"\n                :key=\"option.id\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.company\" class=\"label-font\"\n              >Company is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Chain Code\" :disabled=\"isChainCode\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Chain Code\"\n              v-model=\"newTransaction.chainCode\"\n              @change=\"\n                fetchChainName(),\n                  (newTransaction.branchName = ''),\n                  (newTransaction.transactionType = '')\n              \"\n              :disabled=\"isChainCode\"\n            >\n              <el-option\n                v-for=\"option in chainCodeList\"\n                class=\"select-default\"\n                :value=\"option.chainCode\"\n                :label=\"option.chainCode\"\n                :key=\"option.chainCode\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.chainCode\" class=\"label-font\"\n              >Chain Code is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Branch Name\" :disabled=\"isBranchName\">\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Branch Name\"\n              v-model=\"newTransaction.branchName\"\n              @change=\"(isTransactionType = false), (newTransaction.transactionType = '')\"\n              :disabled=\"isBranchName\"\n            >\n              <el-option\n                v-for=\"option in branchNameList\"\n                class=\"select-default\"\n                :value=\"option.branchName\"\n                :label=\"option.branchName\"\n                :key=\"option.branchName\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.branchName\" class=\"label-font\"\n              >Branch Name is required.</label\n            >\n          </fg-input>\n        </div>\n        <div class=\"col-sm-3\">\n          <fg-input label=\"Transaction Type\" :disabled=\"isTransactionType\">\n            &nbsp;<i\n              data-bs-toggle=\"tooltip\"\n              class=\"nc-icon nc-alert-circle-i font-weight-bold\"\n            ></i>\n            <el-select\n              class=\"select-default\"\n              size=\"large\"\n              placeholder=\"Select Transaction Type\"\n              v-model=\"newTransaction.transactionType\"\n              :disabled=\"isTransactionType\"\n            >\n              <el-option\n                v-for=\"option in transactionTypeList\"\n                class=\"select-default\"\n                :value=\"option.value\"\n                :label=\"option.label\"\n                :key=\"option.label\"\n              >\n              </el-option>\n            </el-select>\n            <label v-show=\"isValid.transactionType\" class=\"label-font\"\n              >Transaction Type is required.</label\n            >\n          </fg-input>\n        </div>\n      </div>\n      <div class=\"col-sm-12\">\n        <card type=\"plain\">\n          <div class=\"row\">\n            <div class=\"col-sm-12\" v-show=\"isShowButton\">\n              <p-button\n                type=\"default\"\n                link\n                class=\"font-weight-bold\"\n                @click.prevent=\"addBoxLabel()\"\n              >\n                <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n              </p-button>\n              <p-button\n                :disabled=\"isEditBLDisabled\"\n                type=\"default\"\n                link\n                class=\"font-weight-bold\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#editboxlabelModal\"\n                @click=\"openModal(newTransaction)\"\n              >\n                <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n              </p-button>\n              <p-button\n                type=\"default\"\n                outline\n                class=\"font-weight-bold\"\n                onclick=\"document.getElementById('import_items_excel').click()\"\n              >\n                Import Items Excel\n              </p-button>\n              <input\n                id=\"import_items_excel\"\n                type=\"file\"\n                accept=\".xlsx\"\n                style=\"display: none\"\n                @change=\"handleFileUpload\"\n              />\n            </div>\n            <form @submit.prevent=\"saveBoxLabel()\">\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label ( Items Remarks )\"\n                    v-model.trim=\"newBoxLabel\"\n                    class=\"w-100\"\n                    @keypress=\"restrictChar\"\n                    @input=\"filterRemarks\"\n                    list=\"remarks\"\n                  ></fg-input>\n                  <datalist id=\"remarks\">\n                    <option v-for=\"remark in filteredRemarks\" :value=\"remark\">\n                      {{ remark }}\n                    </option>\n                  </datalist>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    native-type=\"submit\"\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n                <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                  >Box Label is empty.</label\n                >\n              </div>\n            </form>\n            <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n              >Box Label is required.</label\n            >\n          </div>\n          <collapse>\n            <collapse-item\n              v-for=\"boxLabel in newTransaction.boxLabels\"\n              :key=\"boxLabel.id\"\n              :title=\"`Box No. ${boxLabel.boxNumber} of ${newTransaction.boxLabels.length} \\xa0\\xa0\\xa0 Box Label: ${boxLabel.boxLabel}`\"\n              name=\"1\"\n              class=\"font-weight-bold\"\n            >\n              <div class=\"row\" v-show=\"isAddItem\">\n                <button\n                  class=\"btn btn-transparent text-left bold-button\"\n                  @click.prevent=\"addItem(boxLabel.boxNumber)\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                </button>\n              </div>\n              <div>\n                <form @submit.prevent=\"saveItem(boxLabel.boxNumber)\">\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.boxNumber\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Item Code\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        native-type=\"submit\"\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n                    <label v-show=\"isRightCode\" class=\"label-font font-weight-normal\"\n                      >Invalid Item Code.</label\n                    >\n                    <label v-show=\"isNewItem\" class=\"label-font font-weight-normal\"\n                      >Item code is empty.</label\n                    >\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </form>\n              </div>\n\n              <div class=\"row\">\n                <table\n                  class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" class=\"text-nowrap\">Item Code</th>\n                      <th scope=\"col\" class=\"text-nowrap\">Description</th>\n                      <th scope=\"col\" class=\"text-nowrap\">Size</th>\n                      <th scope=\"col\" class=\"text-nowrap\">Color</th>\n                      <th scope=\"col\" class=\"text-nowrap\">Category/Brand</th>\n                      <th scope=\"col\" class=\"text-nowrap\">Quantity</th>\n                      <th scope=\"col\" class=\"text-nowrap\">Box Label</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr\n                      v-show=\"boxLabel.boxNumber == item.boxNumber\"\n                      v-for=\"item in newTransaction.items\"\n                      :key=\"item.code\"\n                    >\n                      <th scope=\"row\" class=\"px-3 d-flex\">\n                        <button\n                          class=\"table-delete-button\"\n                          @click.prevent=\"removeItem(item.code, item.boxNumber)\"\n                        >\n                          <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                        </button>\n                        {{ item.code }}\n                      </th>\n                      <td class=\"cell px-3\" style=\"width: 550px\">\n                        {{ item.description }}\n                      </td>\n                      <td class=\"cell px-3\" style=\"width: 10px\">\n                        {{ item.size }}\n                      </td>\n                      <td class=\"cell px-3\" style=\"width: 20px\">\n                        {{ item.color }}\n                      </td>\n                      <td class=\"cell px-3\" style=\"width: 300px\">\n                        {{ item.categorybrand }}\n                      </td>\n                      <!-- <td class=\"cell\" style=\"width: 50px\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                            @keypress=\"numberOnly\"\n                          />\n                        </td> -->\n                      <td class=\"cell\">\n                        <span>\n                          <div class=\"btn-group btn-group-sm d-flex flex-row\">\n                            <p-button\n                              type=\"default\"\n                              round\n                              outline\n                              size=\"xs\"\n                              @click=\"item.quantity > 0 ? item.quantity-- : 0\"\n                            >\n                              <i class=\"nc-icon nc-simple-delete\"></i>\n                            </p-button>\n                            <input\n                              type=\"text\"\n                              @blur=\"handleQuantity(item)\"\n                              v-model=\"item.quantity\"\n                              class=\"table-input-box\"\n                              style=\"width: 75px; text-align: center\"\n                              @keypress=\"numberOnly\"\n                            />\n                            <p-button\n                              type=\"default\"\n                              round\n                              outline\n                              size=\"xs\"\n                              @click=\"item.quantity++\"\n                            >\n                              <i class=\"nc-icon nc-simple-add\"></i>\n                            </p-button>\n                          </div>\n                        </span>\n                      </td>\n                      <td class=\"cell\" style=\"width: 300px\">\n                        <el-select\n                          class=\"table-select-box\"\n                          size=\"large\"\n                          v-model=\"item.boxNumber\"\n                          @change=\"editBoxLabel(item.code, item.quantity, item.boxNumber)\"\n                        >\n                          <el-option\n                            v-for=\"boxLabel in newTransaction.boxLabels\"\n                            class=\"table-select-box\"\n                            :value=\"boxLabel.boxNumber\"\n                            :label=\"boxLabel.boxLabel\"\n                            :key=\"boxLabel.id\"\n                          >\n                          </el-option>\n                        </el-select>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <!-- <div class=\"row\">\n                  <input\n                    placeholder=\"Input Items Remarks\"\n                    v-model=\"remarks\"\n                    @input=\"filterRemarks\"\n                    class=\"input-datalist\"\n                    list=\"remarks\"\n                  />\n                  <datalist id=\"remarks\">\n                    <option v-for=\"remark in filteredRemarks\" :value=\"remark\">\n                      {{ remark }}\n                    </option>\n                  </datalist>\n                </div> -->\n            </collapse-item>\n            <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n          </collapse>\n        </card>\n        <div>\n          <label>Select an image</label><br />\n          <input multiple type=\"file\" ref=\"image\" @change=\"onFileChange\" />\n        </div>\n        <div v-if=\"images\" class=\"row\">\n          <div\n            class=\"col-md-1\"\n            v-for=\"(image, index) in images\"\n            style=\"width: 10%; padding: 5px\"\n          >\n            <button @click=\"removeImage(index)\">Remove image</button>\n            <img :src=\"image\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"text-center\">\n        <button\n          class=\"btn btn-warning btn-fill btn-wd\"\n          data-bs-target=\"#confirmationDraftPullOut\"\n          data-bs-toggle=\"modal\"\n          v-show=\"isDenied\"\n        >\n          Draft\n        </button>\n        <button\n          class=\"btn btn-warning btn-fill btn-wd\"\n          @click.prevent=\"cancelTransaction\"\n          v-show=\"isCancel\"\n        >\n          Cancel\n        </button>\n        <button\n          class=\"btn btn-info btn-fill btn-wd\"\n          @click.prevent=\"submit\"\n          v-show=\"isApproved\"\n        >\n          Approved\n        </button>\n        <span\n          id=\"submitBTN\"\n          class=\"d-inline-block\"\n          tabindex=\"0\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"bottom\"\n        >\n          <button\n            :disabled=\"isDisabledSubmit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            data-bs-target=\"#confirmationSubmitPullOut\"\n            data-bs-toggle=\"modal\"\n            v-show=\"isSubmit\"\n          >\n            Submit\n          </button></span\n        >\n      </div>\n      <div class=\"clearfix\"></div>\n    </div>\n    <EditBoxLabelModal\n      :transferredData=\"transferredData\"\n      :newItemInputBox=\"newItemInputBox\"\n      :remarksList=\"remarksList\"\n      @closeModal=\"closeModal()\"\n      @renameBoxLabel=\"editingBoxLabel($event)\"\n    ></EditBoxLabelModal>\n\n    <TransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n    ></TransactionReceiptModal>\n    <DraftModal :transferTransactionID=\"transferTransactionID\"></DraftModal>\n    <ConfirmationSubmitPullOutModal\n      @confirm=\"submit($event)\"\n    ></ConfirmationSubmitPullOutModal>\n    <ConfirmationDraftPullOutModal\n      @confirm=\"draft($event)\"\n    ></ConfirmationDraftPullOutModal>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport ConfirmationDraftPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationDraftPullOutModal.vue\";\nimport axios, { isCancel } from \"axios\";\nimport * as XLSX from \"xlsx\";\nimport { filter } from \"vue/types/umd\";\n\nVue.use(Table);\nVue.use(TableColumn);\n\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    NotifAddBoxLabel,\n    NotifAddItem,\n    NotifDeleteBoxLabel,\n    NotifDeleteItem,\n    NotifDraftSave,\n    NotifItemChangeBoxLabel,\n    NotifItemQuantity,\n    NotifRenameBoxLabel,\n    NotifSubmitTransaction,\n    EditBoxLabelModal,\n    TransactionReceiptModal,\n    DraftModal,\n    ConfirmationSubmitPullOutModal,\n    ConfirmationDraftPullOutModal,\n  },\n  data() {\n    return {\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n\n      transactionTypeList: [\n        {\n          value: \"CPO Item for Disposal in the Store c/o Supervisor\",\n          label: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        },\n        {\n          value: \"CPO for Transfer to Another Store\",\n          label: \"CPO for Transfer to Another Store\",\n        },\n        {\n          value: \"CPO Back to WH via In-House Service\",\n          label: \"CPO Back to WH via In-House Service\",\n        },\n        {\n          value: \"CPO Back to WH via Chain Distribution Center\",\n          label: \"CPO Back to WH via Chain Distribution Center\",\n        },\n        {\n          value: \"CPO Back to WH via 3rd Party Trucking\",\n          label: \"CPO Back to WH via 3rd Party Trucking\",\n        },\n        {\n          value: \"CPO Back to WH c/o Supervisor\",\n          label: \"CPO Back to WH c/o Supervisor\",\n        },\n        { value: \"Concess Direct Pull-Out\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      remarksList: [\"GOOD\", \"DAMAGED/DIRTY\", \"DISPOSAL\"],\n      images: [],\n      files: [],\n      img_counter: 0,\n      strCategory: {\n        boxNumber: 0,\n        label: \"\",\n      },\n    };\n  },\n  computed: {\n    filteredRemarks() {\n      return this.remarksList.filter((newBoxLabel) => {\n        return newBoxLabel.toLowerCase().includes(this.newBoxLabel.toLowerCase());\n      });\n    },\n    sortedBoxes() {\n      return this.newTransaction.boxLabels.sort((a, b) => a.boxNumber - b.boxNumber);\n    },\n    getItemBoxLabel() {\n      return (boxNumber) => {\n        const boxLabel = this.newTransaction.boxLabels.find(\n          (label) => label.boxNumber === boxNumber\n        );\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    },\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\n    );\n    // this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n    console.log(\n      this.isCompany,\n      this.isChainCode,\n      this.isBranchName,\n      this.isTransactionType\n    );\n  },\n  watch: {\n    newTransaction: {\n      handler(val) {\n        this.validateSubmit();\n      },\n      deep: true,\n    },\n    \"newTransaction.items\": function (val, oldVal) {\n      this.addCategoryBoxLabel();\n    },\n    \"newTransaction.boxLabels\": function (val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function (val, oldVal) {\n      this.showButtons();\n    },\n    sortedBoxes(newSortedBoxes) {\n      // Option 1: Using Vue.set\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n\n      // Option 2: Reassigning the array\n      // this.boxes = newSortedBoxes.slice();\n    },\n  },\n  methods: {\n    restrictChar($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode == 91 || keyCode == 93) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    addCategoryBoxLabel() {\n      this.newTransaction.boxLabels.forEach((box) => {\n        var filteredItems = this.newTransaction.items.filter(\n          (item) => item.boxNumber === box.boxNumber\n        );\n        var uniqueCategory = [...new Set(filteredItems.map((item) => item.category))];\n        let strCategory = \"\";\n        for (let i = 0; i < uniqueCategory.length; i++) {\n          if (i == 0) strCategory = \" [ \" + uniqueCategory[i];\n          else strCategory = strCategory + \", \" + uniqueCategory[i];\n          if (i == uniqueCategory.length - 1) strCategory = strCategory + \" ]\";\n        }\n        let tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n        box.boxLabel = box.boxLabel + strCategory;\n      });\n      // console.log(this.newTransaction.boxLabels);\n    },\n    filterRemarks() {\n      this.filteredRemarks = this.remarksList.filter((newBoxLabel) => {\n        return newBoxLabel.toLowerCase().includes(this.newBoxLabel.toLowerCase());\n      });\n    },\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n\n      this.files.push(e.target.files[0]);\n\n      if (!files.length) return;\n      this.createImage(files);\n    },\n    createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          const imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n    },\n    removeImage(index) {\n      this.images.splice(index, 1);\n    },\n    clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage() {\n      console.log(\"image:\", this.files);\n      console.log(\"Transaction ID:\", this.transferTransactionID);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      if (this.img_counter < this.files.length) {\n        axiosClient\n          .post(\n            \"/upload\",\n            {\n              image: this.files[this.img_counter],\n              company: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionID: this.transferTransactionID,\n            },\n            config\n          )\n          .then((response) => {\n            console.log(\"Success Upload Image\", response.data);\n            this.img_counter++;\n            setTimeout(this.handleFileUploadImage, 2000);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n    handleFileUpload(event) {\n      console.log(\"File Name: \", event.target.files[0].name);\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, { type: \"array\" });\n\n        const worksheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[worksheetName];\n\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        // header: 1 indicates that the first row contains column headers\n\n        // Save the JSON data to a Vue variable\n        console.log(\"Excel Data\", jsonData);\n        this.myData = jsonData;\n        let arrayBox = [];\n        for (var x = 0; x < this.myData.length; x++) {\n          this.dataArray.push(this.myData[x]);\n          arrayBox.push(this.myData[x][1]);\n        }\n\n        console.log(\"Data:\", this.dataArray);\n\n        console.log(\"Import Excel\", this.dataArray.length);\n\n        const filteredArray = arrayBox.filter((value, index, self) => {\n          return self.indexOf(value) === index;\n        });\n\n        let tempBoxLabel = [];\n        for (var x = 0; x < filteredArray.length; x++) {\n          tempBoxLabel = {\n            id: x + 1,\n            boxNumber: x + 1,\n            boxLabel: filteredArray[x],\n          };\n\n          this.newTransaction.boxLabels.push(tempBoxLabel);\n          let tempItem = [];\n\n          if (this.newTransaction.boxLabels.length == 0) {\n            tempItem = {\n              id: this.newTransaction.boxLabels.length + 1,\n            };\n          } else {\n            tempItem = {\n              id:\n                this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1]\n                  .id + 1,\n            };\n          }\n          this.newItemInputBox.push(tempItem);\n        }\n\n        console.log(filteredArray);\n        // for (var x = 0; x < this.dataArray.length; x++) {\n        //   console.log(\"ItemCode\", this.dataArray[x][2]);\n        // }\n        // var y = 0;\n        // while (y < this.dataArray.length) {\n\n        //   y++;\n        // }\n        this.counter = 0;\n        this.saveItemsExcel();\n      };\n\n      reader.readAsArrayBuffer(file);\n    },\n\n    saveItemsExcel() {\n      if (this.counter < this.dataArray.length) {\n        // console.log(\"Data\", this.dataArray[this.counter - 1]);\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient\n          .get(\"/fetchSameItems\", {\n            params: {\n              company: this.newTransaction.company,\n              ItemNo: this.dataArray[this.counter][2],\n            },\n          })\n          .then((response) => {\n            console.log(\"Data\", response.data);\n            if (response.data.length == 0) {\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n            for (var x = 0; x < response.data.length; x++) {\n              var flag = true;\n\n              for (var i = 0; i < this.newTransaction.items.length; i++) {\n                if (\n                  this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                  this.newTransaction.items[i].boxNumber == boxNumber\n                ) {\n                  this.newTransaction.items[i].quantity =\n                    parseInt(this.newTransaction.items[x].quantity) + 1;\n                  flag = false;\n                  break;\n                }\n              }\n              if (flag) {\n                let tempItem = {\n                  code: response.data[x].ItemNo,\n                  description: response.data[x].ItemDescription,\n                  categorybrand: response.data[x].brandNames,\n                  quantity: quantity,\n                  size: response.data[x].Size,\n                  color: response.data[x].Color,\n                  // boxLabel: label,\n                  boxNumber: parseInt(boxNumber),\n                  category: response.data[x].Category,\n                };\n                this.newTransaction.items.push(tempItem);\n              }\n\n              console.log(\"Items\", this.newTransaction.items);\n\n              this.isAddItem = true;\n              this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      this.counter++;\n    },\n\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    validateSubmit() {\n      let uniqueItems = [\n        ...new Set(this.newTransaction.items.map((item) => item.boxNumber)),\n      ];\n      let itemsValidation = false;\n      let itemsValidationTemp = false;\n      for (let j in this.newTransaction.boxLabels) {\n        for (let i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (let x in this.newTransaction.items)\n        if (this.newTransaction.items[x].quantity == 0) {\n          itemsValidation = false;\n          let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n          tooltip._config.title = \"No items should have a quantity with 0.\";\n          tooltip.update();\n          break;\n        }\n      if (!itemsValidationTemp) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title = \"Kindly add item/s on every boxes you've added.\";\n        tooltip.update();\n      }\n      if (\n        !this.newTransaction.company ||\n        !this.newTransaction.chainCode ||\n        !this.newTransaction.branchName ||\n        !this.newTransaction.transactionType\n      ) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title = \"Complete the form above to enable this button.\";\n        tooltip.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title =\n          \"No box added. Kindly add box/es to be able to add item/s.\";\n        tooltip.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title =\n          \"No items added. Kindly add item/s for this pull-out request.\";\n        tooltip.update();\n      }\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType &&\n        this.newTransaction.boxLabels.length > 0 &&\n        itemsValidation\n      ) {\n        this.isDisabledSubmit = false;\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel({ index, value, tempBL }) {\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;\n      else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n        // console.log(this.newTransaction.boxLabels.length);\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons() {\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType\n      ) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n        else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        // console.log(\"ID\", id);\n        // console.log(\"Company\", transactionID.split(\"=\")[2]);\n        var company = transactionID.split(\"=\")[2];\n        axiosClient\n          .get(\"/fetchEditDraftBranch\", {\n            params: {\n              company: company,\n              plID: id,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Edit Branch:\", response.data, this.itemss);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.transactionType = response.data[0].transactionType;\n\n            if (\n              response.data[0].status == \"denied\" ||\n              response.data[0].status == \"endorsement\" ||\n              response.data[0].status == \"unprocessed\"\n            ) {\n              this.isDenied = false;\n              this.isCancel = true;\n            }\n\n            if (response.data[0].status == \"endorsement\") {\n              this.isApproved = true;\n              this.isSubmit = false;\n            }\n\n            axiosClient\n              .get(\"/fetchEditDraftItem\", {\n                params: {\n                  company: company,\n                  plID: id,\n                },\n              })\n              .then((response) => {\n                // console.log(\"Edit Item:\", response.data);\n                for (var x = 0; x < response.data.length; x++) {\n                  this.newTransaction.items.push(response.data[x]);\n                }\n\n                // const idMap = new Map();\n\n                // this.newTransaction.items.forEach((item) => {\n                //   if (!idMap.has(item.id)) {\n                //     console.log(\"Item ID:\", item.id);\n                //     // Unique ID\n                //     idMap.set(item.id, true);\n                //     this.newTransaction.boxLabels.push({\n                //       id: item.boxNumber,\n                //       boxNumber: item.boxNumber,\n                //       boxLabel: item.boxLabel,\n                //     });\n                //     this.newItemInputBox.push({\n                //       id: item.boxNumber,\n                //     });\n                //   }\n                // });\n\n                const filteredData = this.newTransaction.items.filter(\n                  (obj, index, self) => {\n                    const boxLabel = obj.boxLabel;\n                    return self.findIndex((o) => o.boxLabel === boxLabel) === index;\n                  }\n                );\n\n                filteredData.forEach((item) => {\n                  this.newTransaction.boxLabels.push({\n                    id: item.boxNumber,\n                    boxNumber: item.boxNumber,\n                    boxLabel: item.boxLabel,\n                  });\n                  this.newItemInputBox.push({\n                    id: item.boxNumber,\n                  });\n                });\n\n                console.log(\"Box Labels\", filteredData);\n\n                console.log(\"New Box Labels:\", this.newTransaction.boxLabels);\n                console.log(\"New Box Labels:\", this.newTransaction.boxLabels.length);\n\n                // console.log(\"Edit Labels:\", this.newTransaction.boxLabels);\n\n                // console.log(\n                //   \"this.newTransaction.transactionType:\",\n                //   this.newTransaction.transactionType\n                // );\n\n                if (this.newTransaction.company) {\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.fetchCompany();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.chainCode) {\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.fetchChainName();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.branchName) {\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  this.fetchChainName();\n                }\n\n                if (this.newTransaction.transactionType) {\n                  // console.log(\"Yes\", this.isShowButton);\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  // this.isShowButton = true;\n                  // console.log(\"Yes 2\", this.isShowButton);\n                }\n\n                if (this.newTransaction.items.length) {\n                  // console.log(\"Disable\", this.newTransaction.items.length);\n                  this.isCompany = true;\n                  this.isChainCode = true;\n                  this.isBranchName = true;\n                  this.isTransactionType = true;\n                  // this.isShowButton = true;\n                }\n              })\n              .catch((error) => {\n                // console.error(error);\n              });\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      } catch {\n        // console.log(\"No Edit\");\n        //Fetching Promo Info\n        axiosClient\n          .get(\"/fetchPromoBranchInfo\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            // console.log(\"Promo Branch Info:\", response.data);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.branchName = response.data[0].branchName;\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      }\n    },\n    cancelTransaction() {\n      location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n    },\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      // console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      data.boxLabels.forEach((box) => {\n        let tempIndex = box.boxLabel.indexOf(\"[\");\n        if (tempIndex > 0) box.boxLabel = box.boxLabel.substr(0, tempIndex).trim();\n      });\n      console.log(\"Edit: \", data);\n      this.transferredData = data;\n    },\n    closeModal() {\n      console.log(\"CLOSE\");\n      this.addCategoryBoxLabel();\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxNumber) {\n      this.validateSubmit();\n      // console.log(\"New DATAs\", code, boxNumber);\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) => item.code !== code || item.boxNumber !== boxNumber\n      );\n\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      } else if (this.newItemInput.length == 0) this.itemCodeList = [];\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Success Item No:\", response.data);\n          //console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemCode = response.data[0].ItemNo;\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              //console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          !this.newItemInput ? true : (this.isRightCode = true);\n          //console.log(\"Not Equal\");\n          //console.error(error);\n        });\n    },\n    handleQuantity(item) {\n      //console.log(\"Item Quantity\", item.quantity);\n      if (!item.quantity) {\n        //console.log(\"Empty\");\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n\n      this.$notify({\n        component: notification,\n        // icon: \"nc-icon nc-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          //console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      // this.notifyVue(\"bottom\", \"right\");\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      this.isBranchName = false;\n    },\n    addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n      console.log(\"clicked nUMBER:\", this.showItemInput);\n    },\n    saveItem(boxNUMBER) {\n      let confirmSave = false;\n\n      this.isNewItem = !this.newItemInput ? true : false;\n      //console.log(\"item\", this.newItemInput);\n      //console.log(\"condition\", this.isNewItem);\n\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n\n      //console.log(this.newTransaction.items.length);\n      //console.log(\"Items: \", this.newTransaction.items);\n\n      // let str = label.toLowerCase();\n      //console.log(\"Item No:\", this.newItemCode);\n      //console.log(\"Item Description:\", this.newItemDescription);\n      //console.log(\"Style Code:\", this.newStyleCode);\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemCode: this.newItemCode,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Same Item:\", response.data);\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxNumber == boxNUMBER\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription,\n                categorybrand: this.newBrand,\n                quantity: 0,\n                size: response.data[x].Size,\n                color: response.data[x].Color,\n                // boxLabel: label,\n                boxNumber: boxNUMBER,\n                category: response.data[x].Category,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      console.log(\"Confirm Save: \", confirmSave);\n\n      //console.log(\"Items: \", this.newTransaction.items);\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      //console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        tempItem = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n        };\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      // this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      // console.log(\"Console:\", this.newTransaction.boxLabels);\n      //Disable the above select buttons\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n      else this.isEditBLDisabled = false;\n    },\n    submit(confirmation) {\n      if (confirmation) {\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          //console.log(\"Company: \", this.isValid.company);\n\n          //console.log(\"company\", this.newTransaction.company);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n\n          if (\n            sessionStorage.getItem(\"Position\") == \"Agent\" ||\n            sessionStorage.getItem(\"Position\") == \"Admin\"\n          ) {\n            var status = \"endorsement\";\n          } else if (sessionStorage.getItem(\"Position\") == \"Admin\") {\n            var status = \"approved\";\n          } else {\n            var status = \"unprocessed\";\n          }\n          axiosClient\n            .post(\"/updatePullOutBranchRequest\", {\n              id: id,\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              email: sessionStorage.getItem(\"Email\"),\n              status: status,\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n              this.transferTransactionID = id;\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/updatePullOutItemRequest\", {\n                    plID: id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    email: sessionStorage.getItem(\"Email\"),\n                    status: status,\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                    // window.location.href =\n                    //   \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n              transactionModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        } catch {\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          //console.log(\"Company: \", this.isValid.company);\n\n          //console.log(\"company\", this.newTransaction.company);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n          axiosClient\n            .post(\"/savePullOutBranchRequest\", {\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              email: sessionStorage.getItem(\"Email\"),\n              status: \"unprocessed\",\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n              this.transferTransactionID = response.data.id;\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/savePullOutItemRequest\", {\n                    plID: response.data.id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    email: sessionStorage.getItem(\"Email\"),\n                    status: \"unprocessed\",\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n              transactionModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        }\n        setTimeout(this.handleFileUploadImage, 2000);\n      }\n    },\n    draft(confirmation) {\n      console.log(\"Confirmed\");\n      if (confirmation) {\n        console.log(\"Confirmed Data:\", confirmation);\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          axiosClient\n            .post(\"/updatePullOutBranchRequest\", {\n              id: id,\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\"),\n            })\n            .then((response) => {\n              console.log(\"Success Branch Save: \", response.data);\n              //console.log(\"Items Length:\", this.newTransaction.items.length);\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/updatePullOutItemRequest\", {\n                    plID: id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    status: \"draft\",\n                    email: sessionStorage.getItem(\"Email\"),\n                  })\n                  .then((response) => {\n                    console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const draftModal = new bootstrap.Modal(\"#draftModal\");\n              draftModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        } catch {\n          axiosClient\n            .post(\"/savePullOutBranchRequest\", {\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\"),\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/savePullOutItemRequest\", {\n                    plID: response.data.id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    status: \"draft\",\n                    email: sessionStorage.getItem(\"Email\"),\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const draftModal = new bootstrap.Modal(\"#draftModal\");\n              draftModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        }\n      }\n    },\n    editBoxLabel(code, quantity, boxNumber) {\n      console.log(\"Items\", code, quantity, boxNumber);\n      this.validateSubmit();\n      //console.log(\n      //   \"Item Code Edit:\",\n      //   code,\n      //   \" Quantity:\",\n      //   quantity,\n      //   \" Box Number\",\n      //   boxNumber\n      // );\n      //console.log(\" == : \", this.newTransaction.items);\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxNumber === boxNumber\n      );\n\n      //console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      //console.log(\"Unique Items: 1\", uniqueItems);\n      //console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      //console.log(\"Unique Items: Box Number\", uniqueItems[0].boxNumber);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.table-delete-button {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n\n.card-attachment {\n  background-color: #66615b;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmeA,SACAA,QAAA,EACAC,YAAA,EACAC,IAAA,EACAC,OAAA,EACAC,IAAA,EACAC,MAAA,QACA;AAEA,OAAAC,SAAA;AACA,OAAAC,OAAA;AACA,OAAAC,GAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,YAAA;AACA,OAAAC,mBAAA;AACA,OAAAC,eAAA;AACA,OAAAC,cAAA;AACA,OAAAC,uBAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,mBAAA;AACA,OAAAC,sBAAA;AACA,OAAAC,IAAA;AAEA,OAAAC,WAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,uBAAA;AACA,OAAAC,UAAA;AACA,OAAAC,QAAA;AACA,OAAAC,8BAAA;AACA,OAAAC,6BAAA;AACA,OAAAC,KAAA,IAAAC,QAAA;AACA,YAAAC,IAAA;AACA,SAAAC,MAAA;AAEAtB,GAAA,CAAAuB,GAAA,CAAAC,MAAA;AACAxB,GAAA,CAAAuB,GAAA,CAAAE,YAAA;AAEA;EACAC,UAAA,GAAAC,WAAA,OAAAC,eAAA,CAAAD,WAAA,EACAE,WAAA,CAAAC,IAAA,EAAAD,WAAA,GAAAD,eAAA,CAAAD,WAAA,EACAI,WAAA,CAAAD,IAAA,EAAAC,WAAA,GAAAH,eAAA,CAAAD,WAAA,EACAK,OAAA,CAAAF,IAAA,EAAAE,OAAA,GAAAJ,eAAA,CAAAD,WAAA,EACAM,IAAA,CAAAH,IAAA,EAAAG,IAAA,GAAAL,eAAA,CAAAD,WAAA,EACAO,MAAA,CAAAJ,IAAA,EAAAI,MAAA,GAAAN,eAAA,CAAAD,WAAA,EACA9B,MAAA,CAAAiC,IAAA,EAAAjC,MAAA,GAAA+B,eAAA,CAAAD,WAAA,EACAQ,OAAA,CAAAL,IAAA,EAAAK,OAAA,GAAAP,eAAA,CAAAD,WAAA,EACAS,OAAA,CAAAN,IAAA,EAAAM,OAAA,GAAAR,eAAA,CAAAD,WAAA,aACA5B,OAAA,GAAA6B,eAAA,CAAAD,WAAA,eACA7B,SAAA,GAAA8B,eAAA,CAAAD,WAAA,aACAhC,OAAA,GAAAiC,eAAA,CAAAD,WAAA,UACAjC,IAAA,GAAAkC,eAAA,CAAAD,WAAA,kBACAlC,YAAA,GAAAmC,eAAA,CAAAD,WAAA,cACAnC,QAAA,GAAAoC,eAAA,CAAAD,WAAA,UACA/B,IAAA,GAAAgC,eAAA,CAAAD,WAAA,0BACA1B,oBAAA,GAAA2B,eAAA,CAAAD,WAAA,sBACAzB,gBAAA,GAAA0B,eAAA,CAAAD,WAAA,kBACAxB,YAAA,GAAAyB,eAAA,CAAAD,WAAA,yBACAvB,mBAAA,GAAAwB,eAAA,CAAAD,WAAA,qBACAtB,eAAA,GAAAuB,eAAA,CAAAD,WAAA,oBACArB,cAAA,GAAAsB,eAAA,CAAAD,WAAA,6BACApB,uBAAA,GAAAqB,eAAA,CAAAD,WAAA,uBACAnB,iBAAA,GAAAoB,eAAA,CAAAD,WAAA,yBACAlB,mBAAA,GAAAmB,eAAA,CAAAD,WAAA,4BACAjB,sBAAA,GAAAkB,eAAA,CAAAD,WAAA,uBACAd,iBAAA,GAAAe,eAAA,CAAAD,WAAA,6BACAb,uBAAA,GAAAc,eAAA,CAAAD,WAAA,gBACAZ,UAAA,GAAAa,eAAA,CAAAD,WAAA,oCACAV,8BAAA,GAAAW,eAAA,CAAAD,WAAA,mCACAT,6BAAA,GAAAS,WAAA,CACA;EACAU,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,SAAA;MACAC,WAAA;MACAC,YAAA;MACAC,iBAAA;MACAC,YAAA;MACAC,YAAA;MACAC,gBAAA;MACAC,UAAA;MACAC,MAAA;MACAC,SAAA;MACAC,gBAAA;MACAC,aAAA;MACAC,WAAA;MACAC,aAAA;MACAC,cAAA;MACAC,cAAA;QAEAC,OAAA;QACAC,SAAA;QACAC,UAAA;QACAC,eAAA;QACAC,SAAA;QACAC,KAAA;MACA;MACAC,eAAA;MACAC,OAAA;QACAP,OAAA;QACAC,SAAA;QACAC,UAAA;QACAC,eAAA;QACAK,QAAA;QACAC,IAAA;MACA;MACAC,UAAA;MACA7C,QAAA;MACA8C,QAAA;MACAC,UAAA;MAEAC,mBAAA,GACA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,WAAA;MACAC,YAAA;MACAC,QAAA;MACAC,kBAAA;MACAC,YAAA;MACAC,WAAA;MACAC,aAAA;QACAC,SAAA;MACA;MACAC,MAAA;QACAC,OAAA;QACAC,MAAA;QACAC,IAAA;MACA;MACAC,aAAA;MACAC,SAAA;MACAC,WAAA;MACAC,qBAAA;MACAC,YAAA;MACAC,eAAA;MACAC,QAAA;MACAC,SAAA;MACAC,MAAA;MACAC,OAAA;MACAC,WAAA;MACAC,MAAA;MACAC,KAAA;MACAC,WAAA;MACAC,WAAA;QACAC,SAAA;QACA5B,KAAA;MACA;IACA;EACA;EACA6B,QAAA;IACAC,eAAA,WAAAA,gBAAA;MAAA,IAAAC,KAAA;MACA,YAAAR,WAAA,CAAAvE,MAAA,WAAAiD,WAAA;QACA,OAAAA,WAAA,CAAA+B,WAAA,GAAAC,QAAA,CAAAF,KAAA,CAAA9B,WAAA,CAAA+B,WAAA;MACA;IACA;IACAE,WAAA,WAAAA,YAAA;MACA,YAAAlD,cAAA,CAAAK,SAAA,CAAA8C,IAAA,WAAAC,CAAA,EAAAC,CAAA;QAAA,OAAAD,CAAA,CAAAR,SAAA,GAAAS,CAAA,CAAAT,SAAA;MAAA;IACA;IACAU,eAAA,WAAAA,gBAAA;MAAA,IAAAC,MAAA;MACA,iBAAAX,SAAA;QACA,IAAAnC,QAAA,GAAA8C,MAAA,CAAAvD,cAAA,CAAAK,SAAA,CAAAmD,IAAA,CACA,UAAAxC,KAAA;UAAA,OAAAA,KAAA,CAAA4B,SAAA,KAAAA,SAAA;QAAA,CACA;QACA,OAAAnC,QAAA,GAAAA,QAAA,CAAAA,QAAA;MACA;IACA;EACA;EACAgD,OAAA,WAAAA,QAAA;IACA,IAAAC,kBAAA,GAAAC,QAAA,CAAAC,gBAAA;IACA,IAAAC,WAAA,GAAAC,kBAAA,CAAAJ,kBAAA,EAAAK,GAAA,CACA,UAAAC,gBAAA;MAAA,WAAAC,SAAA,CAAAC,OAAA,CAAAF,gBAAA;IAAA,CACA;IAEA,KAAAG,SAAA;IACA,KAAAC,YAAA;IACA,IAAAC,MAAA,CAAAC,kBAAA;MACAD,MAAA,CAAAC,kBAAA;MACAD,MAAA,CAAAC,kBAAA;IACA;IACA5G,QAAA,CAAA6G,GAAA;IACAC,OAAA,CAAAC,GAAA,CACA,KAAAxF,SAAA,EACA,KAAAC,WAAA,EACA,KAAAC,YAAA,EACA,KAAAC,iBACA;EACA;EACAsF,KAAA;IACA1E,cAAA;MACA2E,OAAA,WAAAA,QAAAJ,GAAA;QACA,KAAAK,cAAA;MACA;MACAC,IAAA;IACA;IACA,iCAAAC,oBAAAP,GAAA,EAAAQ,MAAA;MACA,KAAAC,mBAAA;IACA;IACA,qCAAAC,wBAAAV,GAAA,EAAAQ,MAAA;MACA,KAAAG,eAAA;IACA;IACA,mCAAAC,sBAAAZ,GAAA,EAAAQ,MAAA;MACA,KAAAK,WAAA;IACA;IACA,qCAAAC,wBAAAd,GAAA,EAAAQ,MAAA;MACA,KAAAK,WAAA;IACA;IACA,sCAAAE,yBAAAf,GAAA,EAAAQ,MAAA;MACA,KAAAK,WAAA;IACA;IACA,2CAAAG,8BAAAhB,GAAA,EAAAQ,MAAA;MACA,KAAAK,WAAA;IACA;IACAlC,WAAA,WAAAA,YAAAsC,cAAA;MAEA9I,GAAA,CAAA+I,GAAA,mCAAAD,cAAA;IAIA;EACA;EACAE,OAAA;IACAC,YAAA,WAAAA,aAAAC,MAAA;MACA,IAAAC,OAAA,GAAAD,MAAA,CAAAC,OAAA,GAAAD,MAAA,CAAAC,OAAA,GAAAD,MAAA,CAAAE,KAAA;MACA,IAAAD,OAAA,UAAAA,OAAA;QAEAD,MAAA,CAAAG,cAAA;MACA;IACA;IACAf,mBAAA,WAAAA,oBAAA;MAAA,IAAAgB,MAAA;MACA,KAAAhG,cAAA,CAAAK,SAAA,CAAA4F,OAAA,WAAAC,GAAA;QACA,IAAAC,aAAA,GAAAH,MAAA,CAAAhG,cAAA,CAAAM,KAAA,CAAAtC,MAAA,CACA,UAAA0C,IAAA;UAAA,OAAAA,IAAA,CAAAkC,SAAA,KAAAsD,GAAA,CAAAtD,SAAA;QAAA,CACA;QACA,IAAAwD,cAAA,GAAAtC,kBAAA,KAAAuC,GAAA,CAAAF,aAAA,CAAApC,GAAA,WAAArD,IAAA;UAAA,OAAAA,IAAA,CAAA4F,QAAA;QAAA;QACA,IAAA3D,WAAA;QACA,SAAA4D,CAAA,MAAAA,CAAA,GAAAH,cAAA,CAAAI,MAAA,EAAAD,CAAA;UACA,IAAAA,CAAA,OAAA5D,WAAA,WAAAyD,cAAA,CAAAG,CAAA,OACA5D,WAAA,GAAAA,WAAA,UAAAyD,cAAA,CAAAG,CAAA;UACA,IAAAA,CAAA,IAAAH,cAAA,CAAAI,MAAA,MAAA7D,WAAA,GAAAA,WAAA;QACA;QACA,IAAA8D,SAAA,GAAAP,GAAA,CAAAzF,QAAA,CAAAiG,OAAA;QACA,IAAAD,SAAA,MAAAP,GAAA,CAAAzF,QAAA,GAAAyF,GAAA,CAAAzF,QAAA,CAAAkG,MAAA,IAAAF,SAAA,EAAAG,IAAA;QACAV,GAAA,CAAAzF,QAAA,GAAAyF,GAAA,CAAAzF,QAAA,GAAAkC,WAAA;MACA;IAEA;IACAkE,aAAA,WAAAA,cAAA;MAAA,IAAAC,MAAA;MACA,KAAAhE,eAAA,QAAAP,WAAA,CAAAvE,MAAA,WAAAiD,WAAA;QACA,OAAAA,WAAA,CAAA+B,WAAA,GAAAC,QAAA,CAAA6D,MAAA,CAAA7F,WAAA,CAAA+B,WAAA;MACA;IACA;IACA+D,YAAA,WAAAA,aAAAC,CAAA;MACA,IAAAvE,KAAA,GAAAuE,CAAA,CAAAC,MAAA,CAAAxE,KAAA,IAAAuE,CAAA,CAAAE,YAAA,CAAAzE,KAAA;MAEA,KAAAA,KAAA,CAAA0E,IAAA,CAAAH,CAAA,CAAAC,MAAA,CAAAxE,KAAA;MAEA,KAAAA,KAAA,CAAA+D,MAAA;MACA,KAAAY,WAAA,CAAA3E,KAAA;IACA;IACA2E,WAAA,WAAAA,YAAA3E,KAAA;MACA,IAAA4E,EAAA;MACA,SAAAC,KAAA,MAAAA,KAAA,GAAA7E,KAAA,CAAA+D,MAAA,EAAAc,KAAA;QACA,IAAAC,MAAA,OAAAC,UAAA;QACAD,MAAA,CAAAE,MAAA,aAAAC,KAAA;UACA,IAAAC,QAAA,GAAAD,KAAA,CAAAT,MAAA,CAAAW,MAAA;UACAP,EAAA,CAAA7E,MAAA,CAAA2E,IAAA,CAAAQ,QAAA;QACA;QACAJ,MAAA,CAAAM,aAAA,CAAApF,KAAA,CAAA6E,KAAA;MACA;IACA;IACAQ,WAAA,WAAAA,YAAAR,KAAA;MACA,KAAA9E,MAAA,CAAAuF,MAAA,CAAAT,KAAA;IACA;IACAU,UAAA,WAAAA,WAAA;MACArE,QAAA,CAAAsE,cAAA,aAAAlH,KAAA;MACAmH,KAAA,CAAAC,GAAA;IACA;IACAC,qBAAA,WAAAA,sBAAA;MAAA,IAAAC,MAAA;MACA7D,OAAA,CAAAC,GAAA,gBAAAhC,KAAA;MACA+B,OAAA,CAAAC,GAAA,yBAAAzC,qBAAA;MACA,IAAAsG,MAAA;QACAC,OAAA;UACA;QACA;MACA;MAEA,SAAA7F,WAAA,QAAAD,KAAA,CAAA+D,MAAA;QACAlJ,WAAA,CACAkL,IAAA,CACA,WACA;UACAC,KAAA,OAAAhG,KAAA,MAAAC,WAAA;UACAzC,OAAA,OAAAD,cAAA,CAAAC,OAAA;UACAE,UAAA,OAAAH,cAAA,CAAAG,UAAA;UACAuI,aAAA,OAAA1G;QACA,GACAsG,MACA,EACAK,IAAA,WAAAC,QAAA;UACApE,OAAA,CAAAC,GAAA,yBAAAmE,QAAA,CAAA7J,IAAA;UACAsJ,MAAA,CAAA3F,WAAA;UACAmG,UAAA,CAAAR,MAAA,CAAAD,qBAAA;QACA,GACAU,KAAA,WAAAC,KAAA;UACAvE,OAAA,CAAAuE,KAAA,CAAAA,KAAA;QACA;MACA;IACA;IACAC,gBAAA,WAAAA,iBAAAtB,KAAA;MAAA,IAAAuB,MAAA;MACAzE,OAAA,CAAAC,GAAA,gBAAAiD,KAAA,CAAAT,MAAA,CAAAxE,KAAA,IAAAjE,IAAA;MACA,IAAA0K,IAAA,GAAAxB,KAAA,CAAAT,MAAA,CAAAxE,KAAA;MACA,IAAA8E,MAAA,OAAAC,UAAA;MAEAD,MAAA,CAAAE,MAAA,aAAAT,CAAA;QACA,IAAAjI,IAAA,OAAAoK,UAAA,CAAAnC,CAAA,CAAAC,MAAA,CAAAW,MAAA;QACA,IAAAwB,QAAA,GAAArL,IAAA,CAAAsL,IAAA,CAAAtK,IAAA;UAAAuK,IAAA;QAAA;QAEA,IAAAC,aAAA,GAAAH,QAAA,CAAAI,UAAA;QACA,IAAAC,SAAA,GAAAL,QAAA,CAAAM,MAAA,CAAAH,aAAA;QAEA,IAAAI,QAAA,GAAA5L,IAAA,CAAA6L,KAAA,CAAAC,aAAA,CAAAJ,SAAA;UAAAK,MAAA;QAAA;QAIAtF,OAAA,CAAAC,GAAA,eAAAkF,QAAA;QACAV,MAAA,CAAA5G,MAAA,GAAAsH,QAAA;QACA,IAAAI,QAAA;QACA,SAAAC,CAAA,MAAAA,CAAA,GAAAf,MAAA,CAAA5G,MAAA,CAAAmE,MAAA,EAAAwD,CAAA;UACAf,MAAA,CAAA7G,SAAA,CAAA+E,IAAA,CAAA8B,MAAA,CAAA5G,MAAA,CAAA2H,CAAA;UACAD,QAAA,CAAA5C,IAAA,CAAA8B,MAAA,CAAA5G,MAAA,CAAA2H,CAAA;QACA;QAEAxF,OAAA,CAAAC,GAAA,UAAAwE,MAAA,CAAA7G,SAAA;QAEAoC,OAAA,CAAAC,GAAA,iBAAAwE,MAAA,CAAA7G,SAAA,CAAAoE,MAAA;QAEA,IAAAyD,aAAA,GAAAF,QAAA,CAAA/L,MAAA,WAAA+C,KAAA,EAAAuG,KAAA,EAAA4C,IAAA;UACA,OAAAA,IAAA,CAAAxD,OAAA,CAAA3F,KAAA,MAAAuG,KAAA;QACA;QAEA,IAAA6C,YAAA;QACA,SAAAH,CAAA,MAAAA,CAAA,GAAAC,aAAA,CAAAzD,MAAA,EAAAwD,CAAA;UACAG,YAAA;YACAC,EAAA,EAAAJ,CAAA;YACApH,SAAA,EAAAoH,CAAA;YACAvJ,QAAA,EAAAwJ,aAAA,CAAAD,CAAA;UACA;UAEAf,MAAA,CAAAjJ,cAAA,CAAAK,SAAA,CAAA8G,IAAA,CAAAgD,YAAA;UACA,IAAAE,QAAA;UAEA,IAAApB,MAAA,CAAAjJ,cAAA,CAAAK,SAAA,CAAAmG,MAAA;YACA6D,QAAA;cACAD,EAAA,EAAAnB,MAAA,CAAAjJ,cAAA,CAAAK,SAAA,CAAAmG,MAAA;YACA;UACA;YACA6D,QAAA;cACAD,EAAA,EACAnB,MAAA,CAAAjJ,cAAA,CAAAK,SAAA,CAAA4I,MAAA,CAAAjJ,cAAA,CAAAK,SAAA,CAAAmG,MAAA,MACA4D,EAAA;YACA;UACA;UACAnB,MAAA,CAAA1I,eAAA,CAAA4G,IAAA,CAAAkD,QAAA;QACA;QAEA7F,OAAA,CAAAC,GAAA,CAAAwF,aAAA;QASAhB,MAAA,CAAA3G,OAAA;QACA2G,MAAA,CAAAqB,cAAA;MACA;MAEA/C,MAAA,CAAAgD,iBAAA,CAAArB,IAAA;IACA;IAEAoB,cAAA,WAAAA,eAAA;MAAA,IAAAE,MAAA;MACA,SAAAlI,OAAA,QAAAF,SAAA,CAAAoE,MAAA;QAEA,IAAA5D,SAAA,QAAAR,SAAA,MAAAE,OAAA;QACA,IAAAmI,QAAA,QAAArI,SAAA,MAAAE,OAAA;QACAhF,WAAA,CACAoN,GAAA;UACAC,MAAA;YACA1K,OAAA,OAAAD,cAAA,CAAAC,OAAA;YACA2K,MAAA,OAAAxI,SAAA,MAAAE,OAAA;UACA;QACA,GACAqG,IAAA,WAAAC,QAAA;UACApE,OAAA,CAAAC,GAAA,SAAAmE,QAAA,CAAA7J,IAAA;UACA,IAAA6J,QAAA,CAAA7J,IAAA,CAAAyH,MAAA;YACAqC,UAAA,CAAA2B,MAAA,CAAAF,cAAA;UACA;UACA,SAAAN,CAAA,MAAAA,CAAA,GAAApB,QAAA,CAAA7J,IAAA,CAAAyH,MAAA,EAAAwD,CAAA;YACA,IAAAa,IAAA;YAEA,SAAAtE,CAAA,MAAAA,CAAA,GAAAiE,MAAA,CAAAxK,cAAA,CAAAM,KAAA,CAAAkG,MAAA,EAAAD,CAAA;cACA,IACAiE,MAAA,CAAAxK,cAAA,CAAAM,KAAA,CAAAiG,CAAA,EAAAuE,IAAA,IAAAlC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAY,MAAA,IACAJ,MAAA,CAAAxK,cAAA,CAAAM,KAAA,CAAAiG,CAAA,EAAA3D,SAAA,IAAAA,SAAA,EACA;gBACA4H,MAAA,CAAAxK,cAAA,CAAAM,KAAA,CAAAiG,CAAA,EAAAkE,QAAA,GACAM,QAAA,CAAAP,MAAA,CAAAxK,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;gBACAI,IAAA;gBACA;cACA;YACA;YACA,IAAAA,IAAA;cACA,IAAAR,QAAA;gBACAS,IAAA,EAAAlC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAY,MAAA;gBACAI,WAAA,EAAApC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAiB,eAAA;gBACAC,aAAA,EAAAtC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAmB,UAAA;gBACAV,QAAA,EAAAA,QAAA;gBACAW,IAAA,EAAAxC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAqB,IAAA;gBACAC,KAAA,EAAA1C,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAuB,KAAA;gBAEA3I,SAAA,EAAAmI,QAAA,CAAAnI,SAAA;gBACA0D,QAAA,EAAAsC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAwB;cACA;cACAhB,MAAA,CAAAxK,cAAA,CAAAM,KAAA,CAAA6G,IAAA,CAAAkD,QAAA;YACA;YAEA7F,OAAA,CAAAC,GAAA,UAAA+F,MAAA,CAAAxK,cAAA,CAAAM,KAAA;YAEAkK,MAAA,CAAA9K,SAAA;YACA8K,MAAA,CAAAiB,SAAA;YACA5C,UAAA,CAAA2B,MAAA,CAAAF,cAAA;UACA;QACA,GACAxB,KAAA,WAAAC,KAAA;UACAvE,OAAA,CAAAuE,KAAA,CAAAA,KAAA;QACA;MACA;MACA,KAAAzG,OAAA;IACA;IAEAoJ,UAAA,WAAAA,WAAA9F,MAAA;MACA,IAAAC,OAAA,GAAAD,MAAA,CAAAC,OAAA,GAAAD,MAAA,CAAAC,OAAA,GAAAD,MAAA,CAAAE,KAAA;MACA,IAAAD,OAAA,SAAAA,OAAA;QAEAD,MAAA,CAAAG,cAAA;MACA;IACA;IACAnB,cAAA,WAAAA,eAAA;MACA,IAAA+G,WAAA,GAAA7H,kBAAA,CACA,IAAAuC,GAAA,MAAArG,cAAA,CAAAM,KAAA,CAAAyD,GAAA,WAAArD,IAAA;QAAA,OAAAA,IAAA,CAAAkC,SAAA;MAAA,IACA;MACA,IAAAgJ,eAAA;MACA,IAAAC,mBAAA;MACA,SAAAC,CAAA,SAAA9L,cAAA,CAAAK,SAAA;QACA,SAAAkG,CAAA,IAAAoF,WAAA;UACA,IAAAA,WAAA,CAAApF,CAAA,UAAAvG,cAAA,CAAAK,SAAA,CAAAyL,CAAA,EAAA1B,EAAA;YACAyB,mBAAA;YACAD,eAAA;YACA;UACA;YACAA,eAAA;YACAC,mBAAA;UACA;QACA;MACA;MACA,SAAA7B,CAAA,SAAAhK,cAAA,CAAAM,KAAA,EACA,SAAAN,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;QACAmB,eAAA;QACA,IAAAG,OAAA,GAAA9H,SAAA,CAAAC,OAAA,CAAA8H,WAAA;QACAD,OAAA,CAAAE,OAAA,CAAAC,KAAA;QACAH,OAAA,CAAAI,MAAA;QACA;MACA;MACA,KAAAN,mBAAA;QACA,IAAAE,QAAA,GAAA9H,SAAA,CAAAC,OAAA,CAAA8H,WAAA;QACAD,QAAA,CAAAE,OAAA,CAAAC,KAAA;QACAH,QAAA,CAAAI,MAAA;MACA;MACA,IACA,MAAAnM,cAAA,CAAAC,OAAA,IACA,MAAAD,cAAA,CAAAE,SAAA,IACA,MAAAF,cAAA,CAAAG,UAAA,IACA,MAAAH,cAAA,CAAAI,eAAA,EACA;QACA,IAAA2L,SAAA,GAAA9H,SAAA,CAAAC,OAAA,CAAA8H,WAAA;QACAD,SAAA,CAAAE,OAAA,CAAAC,KAAA;QACAH,SAAA,CAAAI,MAAA;MACA,gBAAAnM,cAAA,CAAAK,SAAA,CAAAmG,MAAA;QACA,IAAAuF,SAAA,GAAA9H,SAAA,CAAAC,OAAA,CAAA8H,WAAA;QACAD,SAAA,CAAAE,OAAA,CAAAC,KAAA,GACA;QACAH,SAAA,CAAAI,MAAA;MACA,gBAAAnM,cAAA,CAAAM,KAAA,CAAAkG,MAAA;QACA,IAAAuF,SAAA,GAAA9H,SAAA,CAAAC,OAAA,CAAA8H,WAAA;QACAD,SAAA,CAAAE,OAAA,CAAAC,KAAA,GACA;QACAH,SAAA,CAAAI,MAAA;MACA;MACA,IACA,KAAAnM,cAAA,CAAAC,OAAA,IACA,KAAAD,cAAA,CAAAE,SAAA,IACA,KAAAF,cAAA,CAAAG,UAAA,IACA,KAAAH,cAAA,CAAAI,eAAA,IACA,KAAAJ,cAAA,CAAAK,SAAA,CAAAmG,MAAA,QACAoF,eAAA,EACA;QACA,KAAAjM,gBAAA;QACA,IAAAoM,SAAA,GAAA9H,SAAA,CAAAC,OAAA,CAAA8H,WAAA;QACAD,SAAA,CAAAK,OAAA;MACA,YAAAzM,gBAAA;IACA;IACA0M,eAAA,WAAAA,gBAAAC,IAAA;MAAA,IAAAhF,KAAA,GAAAgF,IAAA,CAAAhF,KAAA;QAAAvG,KAAA,GAAAuL,IAAA,CAAAvL,KAAA;QAAAwL,MAAA,GAAAD,IAAA,CAAAC,MAAA;MACA,IAAAxL,KAAA,OAAAf,cAAA,CAAAK,SAAA,CAAAiH,KAAA,EAAA7G,QAAA,GAAAM,KAAA,MACA,KAAAf,cAAA,CAAAK,SAAA,CAAAiH,KAAA,EAAA7G,QAAA,GAAA8L,MAAA;IACA;IACArH,eAAA,WAAAA,gBAAA;MACA,SAAAlF,cAAA,CAAAK,SAAA,CAAAmG,MAAA;QACA,KAAAvH,SAAA;QACA,KAAAC,WAAA;QACA,KAAAC,YAAA;QACA,KAAAC,iBAAA;QACA,KAAAG,gBAAA;MAEA,YAAAA,gBAAA;IACA;IACA6F,WAAA,WAAAA,YAAA;MACA,IACA,KAAApF,cAAA,CAAAC,OAAA,IACA,KAAAD,cAAA,CAAAE,SAAA,IACA,KAAAF,cAAA,CAAAG,UAAA,IACA,KAAAH,cAAA,CAAAI,eAAA,EACA;QACA,KAAAf,YAAA;QACA,SAAAW,cAAA,CAAAK,SAAA,CAAAmG,MAAA,YAAAjH,gBAAA,aACA,KAAAA,gBAAA;MACA,YAAAF,YAAA;IACA;IACA8E,SAAA,WAAAA,UAAA;MAAA,IAAAqI,MAAA;MACA;QACA,IAAAC,GAAA,GAAApI,MAAA,CAAAqI,QAAA,CAAAC,IAAA;QACA,IAAAjE,aAAA,GAAA+D,GAAA,CAAAG,KAAA;QACA,IAAAxC,EAAA,GAAA1B,aAAA,CAAAkE,KAAA,SAAAA,KAAA;QAGA,IAAA3M,OAAA,GAAAyI,aAAA,CAAAkE,KAAA;QACAtP,WAAA,CACAoN,GAAA;UACAC,MAAA;YACA1K,OAAA,EAAAA,OAAA;YACA4M,IAAA,EAAAzC;UACA;QACA,GACAzB,IAAA,WAAAC,QAAA;UAEA4D,MAAA,CAAAxM,cAAA,CAAAC,OAAA,GAAA2I,QAAA,CAAA7J,IAAA,IAAAkB,OAAA;UACAuM,MAAA,CAAAxM,cAAA,CAAAG,UAAA,GAAAyI,QAAA,CAAA7J,IAAA,IAAAoB,UAAA;UACAqM,MAAA,CAAAxM,cAAA,CAAAE,SAAA,GAAA0I,QAAA,CAAA7J,IAAA,IAAAmB,SAAA;UACAsM,MAAA,CAAAxM,cAAA,CAAAI,eAAA,GAAAwI,QAAA,CAAA7J,IAAA,IAAAqB,eAAA;UAEA,IACAwI,QAAA,CAAA7J,IAAA,IAAA+N,MAAA,gBACAlE,QAAA,CAAA7J,IAAA,IAAA+N,MAAA,qBACAlE,QAAA,CAAA7J,IAAA,IAAA+N,MAAA,mBACA;YACAN,MAAA,CAAArK,QAAA;YACAqK,MAAA,CAAA1O,QAAA;UACA;UAEA,IAAA8K,QAAA,CAAA7J,IAAA,IAAA+N,MAAA;YACAN,MAAA,CAAA7L,UAAA;YACA6L,MAAA,CAAA5L,QAAA;UACA;UAEAtD,WAAA,CACAoN,GAAA;YACAC,MAAA;cACA1K,OAAA,EAAAA,OAAA;cACA4M,IAAA,EAAAzC;YACA;UACA,GACAzB,IAAA,WAAAC,QAAA;YAEA,SAAAoB,CAAA,MAAAA,CAAA,GAAApB,QAAA,CAAA7J,IAAA,CAAAyH,MAAA,EAAAwD,CAAA;cACAwC,MAAA,CAAAxM,cAAA,CAAAM,KAAA,CAAA6G,IAAA,CAAAyB,QAAA,CAAA7J,IAAA,CAAAiL,CAAA;YACA;YAoBA,IAAA+C,YAAA,GAAAP,MAAA,CAAAxM,cAAA,CAAAM,KAAA,CAAAtC,MAAA,CACA,UAAAgP,GAAA,EAAA1F,KAAA,EAAA4C,IAAA;cACA,IAAAzJ,QAAA,GAAAuM,GAAA,CAAAvM,QAAA;cACA,OAAAyJ,IAAA,CAAA+C,SAAA,WAAAC,CAAA;gBAAA,OAAAA,CAAA,CAAAzM,QAAA,KAAAA,QAAA;cAAA,OAAA6G,KAAA;YACA,CACA;YAEAyF,YAAA,CAAA9G,OAAA,WAAAvF,IAAA;cACA8L,MAAA,CAAAxM,cAAA,CAAAK,SAAA,CAAA8G,IAAA;gBACAiD,EAAA,EAAA1J,IAAA,CAAAkC,SAAA;gBACAA,SAAA,EAAAlC,IAAA,CAAAkC,SAAA;gBACAnC,QAAA,EAAAC,IAAA,CAAAD;cACA;cACA+L,MAAA,CAAAjM,eAAA,CAAA4G,IAAA;gBACAiD,EAAA,EAAA1J,IAAA,CAAAkC;cACA;YACA;YAEA4B,OAAA,CAAAC,GAAA,eAAAsI,YAAA;YAEAvI,OAAA,CAAAC,GAAA,oBAAA+H,MAAA,CAAAxM,cAAA,CAAAK,SAAA;YACAmE,OAAA,CAAAC,GAAA,oBAAA+H,MAAA,CAAAxM,cAAA,CAAAK,SAAA,CAAAmG,MAAA;YASA,IAAAgG,MAAA,CAAAxM,cAAA,CAAAC,OAAA;cACAuM,MAAA,CAAAvN,SAAA;cACAuN,MAAA,CAAAtN,WAAA;cACAsN,MAAA,CAAApI,YAAA;cACAoI,MAAA,CAAAW,cAAA;YACA;YAEA,IAAAX,MAAA,CAAAxM,cAAA,CAAAE,SAAA;cACAsM,MAAA,CAAAtN,WAAA;cACAsN,MAAA,CAAArN,YAAA;cACAqN,MAAA,CAAAY,cAAA;cACAZ,MAAA,CAAAW,cAAA;YACA;YAEA,IAAAX,MAAA,CAAAxM,cAAA,CAAAG,UAAA;cACAqM,MAAA,CAAArN,YAAA;cACAqN,MAAA,CAAApN,iBAAA;cACAoN,MAAA,CAAAY,cAAA;YACA;YAEA,IAAAZ,MAAA,CAAAxM,cAAA,CAAAI,eAAA;cAEAoM,MAAA,CAAAvN,SAAA;cACAuN,MAAA,CAAAtN,WAAA;cACAsN,MAAA,CAAArN,YAAA;cACAqN,MAAA,CAAApN,iBAAA;YAGA;YAEA,IAAAoN,MAAA,CAAAxM,cAAA,CAAAM,KAAA,CAAAkG,MAAA;cAEAgG,MAAA,CAAAvN,SAAA;cACAuN,MAAA,CAAAtN,WAAA;cACAsN,MAAA,CAAArN,YAAA;cACAqN,MAAA,CAAApN,iBAAA;YAEA;UACA,GACA0J,KAAA,WAAAC,KAAA,GAEA;QACA,GACAD,KAAA,WAAAC,KAAA,GAEA;MACA,SAAAsE,OAAA;QAGA/P,WAAA,CACAoN,GAAA;UACAC,MAAA;YACA2C,MAAA,EAAAC,cAAA,CAAAC,OAAA;UACA;QACA,GACA7E,IAAA,WAAAC,QAAA;UAEA4D,MAAA,CAAAxM,cAAA,CAAAC,OAAA,GAAA2I,QAAA,CAAA7J,IAAA,IAAAkB,OAAA;UACAuM,MAAA,CAAAxM,cAAA,CAAAE,SAAA,GAAA0I,QAAA,CAAA7J,IAAA,IAAAmB,SAAA;UACAsM,MAAA,CAAAxM,cAAA,CAAAG,UAAA,GAAAyI,QAAA,CAAA7J,IAAA,IAAAoB,UAAA;QACA,GACA2I,KAAA,WAAAC,KAAA,GAEA;MACA;IACA;IACA0E,iBAAA,WAAAA,kBAAA;MACAf,QAAA,CAAAC,IAAA;IACA;IACAe,UAAA,WAAAA,WAAAC,WAAA,GAGA;IACAC,SAAA,WAAAA,UAAA7O,IAAA;MACAA,IAAA,CAAAsB,SAAA,CAAA4F,OAAA,WAAAC,GAAA;QACA,IAAAO,SAAA,GAAAP,GAAA,CAAAzF,QAAA,CAAAiG,OAAA;QACA,IAAAD,SAAA,MAAAP,GAAA,CAAAzF,QAAA,GAAAyF,GAAA,CAAAzF,QAAA,CAAAkG,MAAA,IAAAF,SAAA,EAAAG,IAAA;MACA;MACApC,OAAA,CAAAC,GAAA,WAAA1F,IAAA;MACA,KAAAC,eAAA,GAAAD,IAAA;IACA;IACA8O,UAAA,WAAAA,WAAA;MACArJ,OAAA,CAAAC,GAAA;MACA,KAAAO,mBAAA;MACA,KAAAhG,eAAA;IACA;IACA8O,UAAA,WAAAA,WAAAC,MAAA;MACA,KAAAlN,UAAA,GAAAkN,MAAA;IACA;IACAC,UAAA,WAAAA,WAAAD,MAAA;MACA,KAAAlN,UAAA;IACA;IACAoN,UAAA,WAAAA,WAAAnD,IAAA,EAAAlI,SAAA;MACA,KAAAgC,cAAA;MAEA,KAAA5E,cAAA,CAAAM,KAAA,QAAAN,cAAA,CAAAM,KAAA,CAAAtC,MAAA,CACA,UAAA0C,IAAA;QAAA,OAAAA,IAAA,CAAAoK,IAAA,KAAAA,IAAA,IAAApK,IAAA,CAAAkC,SAAA,KAAAA,SAAA;MAAA,CACA;MAEA,KAAA6I,SAAA;IAKA;IACAyC,UAAA,WAAAA,WAAA;MAAA,IAAAC,MAAA;MACA,SAAAjN,YAAA,CAAAsF,MAAA;QACA,IACA,KAAAxG,cAAA,CAAAC,OAAA,cACA,KAAAD,cAAA,CAAAC,OAAA,aACA,KAAAD,cAAA,CAAAC,OAAA,WACA;UACA3C,WAAA,CACAoN,GAAA;YACAC,MAAA;cACAC,MAAA,OAAA1J;YACA;UACA,GACAyH,IAAA,WAAAC,QAAA;YAEAuF,MAAA,CAAA7O,YAAA,GAAAsJ,QAAA,CAAA7J,IAAA;UAQA,GACA+J,KAAA,WAAAC,KAAA,GAEA;QACA;UACAzL,WAAA,CACAoN,GAAA;YACAC,MAAA;cACAC,MAAA,OAAA1J;YACA;UACA,GACAyH,IAAA,WAAAC,QAAA;YAEAuF,MAAA,CAAA7O,YAAA,GAAAsJ,QAAA,CAAA7J,IAAA;UAQA,GACA+J,KAAA,WAAAC,KAAA,GAEA;QACA;MACA,gBAAA7H,YAAA,CAAAsF,MAAA,YAAAlH,YAAA;IACA;IACA8O,eAAA,WAAAA,gBAAA;MAAA,IAAAC,OAAA;MACA,IAAAtN,KAAA,QAAAG,YAAA;MACA,IAAAH,KAAA,CAAA2F,OAAA;QACA,IAAA4H,KAAA,GAAAvN,KAAA,CAAA6L,KAAA;QACA,KAAA1L,YAAA,GAAAoN,KAAA;MACA;MAEA,SAAApN,YAAA,CAAAsF,MAAA;QAEA,KAAAtF,YAAA,QAAAA,YAAA,CAAAqN,KAAA;MACA,QAEA;MACAjR,WAAA,CACAoN,GAAA;QACAC,MAAA;UACA6D,WAAA,OAAAxO,cAAA,CAAAC,OAAA;UACA2K,MAAA,OAAA1J;QACA;MACA,GACAyH,IAAA,WAAAC,QAAA;QAGAyF,OAAA,CAAA/M,WAAA,GAAAsH,QAAA,CAAA7J,IAAA,IAAA6L,MAAA;QACAyD,OAAA,CAAAjN,kBAAA,GAAAwH,QAAA,CAAA7J,IAAA,IAAAkM,eAAA;QACAoD,OAAA,CAAAhN,YAAA,GAAAuH,QAAA,CAAA7J,IAAA,IAAA0P,SAAA;QAKA,IAAAC,SAAA,GAAA9F,QAAA,CAAA7J,IAAA,IAAA6L,MAAA,CAAA+D,QAAA,GAAAhI,MAAA;QAIArJ,WAAA,CACAoN,GAAA;UACAC,MAAA;YACA6D,WAAA,EAAAH,OAAA,CAAArO,cAAA,CAAAC,OAAA;YACAyO,SAAA,EAAAA;UACA;QACA,GACA/F,IAAA,WAAAC,QAAA;UAEAyF,OAAA,CAAAlN,QAAA,GAAAyH,QAAA,CAAA7J,IAAA,IAAAoM,UAAA;QAQA,GACArC,KAAA,WAAAC,KAAA,GAEA;MACA,GACAD,KAAA,WAAAC,KAAA;QACAsF,OAAA,CAAAO,YAAA;QACA,CAAAP,OAAA,CAAAnN,YAAA,UAAAmN,OAAA,CAAAtM,WAAA;MAGA;IACA;IACA8M,cAAA,WAAAA,eAAAnO,IAAA;MAEA,KAAAA,IAAA,CAAA+J,QAAA;QAEA/J,IAAA,CAAA+J,QAAA;MACA;MACA,KAAAgB,SAAA;IACA;IACAA,SAAA,WAAAA,UAAAqD,MAAA,EAAAC,aAAA,EAAAC,eAAA;MACA,IAAAC,YAAA;MACA,IAAAC,SAAA;MAEA,IAAAJ,MAAA;QACAG,YAAA,GAAArS,gBAAA;QACAsS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAApS,YAAA;QACAqS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAAnS,mBAAA;QACAoS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAAlS,eAAA;QACAmS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAAjS,cAAA;QACAkS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAAhS,uBAAA;QACAiS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAA/R,iBAAA;QACAgS,SAAA;MACA,WAAAJ,MAAA;QACAG,YAAA,GAAA9R,mBAAA;QACA+R,SAAA;MACA;QACAD,YAAA,GAAA7R,sBAAA;QACA8R,SAAA;MACA;MAEA,KAAAC,OAAA;QACAC,SAAA,EAAAH,YAAA;QAEAD,eAAA,EAAAA,eAAA;QACAD,aAAA,EAAAA,aAAA;QACAzF,IAAA,EAAA4F,SAAA;QACAG,KAAA;UACAC,WAAA;QACA;MACA;IACA;IACAlL,YAAA,WAAAA,aAAA;MAAA,IAAAmL,OAAA;MACAjS,WAAA,CACAoN,GAAA,kBACA/B,IAAA,WAAAC,QAAA;QAEA2G,OAAA,CAAA1P,WAAA,GAAA+I,QAAA,CAAA7J,IAAA;MACA,GACA+J,KAAA,WAAAC,KAAA,GAEA;IACA;IACAoE,cAAA,WAAAA,eAAA;MAAA,IAAAqC,OAAA;MACAlS,WAAA,CACAoN,GAAA;QACAC,MAAA;UACA1K,OAAA,OAAAD,cAAA,CAAAC;QACA;MACA,GACA0I,IAAA,WAAAC,QAAA;QAEA4G,OAAA,CAAA1P,aAAA,GAAA8I,QAAA,CAAA7J,IAAA;MACA,GACA+J,KAAA,WAAAC,KAAA,GAEA;MAEA,KAAA7J,WAAA;IACA;IACAkO,cAAA,WAAAA,eAAA;MAAA,IAAAqC,OAAA;MACAnS,WAAA,CACAoN,GAAA;QACAC,MAAA;UACAzK,SAAA,OAAAF,cAAA,CAAAE;QACA;MACA,GACAyI,IAAA,WAAAC,QAAA;QAEA6G,OAAA,CAAA1P,cAAA,GAAA6I,QAAA,CAAA7J,IAAA;MACA,GACA+J,KAAA,WAAAC,KAAA,GAEA;MACA,KAAA5J,YAAA;IACA;IACAuQ,OAAA,WAAAA,QAAAC,SAAA;MACA,KAAAlQ,MAAA;MACA,KAAAC,SAAA;MACA,KAAAE,aAAA,GAAA+P,SAAA;MACAnL,OAAA,CAAAC,GAAA,yBAAA7E,aAAA;IACA;IACAgQ,QAAA,WAAAA,SAAAD,SAAA;MAAA,IAAAE,OAAA;MACA,IAAAC,WAAA;MAEA,KAAAhO,SAAA,SAAAZ,YAAA;MAIA,SAAAY,SAAA;QACA,KAAAC,WAAA;QACA;MACA;MASAzE,WAAA,CACAoN,GAAA;QACAC,MAAA;UACA1K,OAAA,OAAAD,cAAA,CAAAC,OAAA;UACA8P,QAAA,OAAAzO,WAAA;UACA2J,eAAA,OAAA7J,kBAAA;UACAqN,SAAA,OAAApN;QACA;MACA,GACAsH,IAAA,WAAAC,QAAA;QAEA,SAAAoB,CAAA,MAAAA,CAAA,GAAApB,QAAA,CAAA7J,IAAA,CAAAyH,MAAA,EAAAwD,CAAA;UACA,IAAAa,IAAA;UAEA,SAAAtE,CAAA,MAAAA,CAAA,GAAAsJ,OAAA,CAAA7P,cAAA,CAAAM,KAAA,CAAAkG,MAAA,EAAAD,CAAA;YACA,IACAsJ,OAAA,CAAA7P,cAAA,CAAAM,KAAA,CAAAiG,CAAA,EAAAuE,IAAA,IAAAlC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAY,MAAA,IACAiF,OAAA,CAAA7P,cAAA,CAAAM,KAAA,CAAAiG,CAAA,EAAA3D,SAAA,IAAA+M,SAAA,EACA;cACAE,OAAA,CAAA7P,cAAA,CAAAM,KAAA,CAAAiG,CAAA,EAAAkE,QAAA,GACAM,QAAA,CAAA8E,OAAA,CAAA7P,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;cACAI,IAAA;cACA;YACA;UACA;UACA,IAAAA,IAAA;YACA,IAAAR,QAAA;cACAS,IAAA,EAAAlC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAY,MAAA;cACAI,WAAA,EAAApC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAiB,eAAA;cACAC,aAAA,EAAA2E,OAAA,CAAA1O,QAAA;cACAsJ,QAAA;cACAW,IAAA,EAAAxC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAqB,IAAA;cACAC,KAAA,EAAA1C,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAuB,KAAA;cAEA3I,SAAA,EAAA+M,SAAA;cACArJ,QAAA,EAAAsC,QAAA,CAAA7J,IAAA,CAAAiL,CAAA,EAAAwB;YACA;YACAqE,OAAA,CAAA7P,cAAA,CAAAM,KAAA,CAAA6G,IAAA,CAAAkD,QAAA;UACA;UACAwF,OAAA,CAAA9N,WAAA;UACA8N,OAAA,CAAApQ,MAAA;UACAoQ,OAAA,CAAAnQ,SAAA;UACAmQ,OAAA,CAAA3O,YAAA;UACA2O,OAAA,CAAAjQ,aAAA;UACAiQ,OAAA,CAAApE,SAAA;QACA;MACA,GACA3C,KAAA,WAAAC,KAAA,GAEA;MACAvE,OAAA,CAAAC,GAAA,mBAAAqL,WAAA;IAKA;IACAE,UAAA,WAAAA,WAAA;MACA,KAAAjO,WAAA;MACA,KAAAD,SAAA;MACA,KAAArC,MAAA;MACA,KAAAC,SAAA;MACA,KAAAE,aAAA;MACA,KAAAsB,YAAA;IACA;IACA+O,WAAA,WAAAA,YAAA;MACA,KAAAzQ,UAAA;MACA,KAAAD,gBAAA;IACA;IACA2Q,YAAA,WAAAA,aAAA;MACA,KAAArO,aAAA,SAAAZ,WAAA;MAEA,SAAAY,aAAA;QACA;MACA;MACA,KAAArC,UAAA;MAEA,IAAA2K,YAAA;MAEA,SAAAnK,cAAA,CAAAK,SAAA,CAAAmG,MAAA;QACA2D,YAAA;UACAC,EAAA,OAAApK,cAAA,CAAAK,SAAA,CAAAmG,MAAA;UACA5D,SAAA,OAAA5C,cAAA,CAAAK,SAAA,CAAAmG,MAAA;UACA/F,QAAA,OAAAQ;QACA;MACA;QACAkJ,YAAA;UACAC,EAAA,EACA,KAAApK,cAAA,CAAAK,SAAA,MAAAL,cAAA,CAAAK,SAAA,CAAAmG,MAAA,MAAA4D,EAAA,GACA;UACAxH,SAAA,OAAA5C,cAAA,CAAAK,SAAA,CAAAmG,MAAA;UACA/F,QAAA,OAAAQ;QACA;MACA;MAEA,IAAAoJ,QAAA;MAEA,SAAArK,cAAA,CAAAK,SAAA,CAAAmG,MAAA;QACA6D,QAAA;UACAD,EAAA,OAAApK,cAAA,CAAAK,SAAA,CAAAmG,MAAA;QACA;MACA;QACA6D,QAAA;UACAD,EAAA,EACA,KAAApK,cAAA,CAAAK,SAAA,MAAAL,cAAA,CAAAK,SAAA,CAAAmG,MAAA,MAAA4D,EAAA,GACA;QACA;MACA;MAEA,KAAApK,cAAA,CAAAK,SAAA,CAAA8G,IAAA,CAAAgD,YAAA;MACA,KAAA5J,eAAA,CAAA4G,IAAA,CAAAkD,QAAA;MACA,KAAApJ,WAAA;MAIA,KAAAhC,SAAA;MACA,KAAAC,WAAA;MACA,KAAAC,YAAA;MACA,KAAAC,iBAAA;MACA,KAAAqM,SAAA;MACA,KAAAlM,gBAAA;IACA;IACA4Q,cAAA,WAAAA,eAAA;MACA,KAAAtO,aAAA;MACA,KAAArC,UAAA;MACA,KAAAyB,WAAA;MACA,SAAAjB,cAAA,CAAAK,SAAA,CAAAmG,MAAA,YAAAjH,gBAAA,aACA,KAAAA,gBAAA;IACA;IACA6Q,MAAA,WAAAA,OAAAC,YAAA;MAAA,IAAAC,OAAA;MACA,IAAAD,YAAA;QACA;UACA,IAAA5D,GAAA,GAAApI,MAAA,CAAAqI,QAAA,CAAAC,IAAA;UACA,IAAAjE,aAAA,GAAA+D,GAAA,CAAAG,KAAA;UACA,IAAAxC,EAAA,GAAA1B,aAAA,CAAAkE,KAAA,SAAAA,KAAA;UAEA,KAAApM,OAAA,CAAAP,OAAA,SAAAD,cAAA,CAAAC,OAAA;UACA,KAAAO,OAAA,CAAAN,SAAA,SAAAF,cAAA,CAAAE,SAAA;UACA,KAAAM,OAAA,CAAAL,UAAA,SAAAH,cAAA,CAAAG,UAAA;UACA,KAAAK,OAAA,CAAAJ,eAAA,SAAAJ,cAAA,CAAAI,eAAA,GACA,OACA;UACA,KAAAI,OAAA,CAAAC,QAAA,SAAAT,cAAA,CAAAK,SAAA,CAAAmG,MAAA;UACA,KAAAhG,OAAA,CAAAE,IAAA,SAAAV,cAAA,CAAAM,KAAA,CAAAkG,MAAA;UAOA,IACA+G,cAAA,CAAAC,OAAA,2BACAD,cAAA,CAAAC,OAAA,yBACA;YACA,IAAAV,MAAA;UACA,WAAAS,cAAA,CAAAC,OAAA;YACA,IAAAV,MAAA;UACA;YACA,IAAAA,MAAA;UACA;UACAxP,WAAA,CACAkL,IAAA;YACA4B,EAAA,EAAAA,EAAA;YACAlK,SAAA,OAAAF,cAAA,CAAAE,SAAA;YACAsO,WAAA,OAAAxO,cAAA,CAAAC,OAAA;YACAE,UAAA,OAAAH,cAAA,CAAAG,UAAA;YACAC,eAAA,OAAAJ,cAAA,CAAAI,eAAA;YACAmQ,KAAA,EAAAhD,cAAA,CAAAC,OAAA;YACAV,MAAA,EAAAA;UACA,GACAnE,IAAA,WAAAC,QAAA;YAEA0H,OAAA,CAAAtO,qBAAA,GAAAoI,EAAA;YAEA,SAAAJ,CAAA,MAAAA,CAAA,GAAAsG,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAAkG,MAAA,EAAAwD,CAAA;cACA,IAAAwG,QAAA;cAAA,IAAAC,SAAA,GAAAC,0BAAA,CACAJ,OAAA,CAAAtQ,cAAA,CAAAK,SAAA;gBAAAsQ,KAAA;cAAA;gBAAA,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA;kBAAA,IAAA5K,GAAA,GAAAyK,KAAA,CAAA5P,KAAA;kBACA,IAAAmF,GAAA,CAAAkE,EAAA,IAAAkG,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;oBACA4N,QAAA,GAAAtK,GAAA,CAAAzF,QAAA;kBACA;gBACA;cAAA,SAAAsQ,GAAA;gBAAAN,SAAA,CAAAzJ,CAAA,CAAA+J,GAAA;cAAA;gBAAAN,SAAA,CAAAO,CAAA;cAAA;cACA1T,WAAA,CACAkL,IAAA;gBACAqE,IAAA,EAAAzC,EAAA;gBACAoE,WAAA,EAAA8B,OAAA,CAAAtQ,cAAA,CAAAC,OAAA;gBACAgR,KAAA,EAAAX,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAkB,aAAA;gBACAtI,SAAA,EAAA0N,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;gBACAnC,QAAA,EAAA+P,QAAA;gBACAU,QAAA,EAAAZ,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAc,IAAA;gBACAL,QAAA,EAAA6F,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;gBACA8F,KAAA,EAAAhD,cAAA,CAAAC,OAAA;gBACAV,MAAA,EAAAA;cACA,GACAnE,IAAA,WAAAC,QAAA,GAIA,GACAE,KAAA,WAAAC,KAAA,GAEA;YACA;YACA,IAAAoI,gBAAA,OAAAlN,SAAA,CAAAmN,KAAA;YACAD,gBAAA,CAAAE,IAAA;UACA,GACAvI,KAAA,WAAAC,KAAA,GAEA;QACA,SAAAuI,QAAA;UACA,KAAA9Q,OAAA,CAAAP,OAAA,SAAAD,cAAA,CAAAC,OAAA;UACA,KAAAO,OAAA,CAAAN,SAAA,SAAAF,cAAA,CAAAE,SAAA;UACA,KAAAM,OAAA,CAAAL,UAAA,SAAAH,cAAA,CAAAG,UAAA;UACA,KAAAK,OAAA,CAAAJ,eAAA,SAAAJ,cAAA,CAAAI,eAAA,GACA,OACA;UACA,KAAAI,OAAA,CAAAC,QAAA,SAAAT,cAAA,CAAAK,SAAA,CAAAmG,MAAA;UACA,KAAAhG,OAAA,CAAAE,IAAA,SAAAV,cAAA,CAAAM,KAAA,CAAAkG,MAAA;UAMAlJ,WAAA,CACAkL,IAAA;YACAtI,SAAA,OAAAF,cAAA,CAAAE,SAAA;YACAsO,WAAA,OAAAxO,cAAA,CAAAC,OAAA;YACAE,UAAA,OAAAH,cAAA,CAAAG,UAAA;YACAC,eAAA,OAAAJ,cAAA,CAAAI,eAAA;YACAmQ,KAAA,EAAAhD,cAAA,CAAAC,OAAA;YACAV,MAAA;UACA,GACAnE,IAAA,WAAAC,QAAA;YAEA0H,OAAA,CAAAtO,qBAAA,GAAA4G,QAAA,CAAA7J,IAAA,CAAAqL,EAAA;YAEA,SAAAJ,CAAA,MAAAA,CAAA,GAAAsG,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAAkG,MAAA,EAAAwD,CAAA;cACA,IAAAwG,QAAA;cAAA,IAAAe,UAAA,GAAAb,0BAAA,CACAJ,OAAA,CAAAtQ,cAAA,CAAAK,SAAA;gBAAAmR,MAAA;cAAA;gBAAA,KAAAD,UAAA,CAAAX,CAAA,MAAAY,MAAA,GAAAD,UAAA,CAAAV,CAAA,IAAAC,IAAA;kBAAA,IAAA5K,GAAA,GAAAsL,MAAA,CAAAzQ,KAAA;kBACA,IAAAmF,GAAA,CAAAkE,EAAA,IAAAkG,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;oBACA4N,QAAA,GAAAtK,GAAA,CAAAzF,QAAA;kBACA;gBACA;cAAA,SAAAsQ,GAAA;gBAAAQ,UAAA,CAAAvK,CAAA,CAAA+J,GAAA;cAAA;gBAAAQ,UAAA,CAAAP,CAAA;cAAA;cACA1T,WAAA,CACAkL,IAAA;gBACAqE,IAAA,EAAAjE,QAAA,CAAA7J,IAAA,CAAAqL,EAAA;gBACAoE,WAAA,EAAA8B,OAAA,CAAAtQ,cAAA,CAAAC,OAAA;gBACAgR,KAAA,EAAAX,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAkB,aAAA;gBACAtI,SAAA,EAAA0N,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;gBACAnC,QAAA,EAAA+P,QAAA;gBACAU,QAAA,EAAAZ,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAc,IAAA;gBACAL,QAAA,EAAA6F,OAAA,CAAAtQ,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;gBACA8F,KAAA,EAAAhD,cAAA,CAAAC,OAAA;gBACAV,MAAA;cACA,GACAnE,IAAA,WAAAC,QAAA,GAEA,GACAE,KAAA,WAAAC,KAAA,GAEA;YACA;YACA,IAAAoI,gBAAA,OAAAlN,SAAA,CAAAmN,KAAA;YACAD,gBAAA,CAAAE,IAAA;UACA,GACAvI,KAAA,WAAAC,KAAA,GAEA;QACA;QACAF,UAAA,MAAAT,qBAAA;MACA;IACA;IACAqJ,KAAA,WAAAA,MAAApB,YAAA;MAAA,IAAAqB,OAAA;MACAlN,OAAA,CAAAC,GAAA;MACA,IAAA4L,YAAA;QACA7L,OAAA,CAAAC,GAAA,oBAAA4L,YAAA;QACA;UACA,IAAA5D,GAAA,GAAApI,MAAA,CAAAqI,QAAA,CAAAC,IAAA;UACA,IAAAjE,aAAA,GAAA+D,GAAA,CAAAG,KAAA;UACA,IAAAxC,EAAA,GAAA1B,aAAA,CAAAkE,KAAA,SAAAA,KAAA;UAEAtP,WAAA,CACAkL,IAAA;YACA4B,EAAA,EAAAA,EAAA;YACAlK,SAAA,OAAAF,cAAA,CAAAE,SAAA;YACAsO,WAAA,OAAAxO,cAAA,CAAAC,OAAA;YACAE,UAAA,OAAAH,cAAA,CAAAG,UAAA;YACAC,eAAA,OAAAJ,cAAA,CAAAI,eAAA;YACA0M,MAAA;YACAyD,KAAA,EAAAhD,cAAA,CAAAC,OAAA;UACA,GACA7E,IAAA,WAAAC,QAAA;YACApE,OAAA,CAAAC,GAAA,0BAAAmE,QAAA,CAAA7J,IAAA;YAEA,SAAAiL,CAAA,MAAAA,CAAA,GAAA0H,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAAkG,MAAA,EAAAwD,CAAA;cACA,IAAAwG,QAAA;cAAA,IAAAmB,UAAA,GAAAjB,0BAAA,CACAgB,OAAA,CAAA1R,cAAA,CAAAK,SAAA;gBAAAuR,MAAA;cAAA;gBAAA,KAAAD,UAAA,CAAAf,CAAA,MAAAgB,MAAA,GAAAD,UAAA,CAAAd,CAAA,IAAAC,IAAA;kBAAA,IAAA5K,GAAA,GAAA0L,MAAA,CAAA7Q,KAAA;kBACA,IAAAmF,GAAA,CAAAkE,EAAA,IAAAsH,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;oBACA4N,QAAA,GAAAtK,GAAA,CAAAzF,QAAA;kBACA;gBACA;cAAA,SAAAsQ,GAAA;gBAAAY,UAAA,CAAA3K,CAAA,CAAA+J,GAAA;cAAA;gBAAAY,UAAA,CAAAX,CAAA;cAAA;cACA1T,WAAA,CACAkL,IAAA;gBACAqE,IAAA,EAAAzC,EAAA;gBACAoE,WAAA,EAAAkD,OAAA,CAAA1R,cAAA,CAAAC,OAAA;gBACAgR,KAAA,EAAAS,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAkB,aAAA;gBACAtI,SAAA,EAAA8O,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;gBACAnC,QAAA,EAAA+P,QAAA;gBACAU,QAAA,EAAAQ,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAc,IAAA;gBACAL,QAAA,EAAAiH,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;gBACAqC,MAAA;gBACAyD,KAAA,EAAAhD,cAAA,CAAAC,OAAA;cACA,GACA7E,IAAA,WAAAC,QAAA;gBACApE,OAAA,CAAAC,GAAA,yBAAAmE,QAAA,CAAA7J,IAAA;cACA,GACA+J,KAAA,WAAAC,KAAA,GAEA;YACA;YACA,IAAA8I,UAAA,OAAA5N,SAAA,CAAAmN,KAAA;YACAS,UAAA,CAAAR,IAAA;UACA,GACAvI,KAAA,WAAAC,KAAA,GAEA;QACA,SAAA+I,QAAA;UACAxU,WAAA,CACAkL,IAAA;YACAtI,SAAA,OAAAF,cAAA,CAAAE,SAAA;YACAsO,WAAA,OAAAxO,cAAA,CAAAC,OAAA;YACAE,UAAA,OAAAH,cAAA,CAAAG,UAAA;YACAC,eAAA,OAAAJ,cAAA,CAAAI,eAAA;YACA0M,MAAA;YACAyD,KAAA,EAAAhD,cAAA,CAAAC,OAAA;UACA,GACA7E,IAAA,WAAAC,QAAA;YAGA,SAAAoB,CAAA,MAAAA,CAAA,GAAA0H,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAAkG,MAAA,EAAAwD,CAAA;cACA,IAAAwG,QAAA;cAAA,IAAAuB,UAAA,GAAArB,0BAAA,CACAgB,OAAA,CAAA1R,cAAA,CAAAK,SAAA;gBAAA2R,MAAA;cAAA;gBAAA,KAAAD,UAAA,CAAAnB,CAAA,MAAAoB,MAAA,GAAAD,UAAA,CAAAlB,CAAA,IAAAC,IAAA;kBAAA,IAAA5K,GAAA,GAAA8L,MAAA,CAAAjR,KAAA;kBACA,IAAAmF,GAAA,CAAAkE,EAAA,IAAAsH,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;oBACA4N,QAAA,GAAAtK,GAAA,CAAAzF,QAAA;kBACA;gBACA;cAAA,SAAAsQ,GAAA;gBAAAgB,UAAA,CAAA/K,CAAA,CAAA+J,GAAA;cAAA;gBAAAgB,UAAA,CAAAf,CAAA;cAAA;cACA1T,WAAA,CACAkL,IAAA;gBACAqE,IAAA,EAAAjE,QAAA,CAAA7J,IAAA,CAAAqL,EAAA;gBACAoE,WAAA,EAAAkD,OAAA,CAAA1R,cAAA,CAAAC,OAAA;gBACAgR,KAAA,EAAAS,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAkB,aAAA;gBACAtI,SAAA,EAAA8O,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAApH,SAAA;gBACAnC,QAAA,EAAA+P,QAAA;gBACAU,QAAA,EAAAQ,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAc,IAAA;gBACAL,QAAA,EAAAiH,OAAA,CAAA1R,cAAA,CAAAM,KAAA,CAAA0J,CAAA,EAAAS,QAAA;gBACAqC,MAAA;gBACAyD,KAAA,EAAAhD,cAAA,CAAAC,OAAA;cACA,GACA7E,IAAA,WAAAC,QAAA,GAEA,GACAE,KAAA,WAAAC,KAAA,GAEA;YACA;YACA,IAAA8I,UAAA,OAAA5N,SAAA,CAAAmN,KAAA;YACAS,UAAA,CAAAR,IAAA;UACA,GACAvI,KAAA,WAAAC,KAAA,GAEA;QACA;MACA;IACA;IACAkJ,YAAA,WAAAA,aAAAnH,IAAA,EAAAL,QAAA,EAAA7H,SAAA;MACA4B,OAAA,CAAAC,GAAA,UAAAqG,IAAA,EAAAL,QAAA,EAAA7H,SAAA;MACA,KAAAgC,cAAA;MAUA,IAAAuB,aAAA,QAAAnG,cAAA,CAAAM,KAAA,CAAAtC,MAAA,CACA,UAAA0C,IAAA;QAAA,OAAAA,IAAA,CAAAoK,IAAA,KAAAA,IAAA,IAAApK,IAAA,CAAAkC,SAAA,KAAAA,SAAA;MAAA,CACA;MAGA,IAAA+I,WAAA;MACAxF,aAAA,CAAAF,OAAA,WAAAvF,IAAA;QACA,IAAAwR,YAAA,GAAAvG,WAAA,CAAAnI,IAAA,CACA,UAAA2O,UAAA;UAAA,OAAAA,UAAA,CAAArH,IAAA,KAAApK,IAAA,CAAAoK,IAAA;QAAA,CACA;QACA,IAAAoH,YAAA;UACAA,YAAA,CAAAzH,QAAA,IAAA/J,IAAA,CAAA+J,QAAA;QACA;UACAkB,WAAA,CAAAxE,IAAA,CAAAiL,aAAA,KAAA1R,IAAA;QACA;MACA;MAMA,KAAAV,cAAA,CAAAM,KAAA,QAAAN,cAAA,CAAAM,KAAA,CAAAtC,MAAA,CACA,UAAA0C,IAAA;QAAA,OACAA,IAAA,CAAAoK,IAAA,KAAAa,WAAA,IAAAb,IAAA,IAAApK,IAAA,CAAAkC,SAAA,KAAA+I,WAAA,IAAA/I,SAAA;MAAA,CACA;MACA,KAAA5C,cAAA,CAAAM,KAAA,CAAA6G,IAAA,CAAAwE,WAAA;MACA,KAAAF,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}