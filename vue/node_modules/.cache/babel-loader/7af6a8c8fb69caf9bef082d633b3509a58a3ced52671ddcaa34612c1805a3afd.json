{"ast":null,"code":"import _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport UnprocessModal from \"./ModalPullOut/UnprocessModal.vue\";\nimport Vue from \"vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PPagination: PPagination,\n    UnprocessModal: UnprocessModal\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData: function pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData: function queriedData() {\n      var _this = this;\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      var result = this.tableData.filter(function (row) {\n        var isIncluded = false;\n        var _iterator = _createForOfIteratorHelper(_this.propsToSearch),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            var rowValue = row[key].toString().toLowerCase();\n            if (rowValue.includes && rowValue.includes(_this.searchQuery.toLowerCase())) {\n              isIncluded = true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      transactionData: \"\",\n      itemData: \"\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"plID\", \"branchName\", \"transactionType\", \"date\", \"time\"],\n      tableColumns: [{\n        prop: \"plID\",\n        label: \"TRANSACTION NO.\",\n        minWidth: 120\n      }, {\n        prop: \"branchName\",\n        label: \"BRANCH NAME\",\n        minWidth: 200\n      }, {\n        prop: \"transactionType\",\n        label: \"TRANSACTION TYPE\",\n        minWidth: 170\n      }, {\n        prop: \"date\",\n        label: \"DATE\",\n        minWidth: 130\n      }, {\n        prop: \"time\",\n        label: \"TIME\",\n        minWidth: 120\n      }, {\n        prop: \"SLA_count\",\n        label: \"Remaining  Days\",\n        minWidth: 150\n      }, {\n        prop: \"SLA_status\",\n        label: \"SLA Status\",\n        minWidth: 100\n      }],\n      headerCellStyle: {\n        fontSize: \"10px\"\n      },\n      cellStyle: {\n        fontSize: \"12px\"\n      },\n      tableData: [],\n      listBoxLabel: []\n    };\n  },\n  methods: {\n    openModal: function openModal(data) {\n      var _this2 = this;\n      this.transactionData = data;\n      console.log(\"Transferred Data:\", this.transactionData);\n      axiosClient.get(\"/fetchPullOutRequestItem\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\"),\n          plID: this.transactionData.plID\n        }\n      }).then(function (response) {\n        _this2.itemData = response.data[0];\n        _this2.listBoxLabel = [];\n        _this2.itemData.forEach(function (obj) {\n          var index = _this2.listBoxLabel.findIndex(function (savedObj) {\n            return savedObj.boxNumber === obj.boxNumber;\n          });\n          if (index === -1) {\n            _this2.listBoxLabel.push({\n              boxNumber: obj.boxNumber,\n              boxLabel: obj.boxLabel\n            });\n          }\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    closeModal: function closeModal() {\n      this.transactionData = \"\";\n    },\n    fetchData: function fetchData() {\n      var _this3 = this;\n      axiosClient.get(\"/fetchPullOutRequestUnprocessed\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\")\n        }\n      }).then(function (response) {\n        console.log(\"Pull Out Request Unprocessed\", response.data);\n        _this3.tableData = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["UnprocessModal","Vue","PPagination","axiosClient","use","_Table","_TableColumn","_Select","_Option","components","mounted","fetchData","computed","pagedData","tableData","slice","from","to","queriedData","_this","searchQuery","pagination","total","length","result","filter","row","isIncluded","_iterator","_createForOfIteratorHelper","propsToSearch","_step","s","n","done","key","value","rowValue","toString","toLowerCase","includes","err","e","f","highBound","perPage","currentPage","data","transactionData","itemData","perPageOptions","tableColumns","prop","label","minWidth","headerCellStyle","fontSize","cellStyle","listBoxLabel","methods","openModal","_this2","console","log","get","params","company","sessionStorage","getItem","plID","then","response","forEach","obj","index","findIndex","savedObj","boxNumber","push","boxLabel","catch","error","closeModal","_this3"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/UnprocessedPullOut.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <div class=\"row mx-1 justify-content-between\">\n      <div class=\"col-4 pl\">\n        <fg-input\n          class=\"input-md\"\n          placeholder=\"Search\"\n          v-model=\"searchQuery\"\n          addon-right-icon=\"nc-icon nc-zoom-split\"\n        >\n        </fg-input>\n      </div>\n      <div class=\"col-1 pr\">\n        <el-select\n          class=\"select-default\"\n          v-model=\"pagination.perPage\"\n          placeholder=\"Per page\"\n        >\n          <el-option\n            class=\"select-default\"\n            v-for=\"item in pagination.perPageOptions\"\n            :key=\"item\"\n            :label=\"item\"\n            :value=\"item\"\n          >\n          </el-option>\n        </el-select>\n      </div>\n    </div> -->\n    <div class=\"row mx-2\">\n      <el-table\n        class=\"p-0\"\n        :data=\"queriedData\"\n        border\n        max-height=\"650\"\n        style=\"width: 100%\"\n        :header-cell-style=\"headerCellStyle\"\n        :cell-style=\"cellStyle\"\n      >\n        <!-- Index Column -->\n        <el-table-column>\n          <template slot=\"header\" slot-scope=\"scope\">\n            <fg-input\n              class=\"input-md\"\n              placeholder=\"Search\"\n              v-model=\"searchQuery\"\n              addon-right-icon=\"nc-icon nc-zoom-split\"\n              style=\"width: 50%\"\n            >\n            </fg-input>\n          </template>\n          <el-table-column label=\"\" class=\"el-table-mod\" width=\"40\">\n            <template slot-scope=\"scope\">\n              <span>{{\n                (pagination.currentPage - 1) * pagination.perPage + scope.$index + 1\n              }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column\n            class=\"el-table-mod text-break\"\n            v-for=\"(n, index) in 6\"\n            :key=\"index\"\n            :min-width=\"tableColumns[index].minWidth\"\n            :prop=\"tableColumns[index].prop\"\n            :label=\"tableColumns[index].label\"\n            header-align=\"center\"\n          >\n          </el-table-column>\n        </el-table-column>\n        <el-table-column fixed=\"right\" width=\"170\">\n          <template slot=\"header\" slot-scope=\"scope\">\n            <el-select\n              class=\"select-default\"\n              v-model=\"pagination.perPage\"\n              placeholder=\"Per page\"\n            >\n              <el-option\n                class=\"select-default\"\n                v-for=\"item in pagination.perPageOptions\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              >\n              </el-option>\n            </el-select>\n          </template>\n          <el-table-column\n            :key=\"tableColumns[6].label\"\n            :width=\"tableColumns[6].minWidth\"\n            :prop=\"tableColumns[6].prop\"\n            :label=\"tableColumns[6].label\"\n            header-align=\"center\"\n          >\n          </el-table-column>\n          <el-table-column\n            :width=\"70\"\n            class-name=\"td-actions el-table-mod\"\n            header-align=\"center\"\n            label=\"Details\"\n          >\n            <template slot-scope=\"props\">\n              <div class=\"container d-flex justify-content-center\">\n                <p-button\n                  type=\"info\"\n                  size=\"sm\"\n                  icon\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#unprocessModal\"\n                  @click=\"openModal(props.row)\"\n                >\n                  <i class=\"nc-icon nc-single-copy-04\"></i>\n                </p-button>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"d-flex justify-content-end pagination-info\">\n      <p class=\"category ml-2\">\n        Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n      </p>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n      <p-pagination\n        class=\"pull-right\"\n        v-model=\"pagination.currentPage\"\n        :per-page=\"pagination.perPage\"\n        :total=\"pagination.total\"\n      >\n      </p-pagination>\n    </div>\n    <UnprocessModal\n      :transactionData=\"transactionData\"\n      :itemData=\"itemData\"\n      :listBoxLabel=\"listBoxLabel\"\n      @closeModal=\"closeModal\"\n    ></UnprocessModal>\n  </div>\n</template>\n<script>\nimport UnprocessModal from \"./ModalPullOut/UnprocessModal.vue\";\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  components: {\n    PPagination,\n    UnprocessModal,\n  },\n  mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      transactionData: \"\",\n      itemData: \"\",\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"plID\", \"branchName\", \"transactionType\", \"date\", \"time\"],\n      tableColumns: [\n        {\n          prop: \"plID\",\n          label: \"TRANSACTION NO.\",\n          minWidth: 120,\n        },\n        {\n          prop: \"branchName\",\n          label: \"BRANCH NAME\",\n          minWidth: 200,\n        },\n        {\n          prop: \"transactionType\",\n          label: \"TRANSACTION TYPE\",\n          minWidth: 170,\n        },\n        {\n          prop: \"date\",\n          label: \"DATE\",\n          minWidth: 130,\n        },\n        {\n          prop: \"time\",\n          label: \"TIME\",\n          minWidth: 120,\n        },\n        {\n          prop: \"SLA_count\",\n          label: \"Remaining  Days\",\n          minWidth: 150,\n        },\n        {\n          prop: \"SLA_status\",\n          label: \"SLA Status\",\n          minWidth: 100,\n        },\n      ],\n      headerCellStyle: {\n        fontSize: \"10px\",\n      },\n      cellStyle: {\n        fontSize: \"12px\",\n      },\n      tableData: [],\n      listBoxLabel: [],\n    };\n  },\n  methods: {\n    openModal(data) {\n      this.transactionData = data;\n      console.log(\"Transferred Data:\", this.transactionData);\n      axiosClient\n        .get(\"/fetchPullOutRequestItem\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            plID: this.transactionData.plID,\n          },\n        })\n        .then((response) => {\n          // console.log(\"Success Item Response:\", response.data);\n          this.itemData = response.data[0];\n          this.listBoxLabel = [];\n          this.itemData.forEach((obj) => {\n            const index = this.listBoxLabel.findIndex(\n              (savedObj) => savedObj.boxNumber === obj.boxNumber\n            );\n            if (index === -1) {\n              this.listBoxLabel.push({\n                boxNumber: obj.boxNumber,\n                boxLabel: obj.boxLabel,\n              });\n              // console.log(`Object ${obj.boxNumber} saved.`);\n            }\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    closeModal() {\n      this.transactionData = \"\";\n    },\n    fetchData() {\n      axiosClient\n        .get(\"/fetchPullOutRequestUnprocessed\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n          },\n        })\n        .then((response) => {\n          console.log(\"Pull Out Request Unprocessed\", response.data);\n          this.tableData = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      // axiosClient\n      //   .post(\"/SLACountNBFI\")\n      //   .then((response) => {\n      //     console.log(\"SLA COUNT\", response.data);\n      //     // this.tableData = response.data;\n      //   })\n      //   .catch((error) => {\n      //     console.error(error);\n      //   });\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n// .el-table .td-actions {\n//   button.btn {\n//     margin-right: 5px;\n//   }\n// }\n// .p-margin {\n//   margin-bottom: 0px;\n// }\n// .pl {\n//   padding-left: 4px;\n//   padding-right: 0px;\n// }\n// .pr {\n//   padding-left: 0px;\n//   padding-right: 4px;\n// }\n.el-table-mod {\n  padding-top: 10px !important;\n  padding-bottom: 10px !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}