{"ast":null,"code":"import _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport Vue from \"vue\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PButton: PButton,\n    PPagination: PPagination\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData: function pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData: function queriedData() {\n      var _this = this;\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      var result = this.tableData.filter(function (row) {\n        var isIncluded = false;\n        var _iterator = _createForOfIteratorHelper(_this.propsToSearch),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            var rowValue = row[key].toString().toLowerCase();\n            if (rowValue.includes && rowValue.includes(_this.searchQuery.toLowerCase())) {\n              isIncluded = true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      positions: [{\n        position: \"Admin\"\n      }, {\n        position: \"Agent\"\n      }, {\n        position: \"User\"\n      }],\n      pagination: {\n        perPage: 8,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"name\", \"email\", \"position\", \"status\", \"creation_date\", \"creation_time\"],\n      tableColumns: [{\n        prop: \"name\",\n        label: \"Name\",\n        minWidth: 200\n      }, {\n        prop: \"email\",\n        label: \"Email\",\n        minWidth: 200\n      }, {\n        prop: \"position\",\n        label: \"Position\",\n        minWidth: 200\n      }, {\n        prop: \"status\",\n        label: \"Status\",\n        minWidth: 100\n      }, {\n        prop: \"creation_date\",\n        label: \"Creation Date\",\n        minWidth: 200\n      }, {\n        prop: \"updated_date\",\n        label: \"Updated Date\",\n        minWidth: 200\n      }],\n      tableData: []\n    };\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n      axiosClient.get(\"/fetchUsersMaintenance\").then(function (response) {\n        console.log(\"Users: \", response.data);\n        _this2.tableData = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    handleEdit: function handleEdit(index, row) {\n      alert(\"Your want to edit \".concat(row.branchName));\n    },\n    handleDelete: function handleDelete(index, row) {\n      var indexToDelete = this.tableData.findIndex(function (tableRow) {\n        return tableRow.id === row.id;\n      });\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Vue","PButton","PPagination","axiosClient","use","_Table","_TableColumn","_Select","_Option","components","mounted","fetchData","computed","pagedData","tableData","slice","from","to","queriedData","_this","searchQuery","pagination","total","length","result","filter","row","isIncluded","_iterator","_createForOfIteratorHelper","propsToSearch","_step","s","n","done","key","value","rowValue","toString","toLowerCase","includes","err","e","f","highBound","perPage","currentPage","data","positions","position","perPageOptions","tableColumns","prop","label","minWidth","methods","_this2","get","then","response","console","log","catch","error","handleEdit","index","alert","concat","branchName","handleDelete","indexToDelete","findIndex","tableRow","id","splice"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/UserMaintenance.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row mx-1\">\n      <div class=\"col-12 px-1\">\n        <fg-input\n          class=\"input-md\"\n          placeholder=\"Search\"\n          v-model=\"searchQuery\"\n          addon-right-icon=\"nc-icon nc-zoom-split\"\n        >\n        </fg-input>\n      </div>\n    </div>\n    <div class=\"row mx-2\">\n      <el-table class=\"table-striped\" :data=\"queriedData\" border style=\"width: 100%\">\n        <el-table-column\n          v-for=\"column in tableColumns\"\n          :key=\"column.label\"\n          :min-width=\"column.minWidth\"\n          :prop=\"column.prop\"\n          :label=\"column.label\"\n        >\n        </el-table-column>\n        <el-table-column :min-width=\"120\" class-name=\"td-actions\" label=\"\">\n          <template slot-scope=\"props\">\n            <p-button\n              type=\"success\"\n              size=\"sm\"\n              icon\n              @click=\"handleEdit(props.$index, props.row)\"\n            >\n              <i class=\"fa fa-edit\"></i>\n            </p-button>\n            <p-button\n              type=\"danger\"\n              size=\"sm\"\n              icon\n              @click=\"handleDelete(props.$index, props.row)\"\n            >\n              <i class=\"fa fa-times\"></i>\n            </p-button>\n          </template>\n        </el-table-column>\n        <el-table-column :min-width=\"150\" class-name=\"td-actions\" label=\"\">\n          <template slot-scope=\"props\">\n            <!-- <label>{{ props.row.position }}</label> -->\n\n            <el-select class=\"table-select-box\" size=\"large\" v-model=\"props.row.position\">\n              <el-option\n                v-for=\"position in positions\"\n                class=\"table-select-box\"\n                :value=\"position.position\"\n                :label=\"position.position\"\n                :key=\"position.position\"\n              >\n              </el-option>\n            </el-select>\n\n            <!-- <p-button\n              type=\"success\"\n              size=\"sm\"\n              icon\n              @click=\"handleEdit(props.$index, props.row)\"\n            >\n              <i class=\"fa fa-edit\"></i>\n            </p-button>\n            <p-button\n              type=\"danger\"\n              size=\"sm\"\n              icon\n              @click=\"handleDelete(props.$index, props.row)\"\n            >\n              <i class=\"fa fa-times\"></i>\n            </p-button> -->\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"d-flex justify-content-end pagination-info\">\n      <p class=\"category p-margin\">\n        Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n      </p>\n    </div>\n    <div class=\"nav-center\">\n      <p-pagination\n        class=\"pull-right\"\n        v-model=\"pagination.currentPage\"\n        :per-page=\"pagination.perPage\"\n        :total=\"pagination.total\"\n      >\n      </p-pagination>\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\n\nexport default {\n  components: {\n    PButton,\n    PPagination,\n  },\n  mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      positions: [{ position: \"Admin\" }, { position: \"Agent\" }, { position: \"User\" }],\n      pagination: {\n        perPage: 8,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\n        \"name\",\n        \"email\",\n        \"position\",\n        \"status\",\n        \"creation_date\",\n        \"creation_time\",\n      ],\n      tableColumns: [\n        {\n          prop: \"name\",\n          label: \"Name\",\n          minWidth: 200,\n        },\n        {\n          prop: \"email\",\n          label: \"Email\",\n          minWidth: 200,\n        },\n        {\n          prop: \"position\",\n          label: \"Position\",\n          minWidth: 200,\n        },\n\n        {\n          prop: \"status\",\n          label: \"Status\",\n          minWidth: 100,\n        },\n        {\n          prop: \"creation_date\",\n          label: \"Creation Date\",\n          minWidth: 200,\n        },\n        {\n          prop: \"updated_date\",\n          label: \"Updated Date\",\n          minWidth: 200,\n        },\n      ],\n      tableData: [],\n    };\n  },\n  methods: {\n    fetchData() {\n      axiosClient\n        .get(\"/fetchUsersMaintenance\")\n        .then((response) => {\n          console.log(\"Users: \", response.data);\n          this.tableData = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleEdit(index, row) {\n      alert(`Your want to edit ${row.branchName}`);\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}