{"ast":null,"code":"import { Card, Checkbox, Button } from \"src/components/UIComponents\";\nimport axiosClient from \"../../../../../axios\";\nexport default {\n  components: {\n    Card,\n    [Checkbox.name]: Checkbox,\n    [Button.name]: Button\n  },\n  methods: {\n    toggleNavbar() {\n      document.body.classList.toggle(\"nav-open\");\n    },\n    closeMenu() {\n      document.body.classList.remove(\"nav-open\");\n      document.body.classList.remove(\"off-canvas-sidebar\");\n    },\n    sendOTP() {\n      axiosClient.get(\"/sendForgotVerificationCode\", {\n        params: {\n          email: this.email\n        }\n      }).then(response => {\n        sessionStorage.setItem(\"HashCode\", response.data);\n        sessionStorage.setItem(\"Email\", this.email);\n        this.$router.push({\n          name: \"LoginOTPForm\"\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    validateEmail() {\n      if (/^[\\w.-]+@[a-zA-Z_-]+?\\.[a-zA-Z]{2,3}$/.test(this.email)) {\n        this.isEmail = false;\n      } else this.isEmail = true;\n    }\n  },\n  data() {\n    return {\n      email: \"\",\n      isEmail: true\n    };\n  },\n  beforeDestroy() {\n    this.closeMenu();\n  }\n};","map":{"version":3,"names":["Card","Checkbox","Button","axiosClient","components","name","methods","toggleNavbar","document","body","classList","toggle","closeMenu","remove","sendOTP","get","params","email","then","response","sessionStorage","setItem","data","$router","push","catch","error","console","validateEmail","test","isEmail","beforeDestroy"],"sources":["src/components/Dashboard/Views/Pages/ForgotPassword/ForgotPassword.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"wrapper wrapper-full-page\">\n      <div class=\"full-page login-page section-image\">\n        <!--   you can change the color of the filter page using: data-color=\"blue | azure | green | orange | red | purple\" -->\n        <div class=\"content\">\n          <div class=\"container\">\n            <div class=\"col-lg-4 col-md-6 ml-auto mr-auto\">\n              <form @submit.prevent=\"sendOTP\">\n                <card type=\"login\" class=\"m-0 p-0\">\n                  <p class=\"text-center font-size1\">\n                    Forgot your password? No problem. Just let us know your email address\n                    and we will email you an OTP that will allow you to create a new one.\n                  </p>\n\n                  <fg-input\n                    label=\"Email\"\n                    class=\"mb-0\"\n                    v-model=\"email\"\n                    @input=\"validateEmail\"\n                  ></fg-input>\n\n                  <div class=\"card-footer pt-10px p-0 d-flex flex-row-reverse\">\n                    <p-button\n                      :disabled=\"isEmail\"\n                      native-type=\"submit\"\n                      type=\"warning\"\n                      round\n                      >Send OTP\n                    </p-button>\n                  </div>\n                </card>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- <app-footer></app-footer> -->\n        <div\n          class=\"full-page-background\"\n          style=\"background-image: url(static/img/background/background-2.jpg)\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Card, Checkbox, Button } from \"src/components/UIComponents\";\n// import AppFooter from './Layout/AppFooter'\n\nimport axiosClient from \"../../../../../axios\";\n\nexport default {\n  components: {\n    Card,\n    // AppFooter,\n    [Checkbox.name]: Checkbox,\n    [Button.name]: Button,\n  },\n  methods: {\n    toggleNavbar() {\n      document.body.classList.toggle(\"nav-open\");\n    },\n    closeMenu() {\n      document.body.classList.remove(\"nav-open\");\n      document.body.classList.remove(\"off-canvas-sidebar\");\n    },\n    sendOTP() {\n      //Send OTP to the user's email\n      axiosClient\n        .get(\"/sendForgotVerificationCode\", {\n          params: {\n            email: this.email,\n          },\n        })\n        .then((response) => {\n          sessionStorage.setItem(\"HashCode\", response.data);\n          sessionStorage.setItem(\"Email\", this.email);\n\n          this.$router.push({ name: \"LoginOTPForm\" });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    validateEmail() {\n      if (/^[\\w.-]+@[a-zA-Z_-]+?\\.[a-zA-Z]{2,3}$/.test(this.email)) {\n        this.isEmail = false;\n      } else this.isEmail = true;\n    },\n  },\n  data() {\n    return {\n      email: \"\",\n      isEmail: true,\n    };\n  },\n  beforeDestroy() {\n    this.closeMenu();\n  },\n};\n</script>\n<style lang=\"scss\">\n.font-size1 {\n  font-size: 13px;\n}\n.pt-10px {\n  padding-top: 10px !important;\n}\n</style>\n"],"mappings":"AA8CA,SAAAA,IAAA,EAAAC,QAAA,EAAAC,MAAA;AAGA,OAAAC,WAAA;AAEA;EACAC,UAAA;IACAJ,IAAA;IAEA,CAAAC,QAAA,CAAAI,IAAA,GAAAJ,QAAA;IACA,CAAAC,MAAA,CAAAG,IAAA,GAAAH;EACA;EACAI,OAAA;IACAC,aAAA;MACAC,QAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA;IACA;IACAC,UAAA;MACAJ,QAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAG,MAAA;MACAL,QAAA,CAAAC,IAAA,CAAAC,SAAA,CAAAG,MAAA;IACA;IACAC,QAAA;MAEAX,WAAA,CACAY,GAAA;QACAC,MAAA;UACAC,KAAA,OAAAA;QACA;MACA,GACAC,IAAA,CAAAC,QAAA;QACAC,cAAA,CAAAC,OAAA,aAAAF,QAAA,CAAAG,IAAA;QACAF,cAAA,CAAAC,OAAA,eAAAJ,KAAA;QAEA,KAAAM,OAAA,CAAAC,IAAA;UAAAnB,IAAA;QAAA;MACA,GACAoB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACAE,cAAA;MACA,4CAAAC,IAAA,MAAAZ,KAAA;QACA,KAAAa,OAAA;MACA,YAAAA,OAAA;IACA;EACA;EACAR,KAAA;IACA;MACAL,KAAA;MACAa,OAAA;IACA;EACA;EACAC,cAAA;IACA,KAAAnB,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}