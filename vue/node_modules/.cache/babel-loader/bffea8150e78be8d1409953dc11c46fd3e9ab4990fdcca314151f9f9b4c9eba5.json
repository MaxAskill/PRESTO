{"ast":null,"code":"import \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport axiosClient from \"../../../axios\";\nexport default {\n  data() {\n    return {\n      positionEmployee: \"\",\n      name: \"\",\n      date: \"\",\n      time: \"\"\n    };\n  },\n  created() {\n    setInterval(this.dateTime, 1000);\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Vue PDP Pro\",\n      description: \"Sidebar title\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: value => {\n        let acceptedValues = [\"white\", \"brown\", \"black\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar background color (white|brown|black)\"\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: value => {\n        let acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar active text color (primary|info|success|warning|danger)\"\n    },\n    logo: {\n      type: String,\n      default: \"static/img/logo.png\",\n      description: \"Sidebar Logo\"\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => [],\n      description: \"Sidebar links. Can be also provided as children components (sidebar-item)\"\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose\n    };\n  },\n  methods: {\n    async initScrollBarAsync() {\n      this.positionEmployee = sessionStorage.getItem(\"Position\");\n      if (this.positionEmployee == \"Approver\") {\n        this.positionEmployee = \"Agent\";\n      }\n      let isWindows = navigator.platform.startsWith(\"Win\");\n      if (!isWindows) {\n        return;\n      }\n    },\n    logoDashboard() {\n      if (this.positionEmployee == \"Admin\") {\n        window.location.href = \"http://192.168.0.7:4040/#/admin/overview\";\n      } else if (this.positionEmployee == \"Agent\" || this.positionEmployee == \"Approver\") {\n        window.location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n      } else if (this.positionEmployee == \"User\") {\n        window.location.href = \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n      }\n    },\n    fetchData() {\n      axiosClient.get(\"/users\", {\n        params: {\n          email: sessionStorage.getItem(\"Email\")\n        }\n      }).then(response => {\n        this.name = response.data[0].name;\n      }).catch(error => {\n        console.error(error);\n      });\n      const today = new Date();\n      const date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      this.date = date;\n    },\n    dateTime() {\n      const today = new Date();\n      const hours = today.getHours();\n      const minutes = today.getMinutes();\n      const seconds = today.getSeconds();\n      const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      const formattedSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n      const time = hours + \":\" + formattedMinutes + \":\" + formattedSeconds;\n      this.time = time;\n      console.log(\"Time:\", this.time);\n    }\n  },\n  mounted() {\n    this.fetchData();\n    this.initScrollBarAsync();\n  },\n  beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  },\n  computed: {\n    filteredSidebarLinks() {\n      const userPosition = this.positionEmployee;\n      if (userPosition === \"User\") {\n        return this.sidebarLinks.filter(link => link.access === \"User\" || link.access === \"All\");\n      } else if (userPosition === \"Agent\" || userPosition === \"Approver\") {\n        console.log(\"Approver\");\n        return this.sidebarLinks.filter(link => link.access === \"Agent\" || link.access === \"All\");\n      } else {\n        return this.sidebarLinks;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","data","positionEmployee","name","date","time","created","setInterval","dateTime","props","title","type","String","default","description","backgroundColor","validator","value","acceptedValues","indexOf","activeColor","logo","sidebarLinks","Array","autoClose","Boolean","provide","methods","initScrollBarAsync","sessionStorage","getItem","isWindows","navigator","platform","startsWith","logoDashboard","window","location","href","fetchData","get","params","email","then","response","catch","error","console","today","Date","getFullYear","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedMinutes","formattedSeconds","log","mounted","beforeDestroy","$sidebar","showSidebar","computed","filteredSidebarLinks","userPosition","filter","link","access"],"sources":["src/components/UIComponents/SidebarPlugin/SideBar.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar\" :data-color=\"backgroundColor\" :data-active-color=\"activeColor\">\n    <div class=\"logo\">\n      <a\n        class=\"simple-text logo-mini user-select-none\"\n        aria-label=\"sidebar mini logo\"\n        @click=\"logoDashboard\"\n      >\n        <div class=\"logo-img\">\n          <img :src=\"logo\" alt=\"\" />\n        </div>\n      </a>\n      <a class=\"simple-text logo-normal user-select-none\" @click=\"logoDashboard\">\n        PRESTO\n      </a>\n    </div>\n\n    <div class=\"sidebar-wrapper\" ref=\"sidebarScrollArea\">\n      <slot> </slot>\n      <ul class=\"nav\">\n        <slot name=\"links\">\n          <sidebar-item\n            :name=\"name\"\n            v-for=\"(link, index) in filteredSidebarLinks\"\n            :key=\"link.name + index\"\n            :link=\"link\"\n          >\n            <sidebar-item\n              :name=\"name\"\n              v-for=\"(subLink, index) in link.children\"\n              v-if=\"\n                positionEmployee === subLink.access ||\n                positionEmployee === 'Admin' ||\n                subLink.access === 'All'\n              \"\n              :key=\"subLink.name + index\"\n              :link=\"subLink\"\n            >\n            </sidebar-item>\n          </sidebar-item>\n        </slot>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport axiosClient from \"../../../axios\";\nexport default {\n  data() {\n    return {\n      positionEmployee: \"\",\n      name: \"\",\n      date: \"\",\n      time: \"\",\n    };\n  },\n  created() {\n    setInterval(this.dateTime, 1000);\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Vue PDP Pro\",\n      description: \"Sidebar title\",\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: (value) => {\n        let acceptedValues = [\"white\", \"brown\", \"black\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar background color (white|brown|black)\",\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: (value) => {\n        let acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar active text color (primary|info|success|warning|danger)\",\n    },\n    logo: {\n      type: String,\n      default: \"static/img/logo.png\",\n      description: \"Sidebar Logo\",\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => [],\n      description:\n        \"Sidebar links. Can be also provided as children components (sidebar-item)\",\n    },\n    autoClose: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose,\n    };\n  },\n  methods: {\n    async initScrollBarAsync() {\n      this.positionEmployee = sessionStorage.getItem(\"Position\");\n\n      if (this.positionEmployee == \"Approver\") {\n        this.positionEmployee = \"Agent\";\n      }\n      // console.log(\"SideBar: \", this.sidebarLinks);\n      let isWindows = navigator.platform.startsWith(\"Win\");\n      if (!isWindows) {\n        return;\n      }\n      // const PerfectScroll = await import('perfect-scrollbar')\n      // PerfectScroll.initialize(this.$refs.sidebarScrollArea)\n    },\n    logoDashboard() {\n      if (this.positionEmployee == \"Admin\") {\n        window.location.href = \"http://192.168.0.7:4040/#/admin/overview\";\n      } else if (\n        this.positionEmployee == \"Agent\" ||\n        this.positionEmployee == \"Approver\"\n      ) {\n        window.location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n      } else if (this.positionEmployee == \"User\") {\n        window.location.href = \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n      }\n    },\n    fetchData() {\n      axiosClient\n        .get(\"/users\", {\n          params: {\n            email: sessionStorage.getItem(\"Email\"),\n          },\n        })\n        .then((response) => {\n          // console.log(\"Success User Response:\", response.data);\n          this.name = response.data[0].name;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      // var currentDate = new Date();\n      // console.log(currentDate);\n\n      // var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, \"/\");\n      // console.log(currentDateWithFormat);\n\n      // this.date = currentDateWithFormat;\n      const today = new Date();\n      const date =\n        today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n      this.date = date;\n    },\n    dateTime() {\n      const today = new Date();\n\n      const hours = today.getHours();\n      const minutes = today.getMinutes();\n      const seconds = today.getSeconds();\n\n      const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\n      const formattedSeconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      const time = hours + \":\" + formattedMinutes + \":\" + formattedSeconds;\n      // const dateTime = date + ' ' + time;\n\n      this.time = time;\n      console.log(\"Time:\", this.time);\n    },\n  },\n  mounted() {\n    this.fetchData();\n    this.initScrollBarAsync();\n  },\n  beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  },\n  computed: {\n    filteredSidebarLinks() {\n      // Get the user's position from a variable or Vuex state, replace 'userPosition' with the actual variable or state\n      const userPosition = this.positionEmployee;\n\n      // Filter the sidebar links based on the user's position\n      if (userPosition === \"User\") {\n        return this.sidebarLinks.filter(\n          (link) => link.access === \"User\" || link.access === \"All\"\n        );\n      } else if (userPosition === \"Agent\" || userPosition === \"Approver\") {\n        console.log(\"Approver\");\n        return this.sidebarLinks.filter(\n          (link) => link.access === \"Agent\" || link.access === \"All\"\n        );\n      } else {\n        return this.sidebarLinks;\n      }\n    },\n  },\n};\n</script>\n<style>\n@media (min-width: 992px) {\n  .navbar-search-form-mobile,\n  .nav-mobile-menu {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}