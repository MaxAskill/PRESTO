{"ast":null,"code":"import _toConsumableArray from \"/home/Projects/PRESTOv1Test/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/home/Projects/PRESTOv1Test/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../axios\";\nimport { createPopper } from \"@popperjs/core/lib/popper-lite.js\";\nimport PPagination from \"../../../../../UIComponents/Pagination.vue\";\nimport ViewApprovedModal from \"./ApprovedModal/ViewApprovedModal.vue\";\nimport XLSX from \"../../../../../../../node_modules/xlsx/dist/xlsx.full.min.js\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PPagination: PPagination,\n    ViewApprovedModal: ViewApprovedModal\n  },\n  props: [\"transferredData\", \"totalNumbers\", \"itemData\"],\n  watch: {\n    transferredData: function transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    }\n  },\n  computed: {\n    pagedData: function pagedData() {\n      return this.itemData.slice(this.from, this.to);\n    },\n    queriedData: function queriedData() {\n      var _this = this;\n      if (!this.searchQuery) {\n        this.pagination.total = this.itemData.length;\n        return this.pagedData;\n      }\n      var result = this.itemData.filter(function (row) {\n        var isIncluded = false;\n        var _iterator = _createForOfIteratorHelper(_this.propsToSearch),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            var rowValue = row[key].toString().toLowerCase();\n            if (rowValue.includes && rowValue.includes(_this.searchQuery.toLowerCase())) {\n              isIncluded = true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      this.pagination.total = this.itemData.length;\n      return this.itemData.length;\n    },\n    popperInstance: function popperInstance() {\n      return createPopper(this.button, this.popover, {\n        placement: \"left\",\n        modifiers: [{\n          name: \"offset\",\n          options: {\n            offset: [0, 30]\n          }\n        }],\n        strategy: \"absolute\"\n      });\n    }\n  },\n  data: function data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"itemCode\", \"brand\", \"boxNumber\", \"boxLabel\", \"quantity\"],\n      tableColumns: [{\n        prop: \"itemCode\",\n        label: \"Item Code\",\n        minWidth: 100\n      }, {\n        prop: \"brand\",\n        label: \"Brand\",\n        minWidth: 100\n      }, {\n        prop: \"boxNumber\",\n        label: \"Box Number\",\n        minWidth: 60\n      }, {\n        prop: \"boxLabel\",\n        label: \"Box Label\",\n        minWidth: 250\n      }, {\n        prop: \"quantity\",\n        label: \"Quantity\",\n        minWidth: 50\n      }, {\n        prop: \"amount\",\n        label: \"Amount\",\n        minWidth: 50\n      }],\n      viewImages: \"\",\n      headerRow: [\"Item Code\", \"Item Description\", \"Size\", \"Color\", \"Brand\", \"Box Number\", \"Box Label\", \"Quantity\", \"Amount\"],\n      headerCellStyle: {\n        fontSize: \"10px\"\n      },\n      cellStyle: {\n        fontSize: \"12px !important\"\n      }\n    };\n  },\n  methods: {\n    exportExcel: function exportExcel() {\n      var _this2 = this;\n      var dataArray = \"\";\n      var selectedItems = [this.transferredData.plID];\n      axiosClient.get(\"/fetchAllItemsRequestExport\", {\n        params: {\n          company: sessionStorage.getItem(\"Company\"),\n          plID: selectedItems\n        }\n      }).then(function (response) {\n        _this2.excelBranch = response.data;\n        dataArray = _this2.excelBranch.map(function (obj) {\n          return [obj.itemCode, obj.ItemDescription, obj.Size, obj.Color, obj.brand, obj.boxNumber, obj.boxLabel, obj.quantity];\n        });\n        var currentDate = new Date();\n        var options = {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        };\n        var currentDateString = currentDate.toLocaleDateString(\"en-PH\", options).replace(/\\//g, \"-\");\n        dataArray = [_this2.headerRow].concat(_toConsumableArray(dataArray));\n        var workbook = XLSX.utils.book_new();\n        var worksheet = XLSX.utils.aoa_to_sheet(dataArray);\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Raw Data\");\n        var excelBuffer = XLSX.write(workbook, {\n          bookType: \"xlsx\",\n          type: \"array\"\n        });\n        var blob = new Blob([excelBuffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n        var url = window.URL.createObjectURL(blob);\n        var link = document.createElement(\"a\");\n        link.href = url;\n        link.download = currentDateString + \"_ \" + _this2.transferredData.branchName + \".xlsx\";\n        link.click();\n        window.URL.revokeObjectURL(url);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    generateLetter: function generateLetter() {\n      var holderName = this.convertToAlphanumeric(\"name\");\n      var holderplID = this.convertToAlphanumeric(\"plID\");\n      var holderDateStart = this.convertToAlphanumeric(\"dateStart\");\n      var holderDateEnd = this.convertToAlphanumeric(\"dateEnd\");\n      var holderEmail = this.convertToAlphanumeric(\"email\");\n      var holderUserID = this.convertToAlphanumeric(\"userID\");\n      var holderStatus = this.convertToAlphanumeric(\"status\");\n      var holderCompany = this.convertToAlphanumeric(\"company\");\n      var holderRegenerate = this.convertToAlphanumeric(\"regenerate\");\n      window.open(\"http://192.168.0.7:90/api/generatePDF?\" + holderName + \"=\" + this.transferredData.authorizedPersonnel + \"&\" + holderplID + \"=\" + this.transferredData.plID + \"&\" + holderDateStart + \"=\" + this.transferredData.dateStart + \"&\" + holderDateEnd + \"=\" + this.transferredData.dateEnd + \"&\" + holderEmail + \"=\" + this.transferredData.promoEmail + \"&\" + holderUserID + \"=\" + sessionStorage.getItem(\"UserID\") + \"&\" + holderStatus + \"=approved\" + \"&\" + holderCompany + \"=\" + sessionStorage.getItem(\"Company\"), \"_blank\");\n    },\n    viewImage: function viewImage() {\n      var _this3 = this;\n      console.log(\"Transaction Number:\", this.transferredData);\n      axiosClient.get(\"/fetchImageBranchDoc\", {\n        params: {\n          transactionID: this.transferredData.plID,\n          company: sessionStorage.getItem(\"Company\")\n        }\n      }).then(function (response) {\n        console.log(\"Pull out path image:\", response.data);\n        console.log(\"Pull out path image length:\", response.data.length);\n        _this3.viewImages = response.data.imagePaths;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    convertToAlphanumeric: function convertToAlphanumeric(input) {\n      var result = \"\";\n      for (var i = 0; i < input.length; i++) {\n        var char = input[i];\n        var charCode = char.charCodeAt(0);\n        if (char >= \"0\" && char <= \"9\" || char >= \"a\" && char <= \"z\" || char >= \"A\" && char <= \"Z\") {\n          var alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          result += char;\n        }\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","createPopper","PPagination","ViewApprovedModal","XLSX","use","_Table","_TableColumn","_Select","_Option","components","props","watch","transferredData","newValue","$emit","computed","pagedData","itemData","slice","from","to","queriedData","_this","searchQuery","pagination","total","length","result","filter","row","isIncluded","_iterator","_createForOfIteratorHelper","propsToSearch","_step","s","n","done","key","value","rowValue","toString","toLowerCase","includes","err","e","f","highBound","perPage","currentPage","popperInstance","button","popover","placement","modifiers","name","options","offset","strategy","data","perPageOptions","tableColumns","prop","label","minWidth","viewImages","headerRow","headerCellStyle","fontSize","cellStyle","methods","exportExcel","_this2","dataArray","selectedItems","plID","get","params","company","sessionStorage","getItem","then","response","excelBranch","map","obj","itemCode","ItemDescription","Size","Color","brand","boxNumber","boxLabel","quantity","currentDate","Date","year","month","day","currentDateString","toLocaleDateString","replace","concat","_toConsumableArray","workbook","utils","book_new","worksheet","aoa_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","branchName","click","revokeObjectURL","catch","error","console","generateLetter","holderName","convertToAlphanumeric","holderplID","holderDateStart","holderDateEnd","holderEmail","holderUserID","holderStatus","holderCompany","holderRegenerate","open","authorizedPersonnel","dateStart","dateEnd","promoEmail","viewImage","_this3","log","transactionID","imagePaths","input","i","char","charCode","charCodeAt","alphanumericChar"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/ModalPullOut/ApprovedModal.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      class=\"modal fade\"\n      id=\"approvedModal\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabindex=\"-1\"\n      aria-labelledby=\"approvedModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <div class=\"row\">\n              <div class=\"col d-flex justify-content-center\">\n                <h6 class=\"modal-title\">Approved Pull Out Transaction</h6>\n              </div>\n              <div class=\"col-auto\">\n                <button class=\"delete-buttons\" data-bs-dismiss=\"modal\">\n                  <i\n                    class=\"nc-icon nc-simple-remove font-weight-bold\"\n                    style=\"margin-top: 5px\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <!-- <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"approvedModalLabel\">\n              APPROVED: {{ transferredData.branchName }}\n            </h1> -->\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Transaction Number</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center font-weight-bold\"\n                  >\n                    {{ transferredData.plID }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Transaction Type</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transferredData.transactionType }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Status</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transferredData.status }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Branch</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center\"\n                  >\n                    {{ transferredData.branchName }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Created By</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transferredData.createdBy }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Date Created</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transferredData.date }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Chain</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center\"\n                  >\n                    {{ transferredData.chainCode }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Reviewed By</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transferredData.reviewedBy }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Date Reviewed</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transferredData.reviewedDate }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Company</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control font-weight-bold control-form text-center\"\n                  >\n                    {{ transferredData.company }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Approved By</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                  >\n                    {{ transferredData.approvedBy }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-sm-3\">\n                <div class=\"form-group\">\n                  <label\n                    class=\"selector-label d-flex justify-content-center align-items-center\"\n                    >Date Approved</label\n                  >\n                  <p\n                    rows=\"1\"\n                    readonly\n                    class=\"form-control control-form text-center font-weight-bold\"\n                    style=\"text-transform: capitalize\"\n                  >\n                    {{ transferredData.approvedDate }}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-12 pt-5\">\n                <fg-input\n                  class=\"input-md\"\n                  placeholder=\"Search\"\n                  v-model=\"searchQuery\"\n                  addon-right-icon=\"nc-icon nc-zoom-split\"\n                >\n                </fg-input>\n              </div>\n              <div class=\"col-sm-12 mt-2\">\n                <el-table\n                  class=\"table-striped\"\n                  :data=\"queriedData\"\n                  border\n                  style=\"width: 100%\"\n                  :header-cell-style=\"headerCellStyle\"\n                  :cell-style=\"cellStyle\"\n                >\n                  <el-table-column\n                    class=\"el-table-mod\"\n                    v-for=\"column in tableColumns\"\n                    :key=\"column.label\"\n                    :min-width=\"column.minWidth\"\n                    :prop=\"column.prop\"\n                    :label=\"column.label\"\n                    header-align=\"center\"\n                    align=\"center\"\n                    style=\"font-weight: bold\"\n                  >\n                  </el-table-column>\n                </el-table>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-end pagination-info\">\n              <p class=\"category p-margin\">\n                Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n              </p>\n            </div>\n            <div class=\"d-flex justify-content-center\">\n              <p-pagination\n                class=\"pull-right\"\n                v-model=\"pagination.currentPage\"\n                :per-page=\"pagination.perPage\"\n                :total=\"pagination.total\"\n              >\n              </p-pagination>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-sm-6 text-center\">\n                <label> Number of Boxes</label><br />\n                <span class=\"font-weight-bold label-size\">\n                  {{ totalNumbers.boxCount }}\n                </span>\n              </div>\n              <div class=\"col-sm-6 text-center\">\n                <label> Number of Items</label><br />\n                <span class=\"font-weight-bold label-size\">\n                  {{ totalNumbers.totalItems }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer mrgn-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n              Close\n            </button>\n            <button\n              type=\"submit\"\n              class=\"btn btn-info\"\n              data-bs-target=\"#viewApprovedModal\"\n              data-bs-toggle=\"modal\"\n              @click=\"viewImage\"\n            >\n              View\n            </button>\n            <button type=\"submit\" class=\"btn btn-info\" @click=\"exportExcel\">\n              Export Excel\n            </button>\n            <button class=\"btn btn-success\" @click=\"generateLetter\">\n              GENERATE LETTER\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <ViewApprovedModal :viewImages=\"viewImages\"></ViewApprovedModal>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../axios\";\nimport { createPopper } from \"@popperjs/core/lib/popper-lite.js\";\nimport PPagination from \"../../../../../UIComponents/Pagination.vue\";\nimport ViewApprovedModal from \"./ApprovedModal/ViewApprovedModal.vue\";\nimport XLSX from \"../../../../../../../node_modules/xlsx/dist/xlsx.full.min.js\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  components: {\n    PPagination,\n    // RegenerateApprovedModal,\n    ViewApprovedModal,\n  },\n  props: [\"transferredData\", \"totalNumbers\", \"itemData\"],\n\n  watch: {\n    transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    },\n  },\n  computed: {\n    pagedData() {\n      return this.itemData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.itemData.length;\n        return this.pagedData;\n      }\n      let result = this.itemData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.itemData.length;\n      return this.itemData.length;\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    popperInstance() {\n      return createPopper(this.button, this.popover, {\n        placement: \"left\",\n        modifiers: [\n          {\n            name: \"offset\",\n            options: {\n              offset: [0, 30],\n            },\n          },\n        ],\n        strategy: \"absolute\",\n      });\n    },\n  },\n  data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"itemCode\", \"brand\", \"boxNumber\", \"boxLabel\", \"quantity\"],\n      tableColumns: [\n        {\n          prop: \"itemCode\",\n          label: \"Item Code\",\n          minWidth: 100,\n        },\n        {\n          prop: \"brand\",\n          label: \"Brand\",\n          minWidth: 100,\n        },\n        {\n          prop: \"boxNumber\",\n          label: \"Box Number\",\n          minWidth: 60,\n        },\n        {\n          prop: \"boxLabel\",\n          label: \"Box Label\",\n          minWidth: 250,\n        },\n        {\n          prop: \"quantity\",\n          label: \"Quantity\",\n          minWidth: 50,\n        },\n        {\n          prop: \"amount\",\n          label: \"Amount\",\n          minWidth: 50,\n        },\n      ],\n      viewImages: \"\",\n      headerRow: [\n        \"Item Code\",\n        \"Item Description\",\n        \"Size\",\n        \"Color\",\n        \"Brand\",\n        \"Box Number\",\n        \"Box Label\",\n        \"Quantity\",\n        \"Amount\",\n      ],\n      headerCellStyle: {\n        fontSize: \"10px\",\n      },\n      cellStyle: {\n        fontSize: \"12px !important\",\n      },\n    };\n  },\n  methods: {\n    exportExcel() {\n      var dataArray = \"\";\n      const selectedItems = [this.transferredData.plID];\n\n      axiosClient\n        .get(\"/fetchAllItemsRequestExport\", {\n          params: {\n            company: sessionStorage.getItem(\"Company\"),\n            plID: selectedItems,\n          },\n        })\n        .then((response) => {\n          this.excelBranch = response.data;\n          dataArray = this.excelBranch.map((obj) => [\n            obj.itemCode,\n            obj.ItemDescription,\n            obj.Size,\n            obj.Color,\n            obj.brand,\n            obj.boxNumber,\n            obj.boxLabel,\n            obj.quantity,\n          ]);\n\n          const currentDate = new Date();\n          const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n          const currentDateString = currentDate\n            .toLocaleDateString(\"en-PH\", options)\n            .replace(/\\//g, \"-\");\n\n          dataArray = [this.headerRow, ...dataArray];\n          const workbook = XLSX.utils.book_new();\n          const worksheet = XLSX.utils.aoa_to_sheet(dataArray);\n\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Raw Data\");\n          const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\n          const blob = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n          });\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement(\"a\");\n          link.href = url;\n          link.download =\n            currentDateString + \"_ \" + this.transferredData.branchName + \".xlsx\";\n          link.click();\n          window.URL.revokeObjectURL(url);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    generateLetter() {\n      var holderName = this.convertToAlphanumeric(\"name\");\n      var holderplID = this.convertToAlphanumeric(\"plID\");\n      var holderDateStart = this.convertToAlphanumeric(\"dateStart\");\n      var holderDateEnd = this.convertToAlphanumeric(\"dateEnd\");\n      var holderEmail = this.convertToAlphanumeric(\"email\");\n      var holderUserID = this.convertToAlphanumeric(\"userID\");\n      var holderStatus = this.convertToAlphanumeric(\"status\");\n      var holderCompany = this.convertToAlphanumeric(\"company\");\n      var holderRegenerate = this.convertToAlphanumeric(\"regenerate\");\n\n      window.open(\n        \"http://192.168.0.7:90/api/generatePDF?\" +\n          holderName +\n          \"=\" +\n          this.transferredData.authorizedPersonnel +\n          \"&\" +\n          holderplID +\n          \"=\" +\n          this.transferredData.plID +\n          \"&\" +\n          holderDateStart +\n          \"=\" +\n          this.transferredData.dateStart +\n          \"&\" +\n          holderDateEnd +\n          \"=\" +\n          this.transferredData.dateEnd +\n          \"&\" +\n          holderEmail +\n          \"=\" +\n          this.transferredData.promoEmail +\n          \"&\" +\n          holderUserID +\n          \"=\" +\n          sessionStorage.getItem(\"UserID\") +\n          \"&\" +\n          holderStatus +\n          \"=approved\" +\n          \"&\" +\n          holderCompany +\n          \"=\" +\n          sessionStorage.getItem(\"Company\"),\n        \"_blank\"\n      );\n    },\n    viewImage() {\n      console.log(\"Transaction Number:\", this.transferredData);\n\n      axiosClient\n        .get(\"/fetchImageBranchDoc\", {\n          params: {\n            transactionID: this.transferredData.plID,\n            company: sessionStorage.getItem(\"Company\"),\n          },\n        })\n        .then((response) => {\n          console.log(\"Pull out path image:\", response.data);\n          console.log(\"Pull out path image length:\", response.data.length);\n\n          this.viewImages = response.data.imagePaths;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n\n        // Check if the character is alphanumeric\n        if (\n          (char >= \"0\" && char <= \"9\") ||\n          (char >= \"a\" && char <= \"z\") ||\n          (char >= \"A\" && char <= \"Z\")\n        ) {\n          // Convert the character code to a base-36 alphanumeric representation\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          // Non-alphanumeric characters are left unchanged\n          result += char;\n        }\n      }\n\n      return result;\n    },\n  },\n};\n</script>\n\n<style>\n.el-table-mod {\n  padding-top: 10px !important;\n  padding-bottom: 10px !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}