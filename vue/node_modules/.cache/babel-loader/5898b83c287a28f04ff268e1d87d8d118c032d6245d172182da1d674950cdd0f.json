{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"NotifAddBoxLabel\", NotifAddBoxLabel), _defineProperty(_components, \"NotifAddItem\", NotifAddItem), _defineProperty(_components, \"NotifDeleteBoxLabel\", NotifDeleteBoxLabel), _defineProperty(_components, \"NotifDeleteItem\", NotifDeleteItem), _defineProperty(_components, \"NotifDraftSave\", NotifDraftSave), _defineProperty(_components, \"NotifItemChangeBoxLabel\", NotifItemChangeBoxLabel), _defineProperty(_components, \"NotifItemQuantity\", NotifItemQuantity), _defineProperty(_components, \"NotifRenameBoxLabel\", NotifRenameBoxLabel), _defineProperty(_components, \"NotifSubmitTransaction\", NotifSubmitTransaction), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _defineProperty(_components, \"TransactionReceiptModal\", TransactionReceiptModal), _defineProperty(_components, \"DraftModal\", DraftModal), _components),\n  data: function data() {\n    return {\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      hoveredRow: null,\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"Concess Pull-Out Item Disposal\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"Concess Pull-Out - Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"Concess Pull-Out - Warehouse\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      itemss: [{\n        id: 1,\n        name: \"Item 1\"\n      }, {\n        id: 2,\n        name: \"Item 2\"\n      }, {\n        id: 1,\n        name: \"Item 3\"\n      }, {\n        id: 3,\n        name: \"Item 4\"\n      }, {\n        id: 2,\n        name: \"Item 5\"\n      }],\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true\n    };\n  },\n  mounted: function mounted() {\n    this.fetchEdit();\n    this.fetchCompany();\n  },\n  watch: {\n    newTransaction: {\n      handler: function handler(val) {\n        this.validateSubmit();\n      },\n      deep: true\n    },\n    \"newTransaction.boxLabels\": function newTransactionBoxLabels(val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function newTransactionCompany(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function newTransactionChainCode(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function newTransactionBranchName(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function newTransactionTransactionType(val, oldVal) {\n      this.showButtons();\n    }\n  },\n  methods: {\n    numberOnly: function numberOnly($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        $event.preventDefault();\n      }\n    },\n    validateSubmit: function validateSubmit() {\n      var uniqueItems = _toConsumableArray(new Set(this.newTransaction.items.map(function (item) {\n        return item.boxNumber;\n      })));\n      var temp = false;\n      for (var j in this.newTransaction.boxLabels) {\n        for (var i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            temp = true;\n            break;\n          } else temp = false;\n        }\n      }\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType && this.newTransaction.boxLabels.length > 0 && temp) this.isDisabledSubmit = false;else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel: function editingBoxLabel(_ref) {\n      var index = _ref.index,\n        value = _ref.value,\n        tempBL = _ref.tempBL;\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns: function enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n        console.log(this.newTransaction.boxLabels.length);\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons: function showButtons() {\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit: function fetchEdit() {\n      var _this = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        console.log(\"ID\", id);\n        console.log(\"Company\", transactionID.split(\"=\")[2]);\n        var company = transactionID.split(\"=\")[2];\n        axiosClient.get(\"/fetchEditDraftBranch\", {\n          params: {\n            company: company,\n            plID: id\n          }\n        }).then(function (response) {\n          console.log(\"Edit Branch:\", response.data, _this.itemss);\n          _this.newTransaction.company = response.data[0].company;\n          _this.newTransaction.branchName = response.data[0].branchName;\n          _this.newTransaction.chainCode = response.data[0].chainCode;\n          _this.newTransaction.transactionType = response.data[0].transactionType;\n          if (response.data[0].status == \"denied\") {\n            _this.isDenied = false;\n          }\n          axiosClient.get(\"/fetchEditDraftItem\", {\n            params: {\n              company: company,\n              plID: id\n            }\n          }).then(function (response) {\n            console.log(\"Edit Item:\", response.data);\n            for (var x = 0; x < response.data.length; x++) {\n              _this.newTransaction.items.push(response.data[x]);\n              console.log(\"New Items:\", _this.newTransaction.items);\n            }\n            var idMap = new Map();\n            _this.newTransaction.items.forEach(function (item) {\n              if (!idMap.has(item.id)) {\n                idMap.set(item.id, true);\n                _this.newTransaction.boxLabels.push({\n                  id: item.boxNumber,\n                  boxLabel: item.boxLabel\n                });\n                _this.newItemInputBox.push({\n                  id: item.boxNumber\n                });\n              }\n            });\n            console.log(\"Edit Labels:\", _this.newTransaction.boxLabels);\n            console.log(\"this.newTransaction.transactionType:\", _this.newTransaction.transactionType);\n            if (_this.newTransaction.company) {\n              _this.isCompany = false;\n              _this.isChainCode = false;\n              _this.fetchCompany();\n              _this.fetchChainCode();\n            }\n            if (_this.newTransaction.chainCode) {\n              _this.isChainCode = false;\n              _this.isBranchName = false;\n              _this.fetchChainName();\n              _this.fetchChainCode();\n            }\n            if (_this.newTransaction.branchName) {\n              _this.isBranchName = false;\n              _this.isTransactionType = false;\n              _this.fetchChainName();\n            }\n            if (_this.newTransaction.transactionType) {\n              _this.isCompany = false;\n              _this.isChainCode = false;\n              _this.isBranchName = false;\n              _this.isTransactionType = false;\n            }\n            if (_this.newTransaction.items.length) {\n              console.log(\"Disable\", _this.newTransaction.items.length);\n              _this.isCompany = true;\n              _this.isChainCode = true;\n              _this.isBranchName = true;\n              _this.isTransactionType = true;\n            }\n          }).catch(function (error) {\n            console.error(error);\n          });\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } catch (_unused) {\n        console.log(\"No Edit\");\n      }\n    },\n    updateData: function updateData(updatedData) {\n      console.log(\"das\", updatedData);\n    },\n    openModal: function openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxNumber) {\n      console.log(\"New DATAs\", code, boxNumber);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== code || item.boxNumber !== boxNumber;\n      });\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n    },\n    fetchItems: function fetchItems() {\n      var _this2 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this2.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            console.log(\"Item Code Response: \", response.data);\n            _this2.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      }\n    },\n    compareItemCode: function compareItemCode() {\n      var _this3 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        console.log(\"Success Item No:\", response.data);\n        console.log(\"Success Item Description\", response.data[0].ItemDescription);\n        _this3.newItemDescription = response.data[0].ItemDescription;\n        _this3.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this3.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          console.log(\"Success\", response.data);\n          _this3.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (error) {\n        _this3.missItemCode = 0;\n        !_this3.newItemInput ? true : _this3.isRightCode = true;\n        console.log(\"Not Equal\");\n        console.error(error);\n      });\n    },\n    handleQuantity: function handleQuantity() {\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      var notifType = \"\";\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n      this.$notify({\n        component: notification,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this4 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        console.log(\"Company Response:\", response.data);\n        _this4.companyList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this5 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        console.log(\"Chain Code Response:\", response.data);\n        _this5.chainCodeList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isChainCode = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this6 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        console.log(\"Chain Name Response:\", response.data);\n        _this6.branchNameList = response.data;\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.isBranchName = false;\n    },\n    addItem: function addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem: function saveItem(boxID) {\n      var _this7 = this;\n      this.isNewItem = !this.newItemInput ? true : false;\n      console.log(\"item\", this.newItemInput);\n      console.log(\"condition\", this.isNewItem);\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this7.newTransaction.items.length; i++) {\n            if (_this7.newTransaction.items[i].code == response.data[x].ItemNo && _this7.newTransaction.items[i].boxNumber == boxID) {\n              _this7.newTransaction.items[i].quantity = parseInt(_this7.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n              categorybrand: _this7.newBrand,\n              quantity: 1,\n              boxNumber: boxID\n            };\n            _this7.newTransaction.items.push(tempItem);\n          }\n          _this7.isRightCode = false;\n          _this7.isItem = false;\n          _this7.isAddItem = true;\n          _this7.newItemInput = \"\";\n          _this7.showItemInput = \"\";\n          _this7.notifyVue(\"AddItem\", \"bottom\", \"right\");\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(\"Items: \", this.newTransaction.items);\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        tempItem = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1\n        };\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n    },\n    submit: function submit() {\n      var _this8 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        this.isValid.company = !this.newTransaction.company ? true : false;\n        this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n        this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n        this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n        this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n        this.isValid.item = !this.newTransaction.items.length ? true : false;\n        console.log(\"Company: \", this.isValid.company);\n        console.log(\"company\", this.newTransaction.company);\n        axiosClient.post(\"/updatePullOutBranchRequest\", {\n          id: id,\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          email: sessionStorage.getItem(\"Email\"),\n          status: \"unprocessed\"\n        }).then(function (response) {\n          console.log(\"Success Branch Save: \", response.data);\n          _this8.transferTransactionID = id;\n          for (var x = 0; x < _this8.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator = _createForOfIteratorHelper(_this8.newTransaction.boxLabels),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var box = _step.value;\n                if (box.id == _this8.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            axiosClient.post(\"/updatePullOutItemRequest\", {\n              plID: id,\n              companyType: _this8.newTransaction.company,\n              brand: _this8.newTransaction.items[x].categorybrand,\n              boxNumber: _this8.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this8.newTransaction.items[x].code,\n              quantity: _this8.newTransaction.items[x].quantity,\n              email: sessionStorage.getItem(\"Email\"),\n              status: \"unprocessed\"\n            }).then(function (response) {\n              console.log(\"Success Items Save: \", response.data);\n            }).catch(function (error) {\n              console.error(error);\n            });\n          }\n          var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n          transactionModal.show();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } catch (_unused2) {\n        this.isValid.company = !this.newTransaction.company ? true : false;\n        this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n        this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n        this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n        this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n        this.isValid.item = !this.newTransaction.items.length ? true : false;\n        console.log(\"Company: \", this.isValid.company);\n        console.log(\"company\", this.newTransaction.company);\n        axiosClient.post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          email: sessionStorage.getItem(\"Email\"),\n          status: \"unprocessed\"\n        }).then(function (response) {\n          console.log(\"Success Branch Save: \", response.data);\n          _this8.transferTransactionID = response.data.id;\n          for (var x = 0; x < _this8.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator2 = _createForOfIteratorHelper(_this8.newTransaction.boxLabels),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var box = _step2.value;\n                if (box.id == _this8.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            axiosClient.post(\"/savePullOutItemRequest\", {\n              plID: response.data.id,\n              companyType: _this8.newTransaction.company,\n              brand: _this8.newTransaction.items[x].categorybrand,\n              boxNumber: _this8.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this8.newTransaction.items[x].code,\n              quantity: _this8.newTransaction.items[x].quantity,\n              email: sessionStorage.getItem(\"Email\"),\n              status: \"unprocessed\"\n            }).then(function (response) {\n              console.log(\"Success Items Save: \", response.data);\n            }).catch(function (error) {\n              console.error(error);\n            });\n          }\n          var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n          transactionModal.show();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    },\n    draft: function draft() {\n      var _this9 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        axiosClient.post(\"/updatePullOutBranchRequest\", {\n          id: id,\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          status: \"draft\",\n          email: sessionStorage.getItem(\"Email\")\n        }).then(function (response) {\n          console.log(\"Success Branch Save: \", response.data);\n          console.log(\"Items Length:\", _this9.newTransaction.items.length);\n          for (var x = 0; x < _this9.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator3 = _createForOfIteratorHelper(_this9.newTransaction.boxLabels),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var box = _step3.value;\n                if (box.id == _this9.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            axiosClient.post(\"/updatePullOutItemRequest\", {\n              plID: id,\n              companyType: _this9.newTransaction.company,\n              brand: _this9.newTransaction.items[x].categorybrand,\n              boxNumber: _this9.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this9.newTransaction.items[x].code,\n              quantity: _this9.newTransaction.items[x].quantity,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\")\n            }).then(function (response) {\n              console.log(\"Success Items Save: \", response.data);\n            }).catch(function (error) {\n              console.error(error);\n            });\n          }\n          var draftModal = new bootstrap.Modal(\"#draftModal\");\n          draftModal.show();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } catch (_unused3) {\n        axiosClient.post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          status: \"draft\",\n          email: sessionStorage.getItem(\"Email\")\n        }).then(function (response) {\n          console.log(\"Success Branch Save: \", response.data);\n          for (var x = 0; x < _this9.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator4 = _createForOfIteratorHelper(_this9.newTransaction.boxLabels),\n              _step4;\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var box = _step4.value;\n                if (box.id == _this9.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n            axiosClient.post(\"/savePullOutItemRequest\", {\n              plID: response.data.id,\n              companyType: _this9.newTransaction.company,\n              brand: _this9.newTransaction.items[x].categorybrand,\n              boxNumber: _this9.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this9.newTransaction.items[x].code,\n              quantity: _this9.newTransaction.items[x].quantity,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\")\n            }).then(function (response) {\n              console.log(\"Success Items Save: \", response.data);\n            }).catch(function (error) {\n              console.error(error);\n            });\n          }\n          var draftModal = new bootstrap.Modal(\"#draftModal\");\n          draftModal.show();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxNumber) {\n      console.log(\"Item Code Edit:\", code, \" Quantity:\", quantity, \" Box Number\", boxNumber);\n      console.log(\" == : \", this.newTransaction.items);\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxNumber === boxNumber;\n      });\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Number\", uniqueItems[0].boxNumber);\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","NotifAddBoxLabel","NotifAddItem","NotifDeleteBoxLabel","NotifDeleteItem","NotifDraftSave","NotifItemChangeBoxLabel","NotifItemQuantity","NotifRenameBoxLabel","NotifSubmitTransaction","Swal","axiosClient","EditBoxLabelModal","TransactionReceiptModal","DraftModal","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","transferredData","isCompany","isChainCode","isBranchName","isTransactionType","isShowButton","itemCodeList","isEditBLDisabled","isBoxLabel","isItem","isAddItem","isDisabledSubmit","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","hoveredRow","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","transferTransactionID","itemss","id","uniqueItemss","duplicateItemss","isDenied","mounted","fetchEdit","fetchCompany","watch","handler","val","validateSubmit","deep","newTransactionBoxLabels","oldVal","enableDropDowns","newTransactionCompany","showButtons","newTransactionChainCode","newTransactionBranchName","newTransactionTransactionType","methods","numberOnly","$event","keyCode","which","preventDefault","uniqueItems","_toConsumableArray","Set","map","boxNumber","temp","j","i","length","editingBoxLabel","_ref","index","tempBL","console","log","_this","uri","window","location","href","transactionID","split","get","params","plID","then","response","status","x","push","idMap","Map","forEach","has","set","fetchChainCode","fetchChainName","catch","error","_unused","updateData","updatedData","openModal","closeModal","showButton","itemId","hideButton","removeItem","code","filter","notifyVue","fetchItems","_this2","ItemNo","compareItemCode","_this3","indexOf","parts","slice","companyType","ItemDescription","StyleCode","brandCode","toString","substr","brandNames","missItemCode","handleQuantity","notify","verticalAlign","horizontalAlign","notification","notifType","$notify","component","type","props","customValue","_this4","_this5","_this6","addItem","saveItem","boxID","_this7","flag","quantity","parseInt","tempItem","description","Size","categorybrand","cancelItem","addBoxLabel","saveBoxLabel","tempBoxLabel","cancelBoxLabel","submit","_this8","post","email","sessionStorage","getItem","labelBox","_iterator","_createForOfIteratorHelper","_step","s","n","done","box","err","e","f","brand","itemCode","transactionModal","bootstrap","Modal","show","_unused2","_iterator2","_step2","draft","_this9","_iterator3","_step3","draftModal","_unused3","_iterator4","_step4","editBoxLabel","filteredItems","existingItem","find","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGenerator.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div>\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"\n                  fetchChainCode(),\n                    (newTransaction.chainCode = ''),\n                    (newTransaction.branchName = ''),\n                    (newTransaction.transactionType = '')\n                \"\n                :disabled=\"isCompany\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.shortName\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.company\" class=\"label-font\"\n                >Company is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"\n                  fetchChainName(),\n                    (newTransaction.branchName = ''),\n                    (newTransaction.transactionType = '')\n                \"\n                :disabled=\"isChainCode\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.chainCode\" class=\"label-font\"\n                >Chain Code is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n                @change=\"\n                  (isTransactionType = false), (newTransaction.transactionType = '')\n                \"\n                :disabled=\"isBranchName\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.branchName\" class=\"label-font\"\n                >Branch Name is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n                :disabled=\"isTransactionType\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.transactionType\" class=\"label-font\"\n                >Transaction Type is required.</label\n              >\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" v-show=\"isShowButton\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button\n                  :disabled=\"isEditBLDisabled\"\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#editboxlabelModal\"\n                  @click=\"openModal(newTransaction)\"\n                >\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                <div class=\"col-sm-12\">\n                  <fg-input\n                    placeholder=\"Box Label\"\n                    v-model=\"newBoxLabel\"\n                    class=\"w-100\"\n                  ></fg-input>\n                </div>\n                <div class=\"col-sm-2 mt-n3\">\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"saveBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                  </p-button>\n                  <p-button\n                    type=\"default\"\n                    size=\"sm\"\n                    outline\n                    class=\"font-weight-bold\"\n                    @click.prevent=\"cancelBoxLabel()\"\n                  >\n                    <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                  </p-button>\n                </div>\n                <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                  >Box Label is empty.</label\n                >\n              </div>\n              <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n                >Box Label is required.</label\n              >\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"boxLabel.boxLabel\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.id)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <div\n                    class=\"row\"\n                    v-for=\"newItem in newItemInputBox\"\n                    v-show=\"newItem.id === boxLabel.id\"\n                  >\n                    <div class=\"col-sm-12 d-flex mt-2\" v-if=\"newItem.id == showItemInput\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Item Code\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      />\n                      <!-- <input\n                        :disabled=\"switchItemCode\"\n                        type=\"text\"\n                        v-model=\"newItemInput\"\n                        @input=\"fetchItems\"\n                        @change=\"compareItemCode\"\n                        list=\"items\"\n                        class=\"input-datalist\"\n                      /> -->\n                      <datalist id=\"items\">\n                        <option\n                          v-for=\"item in itemCodeList\"\n                          :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                          :key=\"item.ItemNo\"\n                        ></option>\n                      </datalist>\n                      <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                      <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"saveItem(boxLabel.id)\"\n                      >\n                        <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                      </p-button>\n                      <p-button\n                        type=\"default\"\n                        size=\"sm\"\n                        class=\"font-weight-bold\"\n                        @click.prevent=\"cancelItem()\"\n                      >\n                        <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                      </p-button>\n                    </div>\n                    <label v-show=\"isRightCode\" class=\"label-font font-weight-normal\"\n                      >Invalid Item Code.</label\n                    >\n                    <label v-show=\"isNewItem\" class=\"label-font font-weight-normal\"\n                      >Item code is empty.</label\n                    >\n\n                    <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"nowrap\">Description</th>\n                        <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-show=\"boxLabel.id == item.boxNumber\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.code\"\n                      >\n                        <th scope=\"row\" class=\"px-3 d-flex\">\n                          <button\n                            class=\"table-delete-button\"\n                            @click.prevent=\"removeItem(item.code, item.boxNumber)\"\n                          >\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </button>\n                          {{ item.code }}\n                        </th>\n                        <td class=\"cell px-3\" style=\"width: 550px\">\n                          {{ item.description }}\n                        </td>\n                        <td class=\"cell px-3\" style=\"width: 300px\">\n                          {{ item.categorybrand }}\n                        </td>\n                        <td class=\"cell\" style=\"width: 50px\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                            @keypress=\"numberOnly\"\n                          />\n                        </td>\n                        <!-- <td class=\"cell\">\n                          <span>\n                            <div class=\"btn-group btn-group-sm d-flex flex-row\">\n                              <p-button\n                                type=\"default\"\n                                round\n                                outline\n                                size=\"sm\"\n                                @click=\"item.quantity > 0 ? item.quantity-- : 0\"\n                              >\n                                <i class=\"nc-icon nc-simple-delete\"></i>\n                              </p-button>\n                              <input\n                                type=\"text\"\n                                @blur=\"handleQuantity(item.id)\"\n                                v-model=\"item.quantity\"\n                                class=\"table-input-box\"\n                                style=\"width: 75px; text-align: center\"\n                                @keypress=\"numberOnly\"\n                              />\n                              <p-button\n                                type=\"default\"\n                                round\n                                outline\n                                size=\"sm\"\n                                @click=\"item.quantity++\"\n                              >\n                                <i class=\"nc-icon nc-simple-add\"></i>\n                              </p-button>\n                            </div>\n                          </span>\n                        </td> -->\n                        <td class=\"cell\" style=\"width: 300px\">\n                          <el-select\n                            class=\"table-select-box d-inline-block text-truncate\"\n                            size=\"large\"\n                            v-model=\"item.boxNumber\"\n                            @change=\"\n                              editBoxLabel(item.code, item.quantity, item.boxNumber)\n                            \"\n                          >\n                            <el-option\n                              v-for=\"boxLabel in newTransaction.boxLabels\"\n                              class=\"table-select-box d-inline-block text-truncate\"\n                              :value=\"boxLabel.id\"\n                              :label=\"boxLabel.boxLabel\"\n                              :key=\"boxLabel.id\"\n                            >\n                            </el-option>\n                          </el-select>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n              <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n            </collapse>\n          </card>\n        </div>\n\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-warning btn-fill btn-wd\"\n            @click.prevent=\"draft\"\n            v-show=\"isDenied\"\n          >\n            Draft\n          </button>\n          <button\n            :disabled=\"isDisabledSubmit\"\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"submit\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n      <EditBoxLabelModal\n        :transferredData=\"transferredData\"\n        :newItemInputBox=\"newItemInputBox\"\n        @closeModal=\"transferredData\"\n        @renameBoxLabel=\"editingBoxLabel($event)\"\n      ></EditBoxLabelModal>\n    </div>\n    <TransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n    ></TransactionReceiptModal>\n    <DraftModal :transferTransactionID=\"transferTransactionID\"></DraftModal>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\n\nVue.use(Table);\nVue.use(TableColumn);\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    NotifAddBoxLabel,\n    NotifAddItem,\n    NotifDeleteBoxLabel,\n    NotifDeleteItem,\n    NotifDraftSave,\n    NotifItemChangeBoxLabel,\n    NotifItemQuantity,\n    NotifRenameBoxLabel,\n    NotifSubmitTransaction,\n    EditBoxLabelModal,\n    TransactionReceiptModal,\n    DraftModal,\n  },\n  data() {\n    return {\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      hoveredRow: null,\n\n      transactionTypeList: [\n        { value: \"CPO - BranchDisposal\", label: \"Concess Pull-Out Item Disposal\" },\n        { value: \"CPO - Store\", label: \"Concess Pull-Out - Store\" },\n        { value: \"CPO - Warehouse\", label: \"Concess Pull-Out - Warehouse\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      itemss: [\n        { id: 1, name: \"Item 1\" },\n        { id: 2, name: \"Item 2\" },\n        { id: 1, name: \"Item 3\" },\n        { id: 3, name: \"Item 4\" },\n        { id: 2, name: \"Item 5\" },\n      ],\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n    };\n  },\n  mounted() {\n    // this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n  },\n  watch: {\n    newTransaction: {\n      handler(val) {\n        this.validateSubmit();\n      },\n      deep: true,\n    },\n    \"newTransaction.boxLabels\": function (val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function (val, oldVal) {\n      this.showButtons();\n    },\n  },\n  methods: {\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    validateSubmit() {\n      let uniqueItems = [\n        ...new Set(this.newTransaction.items.map((item) => item.boxNumber)),\n      ];\n      let temp = false;\n      for (let j in this.newTransaction.boxLabels) {\n        for (let i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            temp = true;\n            break;\n          } else temp = false;\n        }\n      }\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType &&\n        this.newTransaction.boxLabels.length > 0 &&\n        temp\n      )\n        this.isDisabledSubmit = false;\n      else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel({ index, value, tempBL }) {\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;\n      else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n        console.log(this.newTransaction.boxLabels.length);\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons() {\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType\n      ) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n        else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        console.log(\"ID\", id);\n        console.log(\"Company\", transactionID.split(\"=\")[2]);\n        var company = transactionID.split(\"=\")[2];\n        axiosClient\n          .get(\"/fetchEditDraftBranch\", {\n            params: {\n              company: company,\n              plID: id,\n            },\n          })\n          .then((response) => {\n            console.log(\"Edit Branch:\", response.data, this.itemss);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.transactionType = response.data[0].transactionType;\n\n            if (response.data[0].status == \"denied\") {\n              this.isDenied = false;\n            }\n            axiosClient\n              .get(\"/fetchEditDraftItem\", {\n                params: {\n                  company: company,\n                  plID: id,\n                },\n              })\n              .then((response) => {\n                console.log(\"Edit Item:\", response.data);\n                for (var x = 0; x < response.data.length; x++) {\n                  this.newTransaction.items.push(response.data[x]);\n                  console.log(\"New Items:\", this.newTransaction.items);\n                }\n\n                const idMap = new Map();\n\n                this.newTransaction.items.forEach((item) => {\n                  if (!idMap.has(item.id)) {\n                    // Unique ID\n                    idMap.set(item.id, true);\n                    this.newTransaction.boxLabels.push({\n                      id: item.boxNumber,\n                      boxLabel: item.boxLabel,\n                    });\n                    this.newItemInputBox.push({\n                      id: item.boxNumber,\n                    });\n                  }\n                });\n                console.log(\"Edit Labels:\", this.newTransaction.boxLabels);\n\n                console.log(\n                  \"this.newTransaction.transactionType:\",\n                  this.newTransaction.transactionType\n                );\n\n                if (this.newTransaction.company) {\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.fetchCompany();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.chainCode) {\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.fetchChainName();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.branchName) {\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  this.fetchChainName();\n                }\n\n                if (this.newTransaction.transactionType) {\n                  // console.log(\"Yes\", this.isShowButton);\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  // this.isShowButton = true;\n                  // console.log(\"Yes 2\", this.isShowButton);\n                }\n\n                if (this.newTransaction.items.length) {\n                  console.log(\"Disable\", this.newTransaction.items.length);\n                  this.isCompany = true;\n                  this.isChainCode = true;\n                  this.isBranchName = true;\n                  this.isTransactionType = true;\n                  // this.isShowButton = true;\n                }\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } catch {\n        console.log(\"No Edit\");\n      }\n    },\n\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxNumber) {\n      console.log(\"New DATAs\", code, boxNumber);\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) => item.code !== code || item.boxNumber !== boxNumber\n      );\n\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          console.log(\"Success Item No:\", response.data);\n          console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          !this.newItemInput ? true : (this.isRightCode = true);\n          console.log(\"Not Equal\");\n          console.error(error);\n        });\n    },\n    handleQuantity() {\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n\n      this.$notify({\n        component: notification,\n        // icon: \"nc-icon nc-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      // this.notifyVue(\"bottom\", \"right\");\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n      this.isBranchName = false;\n    },\n    addItem(id) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = id;\n      console.log(\"clicked ID:\", this.showItemInput);\n    },\n    saveItem(boxID) {\n      this.isNewItem = !this.newItemInput ? true : false;\n      console.log(\"item\", this.newItemInput);\n      console.log(\"condition\", this.isNewItem);\n\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n\n      console.log(this.newTransaction.items.length);\n      console.log(\"Items: \", this.newTransaction.items);\n\n      // let str = label.toLowerCase();\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxNumber == boxID\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description:\n                  response.data[x].ItemDescription + \"-\" + response.data[x].Size,\n                categorybrand: this.newBrand,\n                quantity: 1,\n                // boxLabel: label,\n                boxNumber: boxID,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n\n      console.log(\"Items: \", this.newTransaction.items);\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        tempItem = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n        };\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      // this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      // console.log(\"Console:\", this.newTransaction.boxLabels);\n      //Disable the above select buttons\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n      else this.isEditBLDisabled = false;\n    },\n    submit() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n        this.isValid.company = !this.newTransaction.company ? true : false;\n        this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n        this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n        this.isValid.transactionType = !this.newTransaction.transactionType\n          ? true\n          : false;\n        this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n        this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n        console.log(\"Company: \", this.isValid.company);\n\n        console.log(\"company\", this.newTransaction.company);\n        // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n        axiosClient\n          .post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: \"unprocessed\",\n          })\n          .then((response) => {\n            console.log(\"Success Branch Save: \", response.data);\n            this.transferTransactionID = id;\n\n            for (var x = 0; x < this.newTransaction.items.length; x++) {\n              let labelBox = \"\";\n              for (let box of this.newTransaction.boxLabels) {\n                if (box.id == this.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n              axiosClient\n                .post(\"/updatePullOutItemRequest\", {\n                  plID: id,\n                  companyType: this.newTransaction.company,\n                  brand: this.newTransaction.items[x].categorybrand,\n                  boxNumber: this.newTransaction.items[x].boxNumber,\n                  boxLabel: labelBox,\n                  itemCode: this.newTransaction.items[x].code,\n                  quantity: this.newTransaction.items[x].quantity,\n                  email: sessionStorage.getItem(\"Email\"),\n                  status: \"unprocessed\",\n                })\n                .then((response) => {\n                  console.log(\"Success Items Save: \", response.data);\n                  // window.location.href =\n                  //   \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }\n            const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } catch {\n        this.isValid.company = !this.newTransaction.company ? true : false;\n        this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n        this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n        this.isValid.transactionType = !this.newTransaction.transactionType\n          ? true\n          : false;\n        this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n        this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n        console.log(\"Company: \", this.isValid.company);\n\n        console.log(\"company\", this.newTransaction.company);\n        // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n        axiosClient\n          .post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            email: sessionStorage.getItem(\"Email\"),\n            status: \"unprocessed\",\n          })\n          .then((response) => {\n            console.log(\"Success Branch Save: \", response.data);\n            this.transferTransactionID = response.data.id;\n\n            for (var x = 0; x < this.newTransaction.items.length; x++) {\n              let labelBox = \"\";\n              for (let box of this.newTransaction.boxLabels) {\n                if (box.id == this.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n              axiosClient\n                .post(\"/savePullOutItemRequest\", {\n                  plID: response.data.id,\n                  companyType: this.newTransaction.company,\n                  brand: this.newTransaction.items[x].categorybrand,\n                  boxNumber: this.newTransaction.items[x].boxNumber,\n                  boxLabel: labelBox,\n                  itemCode: this.newTransaction.items[x].code,\n                  quantity: this.newTransaction.items[x].quantity,\n                  email: sessionStorage.getItem(\"Email\"),\n                  status: \"unprocessed\",\n                })\n                .then((response) => {\n                  console.log(\"Success Items Save: \", response.data);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }\n            const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n            transactionModal.show();\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n    draft() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n        axiosClient\n          .post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\"),\n          })\n          .then((response) => {\n            console.log(\"Success Branch Save: \", response.data);\n            console.log(\"Items Length:\", this.newTransaction.items.length);\n            for (var x = 0; x < this.newTransaction.items.length; x++) {\n              let labelBox = \"\";\n              for (let box of this.newTransaction.boxLabels) {\n                if (box.id == this.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n              axiosClient\n                .post(\"/updatePullOutItemRequest\", {\n                  plID: id,\n                  companyType: this.newTransaction.company,\n                  brand: this.newTransaction.items[x].categorybrand,\n                  boxNumber: this.newTransaction.items[x].boxNumber,\n                  boxLabel: labelBox,\n                  itemCode: this.newTransaction.items[x].code,\n                  quantity: this.newTransaction.items[x].quantity,\n                  status: \"draft\",\n                  email: sessionStorage.getItem(\"Email\"),\n                })\n                .then((response) => {\n                  console.log(\"Success Items Save: \", response.data);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }\n            const draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      } catch {\n        axiosClient\n          .post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\"),\n          })\n          .then((response) => {\n            console.log(\"Success Branch Save: \", response.data);\n\n            for (var x = 0; x < this.newTransaction.items.length; x++) {\n              let labelBox = \"\";\n              for (let box of this.newTransaction.boxLabels) {\n                if (box.id == this.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n              axiosClient\n                .post(\"/savePullOutItemRequest\", {\n                  plID: response.data.id,\n                  companyType: this.newTransaction.company,\n                  brand: this.newTransaction.items[x].categorybrand,\n                  boxNumber: this.newTransaction.items[x].boxNumber,\n                  boxLabel: labelBox,\n                  itemCode: this.newTransaction.items[x].code,\n                  quantity: this.newTransaction.items[x].quantity,\n                  status: \"draft\",\n                  email: sessionStorage.getItem(\"Email\"),\n                })\n                .then((response) => {\n                  console.log(\"Success Items Save: \", response.data);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }\n            const draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n    editBoxLabel(code, quantity, boxNumber) {\n      console.log(\n        \"Item Code Edit:\",\n        code,\n        \" Quantity:\",\n        quantity,\n        \" Box Number\",\n        boxNumber\n      );\n      console.log(\" == : \", this.newTransaction.items);\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxNumber === boxNumber\n      );\n\n      console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      console.log(\"Unique Items: 1\", uniqueItems);\n      console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      console.log(\"Unique Items: Box Number\", uniqueItems[0].boxNumber);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.table-delete-button {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}