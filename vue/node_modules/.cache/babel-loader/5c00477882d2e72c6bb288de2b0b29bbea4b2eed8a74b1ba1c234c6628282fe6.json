{"ast":null,"code":"import _Loading2 from \"element-ui/lib/theme-chalk/loading.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Loading from \"element-ui/lib/loading\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../../axios\";\nimport UnprocessModal from \"../UnprocessModal.vue\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nVue.use(_DatePicker);\nexport default {\n  props: [\"transferredData\", \"itemData\"],\n  components: {\n    UnprocessModal\n  },\n  watch: {},\n  computed: {},\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [{\n          text: \"Today\",\n          onClick(picker) {\n            picker.$emit(\"pick\", new Date());\n          }\n        }]\n      },\n      dateStarted: \"\",\n      dateEnded: \"\",\n      isDisabled: true\n    };\n  },\n  watch: {\n    \"transferredData.createdBy\": function (val, oldVal) {\n      this.validateGenerate();\n    },\n    dateStarted: \"validateGenerate\",\n    dateEnded: \"validateGenerate\"\n  },\n  methods: {\n    validateDates() {\n      var isStartDate = new Date(this.dateStarted);\n      var isEndDate = new Date(this.dateEnded);\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      if (isStartDate < today) {\n        Message.error(\"Start Date must be today or any date later than today's date.\");\n        return 1;\n      } else if (isEndDate < isStartDate) {\n        Message.error(\"End Date must be equal or any date later than Start date.\");\n        return 2;\n      } else return 0;\n    },\n    generateLetter() {\n      if (this.validateDates() == 0) {\n        const yearStart = this.dateStarted.getFullYear();\n        const monthStart = String(this.dateStarted.getMonth() + 1).padStart(2, \"0\");\n        const dayStart = String(this.dateStarted.getDate()).padStart(2, \"0\");\n        const tempDateStart = `${yearStart}-${monthStart}-${dayStart}`;\n        const yearEnd = this.dateEnded.getFullYear();\n        const monthEnd = String(this.dateEnded.getMonth() + 1).padStart(2, \"0\");\n        const dayEnd = String(this.dateEnded.getDate()).padStart(2, \"0\");\n        const tempDateEnd = `${yearEnd}-${monthEnd}-${dayEnd}`;\n        axiosClient.post(\"/postDatesLetter\", {\n          id: this.transferredData.plID,\n          dateStarted: tempDateStart,\n          dateEnded: tempDateEnd,\n          authorizedPersonnel: this.transferredData.createdBy,\n          company: sessionStorage.getItem(\"Company\"),\n          userID: sessionStorage.getItem(\"UserID\"),\n          status: \"endorsement\"\n        }).then(response => {\n          console.log(\"Success Post Dates Letter\", response.data);\n        }).catch(error => {\n          console.error(error);\n        });\n        axiosClient.post(\"/updateBranchStatus\", {\n          company: sessionStorage.getItem(\"Company\"),\n          id: this.transferredData.plID,\n          status: \"endorsement\",\n          userID: sessionStorage.getItem(\"UserID\"),\n          editStatus: false\n        }).then(response => {\n          var holderName = this.convertToAlphanumeric(\"name\");\n          var holderplID = this.convertToAlphanumeric(\"plID\");\n          var holderDateStart = this.convertToAlphanumeric(\"dateStart\");\n          var holderDateEnd = this.convertToAlphanumeric(\"dateEnd\");\n          var holderEmail = this.convertToAlphanumeric(\"email\");\n          var holderUserID = this.convertToAlphanumeric(\"userID\");\n          var holderStatus = this.convertToAlphanumeric(\"status\");\n          var holderCompany = this.convertToAlphanumeric(\"company\");\n          var holderRegenerate = this.convertToAlphanumeric(\"regenerate\");\n          window.open(\"http://192.168.0.7:90/api/generatePDF?\" + holderName + \"=\" + this.transferredData.createdBy + \"&\" + holderplID + \"=\" + this.transferredData.plID + \"&\" + holderDateStart + \"=\" + tempDateStart + \"&\" + holderDateEnd + \"=\" + tempDateEnd + \"&\" + holderEmail + \"=\" + this.transferredData.promoEmail + \"&\" + holderUserID + \"=\" + sessionStorage.getItem(\"UserID\") + \"&\" + holderStatus + \"=endorsement\" + \"&\" + holderCompany + \"=\" + sessionStorage.getItem(\"Company\") + \"&\" + holderRegenerate + \"=generate\", \"_blank\");\n          let loadingInstance = _Loading.service({\n            fullscreen: true,\n            lock: true,\n            text: \"Loading\",\n            spinner: \"el-icon-loading\",\n            background: \"rgba(0, 0, 0, 0.7)\"\n          });\n          setTimeout(() => {\n            loadingInstance.close();\n            window.location.reload();\n          }, 3000);\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    validateGenerate() {\n      if (this.transferredData.createdBy && this.dateStarted && this.dateEnded) this.isDisabled = false;else this.isDisabled = true;\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n        if (char >= \"0\" && char <= \"9\" || char >= \"a\" && char <= \"z\" || char >= \"A\" && char <= \"Z\") {\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          result += char;\n        }\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","UnprocessModal","use","_Table","_TableColumn","_Select","_Option","_DatePicker","props","components","watch","computed","data","pickerOptions","shortcuts","text","onClick","picker","$emit","Date","dateStarted","dateEnded","isDisabled","transferredData.createdBy","val","oldVal","validateGenerate","methods","validateDates","isStartDate","isEndDate","today","setHours","Message","error","generateLetter","yearStart","getFullYear","monthStart","String","getMonth","padStart","dayStart","getDate","tempDateStart","yearEnd","monthEnd","dayEnd","tempDateEnd","post","id","transferredData","plID","authorizedPersonnel","createdBy","company","sessionStorage","getItem","userID","status","then","response","console","log","catch","editStatus","holderName","convertToAlphanumeric","holderplID","holderDateStart","holderDateEnd","holderEmail","holderUserID","holderStatus","holderCompany","holderRegenerate","window","open","promoEmail","loadingInstance","_Loading","service","fullscreen","lock","spinner","background","setTimeout","close","location","reload","input","result","i","length","char","charCode","charCodeAt","alphanumericChar","toString"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/ModalPullOut/UnprocessModal/ApprovedUnprocessModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"approvedunprocess\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"approvedunprocessLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"approvedunprocessLabel\">\n            {{ transferredData.branchName }}\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"row\">\n            <div class=\"col-12 pull-left\">\n              <fg-input\n                label=\"Assigned Personnel for Pull-Out\"\n                v-model=\"transferredData.createdBy\"\n              ></fg-input>\n            </div>\n            <div class=\"col-6\">\n              <fg-input label=\"Pull-Out Date Started\">\n                <el-date-picker\n                  v-model=\"dateStarted\"\n                  type=\"date\"\n                  placeholder=\"Select a Day\"\n                  :picker-options=\"pickerOptions\"\n                >\n                </el-date-picker>\n              </fg-input>\n            </div>\n            <div class=\"col-6\">\n              <fg-input label=\"Pull-Out Date Ended\">\n                <el-date-picker\n                  v-model=\"dateEnded\"\n                  type=\"date\"\n                  placeholder=\"Select a Day\"\n                  :picker-options=\"pickerOptions\"\n                >\n                </el-date-picker>\n              </fg-input>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer px-5\">\n          <button\n            class=\"btn btn-secondary\"\n            data-bs-target=\"#unprocessModal\"\n            data-bs-toggle=\"modal\"\n          >\n            Cancel\n          </button>\n          <button\n            :disabled=\"isDisabled\"\n            type=\"button\"\n            class=\"btn btn-success\"\n            data-bs-dismiss=\"modal\"\n            @click=\"generateLetter\"\n          >\n            Generate Letter\n          </button>\n        </div>\n      </div>\n    </div>\n    <UnprocessModal></UnprocessModal>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { DatePicker, Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../../axios\";\nimport UnprocessModal from \"../UnprocessModal.vue\";\nimport { Loading } from \"element-ui\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nVue.use(DatePicker);\nexport default {\n  props: [\"transferredData\", \"itemData\"],\n  components: {\n    UnprocessModal,\n  },\n  watch: {},\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: \"Today\",\n            onClick(picker) {\n              picker.$emit(\"pick\", new Date());\n            },\n          },\n        ],\n      },\n      dateStarted: \"\",\n      dateEnded: \"\",\n      isDisabled: true,\n    };\n  },\n  watch: {\n    \"transferredData.createdBy\": function (val, oldVal) {\n      this.validateGenerate();\n    },\n    dateStarted: \"validateGenerate\",\n    dateEnded: \"validateGenerate\",\n  },\n  methods: {\n    validateDates() {\n      var isStartDate = new Date(this.dateStarted); //dd-mm-YYYY\n      var isEndDate = new Date(this.dateEnded); //dd-mm-YYYY\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      if (isStartDate < today) {\n        Message.error(\"Start Date must be today or any date later than today's date.\");\n        return 1;\n      } else if (isEndDate < isStartDate) {\n        Message.error(\"End Date must be equal or any date later than Start date.\");\n        return 2;\n      } else return 0;\n    },\n    generateLetter() {\n      if (this.validateDates() == 0) {\n        const yearStart = this.dateStarted.getFullYear();\n        const monthStart = String(this.dateStarted.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based, so add 1\n        const dayStart = String(this.dateStarted.getDate()).padStart(2, \"0\");\n\n        const tempDateStart = `${yearStart}-${monthStart}-${dayStart}`;\n\n        const yearEnd = this.dateEnded.getFullYear();\n        const monthEnd = String(this.dateEnded.getMonth() + 1).padStart(2, \"0\"); // Months are zero-based, so add 1\n        const dayEnd = String(this.dateEnded.getDate()).padStart(2, \"0\");\n\n        const tempDateEnd = `${yearEnd}-${monthEnd}-${dayEnd}`;\n\n        axiosClient\n          .post(\"/postDatesLetter\", {\n            id: this.transferredData.plID,\n            dateStarted: tempDateStart,\n            dateEnded: tempDateEnd,\n            authorizedPersonnel: this.transferredData.createdBy,\n            company: sessionStorage.getItem(\"Company\"),\n            userID: sessionStorage.getItem(\"UserID\"),\n            status: \"endorsement\",\n          })\n          .then((response) => {\n            console.log(\"Success Post Dates Letter\", response.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        axiosClient\n          .post(\"/updateBranchStatus\", {\n            company: sessionStorage.getItem(\"Company\"),\n            id: this.transferredData.plID,\n            status: \"endorsement\",\n            userID: sessionStorage.getItem(\"UserID\"),\n            editStatus: false,\n          })\n          .then((response) => {\n            var holderName = this.convertToAlphanumeric(\"name\");\n            var holderplID = this.convertToAlphanumeric(\"plID\");\n            var holderDateStart = this.convertToAlphanumeric(\"dateStart\");\n            var holderDateEnd = this.convertToAlphanumeric(\"dateEnd\");\n            var holderEmail = this.convertToAlphanumeric(\"email\");\n            var holderUserID = this.convertToAlphanumeric(\"userID\");\n            var holderStatus = this.convertToAlphanumeric(\"status\");\n            var holderCompany = this.convertToAlphanumeric(\"company\");\n            var holderRegenerate = this.convertToAlphanumeric(\"regenerate\");\n\n            window.open(\n              \"http://192.168.0.7:90/api/generatePDF?\" +\n                holderName +\n                \"=\" +\n                this.transferredData.createdBy +\n                \"&\" +\n                holderplID +\n                \"=\" +\n                this.transferredData.plID +\n                \"&\" +\n                holderDateStart +\n                \"=\" +\n                tempDateStart +\n                \"&\" +\n                holderDateEnd +\n                \"=\" +\n                tempDateEnd +\n                \"&\" +\n                holderEmail +\n                \"=\" +\n                this.transferredData.promoEmail +\n                \"&\" +\n                holderUserID +\n                \"=\" +\n                sessionStorage.getItem(\"UserID\") +\n                \"&\" +\n                holderStatus +\n                \"=endorsement\" +\n                \"&\" +\n                holderCompany +\n                \"=\" +\n                sessionStorage.getItem(\"Company\") +\n                \"&\" +\n                holderRegenerate +\n                \"=generate\",\n              \"_blank\"\n            );\n            let loadingInstance = Loading.service({\n              fullscreen: true,\n              lock: true,\n              text: \"Loading\",\n              spinner: \"el-icon-loading\",\n              background: \"rgba(0, 0, 0, 0.7)\",\n            });\n\n            setTimeout(() => {\n              loadingInstance.close();\n              window.location.reload();\n            }, 3000);\n            // setTimeout(() => {\n            //   window.location.reload();\n            // }, 2000); // Reload after 3 seconds\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    },\n    validateGenerate() {\n      if (this.transferredData.createdBy && this.dateStarted && this.dateEnded)\n        this.isDisabled = false;\n      else this.isDisabled = true;\n    },\n    convertToAlphanumeric(input) {\n      let result = \"\";\n\n      for (let i = 0; i < input.length; i++) {\n        const char = input[i];\n        const charCode = char.charCodeAt(0);\n\n        // Check if the character is alphanumeric\n        if (\n          (char >= \"0\" && char <= \"9\") ||\n          (char >= \"a\" && char <= \"z\") ||\n          (char >= \"A\" && char <= \"Z\")\n        ) {\n          // Convert the character code to a base-36 alphanumeric representation\n          const alphanumericChar = charCode.toString(36);\n          result += alphanumericChar;\n        } else {\n          // Non-alphanumeric characters are left unchanged\n          result += char;\n        }\n      }\n\n      return result;\n    },\n  },\n};\n</script>\n\n<style>\n.form-group {\n  text-align: left !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}