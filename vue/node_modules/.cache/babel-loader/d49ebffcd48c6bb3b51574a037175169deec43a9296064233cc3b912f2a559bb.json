{"ast":null,"code":"import _objectSpread from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/var/www/html/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _Tag2 from \"element-ui/lib/theme-chalk/tag.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tag from \"element-ui/lib/tag\";\nimport _Slider2 from \"element-ui/lib/theme-chalk/slider.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Slider from \"element-ui/lib/slider\";\nimport _TimeSelect2 from \"element-ui/lib/theme-chalk/time-select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TimeSelect from \"element-ui/lib/time-select\";\nimport _DatePicker2 from \"element-ui/lib/theme-chalk/date-picker.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DatePicker from \"element-ui/lib/date-picker\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { Collapse, CollapseItem, Tabs, TabPane, Card, Button } from \"src/components/UIComponents\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport axios, { isCancel } from \"axios\";\nimport * as XLSX from \"xlsx\";\nVue.use(_Table);\nVue.use(_TableColumn);\nexport default {\n  components: (_components = {}, _defineProperty(_components, _DatePicker.name, _DatePicker), _defineProperty(_components, _TimeSelect.name, _TimeSelect), _defineProperty(_components, _Slider.name, _Slider), _defineProperty(_components, _Tag.name, _Tag), _defineProperty(_components, _Input.name, _Input), _defineProperty(_components, Button.name, Button), _defineProperty(_components, _Option.name, _Option), _defineProperty(_components, _Select.name, _Select), _defineProperty(_components, \"PSwitch\", PSwitch), _defineProperty(_components, \"PProgress\", PProgress), _defineProperty(_components, \"TabPane\", TabPane), _defineProperty(_components, \"Tabs\", Tabs), _defineProperty(_components, \"CollapseItem\", CollapseItem), _defineProperty(_components, \"Collapse\", Collapse), _defineProperty(_components, \"Card\", Card), _defineProperty(_components, \"NotificationTemplate\", NotificationTemplate), _defineProperty(_components, \"NotifAddBoxLabel\", NotifAddBoxLabel), _defineProperty(_components, \"NotifAddItem\", NotifAddItem), _defineProperty(_components, \"NotifDeleteBoxLabel\", NotifDeleteBoxLabel), _defineProperty(_components, \"NotifDeleteItem\", NotifDeleteItem), _defineProperty(_components, \"NotifDraftSave\", NotifDraftSave), _defineProperty(_components, \"NotifItemChangeBoxLabel\", NotifItemChangeBoxLabel), _defineProperty(_components, \"NotifItemQuantity\", NotifItemQuantity), _defineProperty(_components, \"NotifRenameBoxLabel\", NotifRenameBoxLabel), _defineProperty(_components, \"NotifSubmitTransaction\", NotifSubmitTransaction), _defineProperty(_components, \"EditBoxLabelModal\", EditBoxLabelModal), _defineProperty(_components, \"TransactionReceiptModal\", TransactionReceiptModal), _defineProperty(_components, \"DraftModal\", DraftModal), _defineProperty(_components, \"ConfirmationSubmitPullOutModal\", ConfirmationSubmitPullOutModal), _components),\n  data: function data() {\n    return {\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [],\n        items: []\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n      transactionTypeList: [{\n        value: \"CPO - BranchDisposal\",\n        label: \"CPO Item for Disposal in the Store c/o Supervisor\"\n      }, {\n        value: \"CPO - Store\",\n        label: \"CPO for Transfer to Another Store\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"CPO Back to WH via In-House Service\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"CPO Back to WH via Chain Distribution Center\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"CPO Back to WH via 3rd Party Trucking\"\n      }, {\n        value: \"CPO - Warehouse\",\n        label: \"CPO Back to WH c/o Supervisor\"\n      }, {\n        value: \"CPO - Warehouse(DC)\",\n        label: \"Concess Direct Pull-Out\"\n      }],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      images: []\n    };\n  },\n  computed: {\n    sortedBoxes: function sortedBoxes() {\n      return this.newTransaction.boxLabels.sort(function (a, b) {\n        return a.boxNumber - b.boxNumber;\n      });\n    },\n    getItemBoxLabel: function getItemBoxLabel() {\n      var _this = this;\n      return function (boxNumber) {\n        var boxLabel = _this.newTransaction.boxLabels.find(function (label) {\n          return label.boxNumber === boxNumber;\n        });\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    }\n  },\n  mounted: function mounted() {\n    var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    var tooltipList = _toConsumableArray(tooltipTriggerList).map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n  },\n  watch: {\n    newTransaction: {\n      handler: function handler(val) {\n        this.validateSubmit();\n      },\n      deep: true\n    },\n    \"newTransaction.boxLabels\": function newTransactionBoxLabels(val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function newTransactionCompany(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function newTransactionChainCode(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function newTransactionBranchName(val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function newTransactionTransactionType(val, oldVal) {\n      this.showButtons();\n    },\n    sortedBoxes: function sortedBoxes(newSortedBoxes) {\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n    }\n  },\n  methods: {\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files);\n    },\n    createImage: function createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          var imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n    },\n    removeImage: function removeImage(index) {\n      this.images.splice(index, 1);\n    },\n    clearImage: function clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage: function handleFileUploadImage(event) {\n      frame.src = URL.createObjectURL(event.target.files[0]);\n      var formData = new FormData();\n      console.log(\"Image:\", event.target.files[0]);\n      formData.append(\"image\", event.target.files[0]);\n      formData.append(\"company\", this.newTransaction.company);\n      console.log(\"Data:\", this.$refs.image.files[0]);\n      var config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      axiosClient.post(\"/upload\", formData, config).then(function (response) {\n        console.log(\"Success Upload Image\", response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    handleFileUpload: function handleFileUpload(event) {\n      var _this2 = this;\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var data = new Uint8Array(e.target.result);\n        var workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        var worksheetName = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[worksheetName];\n        var jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        console.log(\"Excel Data\", jsonData);\n        _this2.myData = jsonData;\n        var arrayBox = [];\n        for (var x = 0; x < _this2.myData.length; x++) {\n          _this2.dataArray.push(_this2.myData[x]);\n          arrayBox.push(_this2.myData[x][1]);\n        }\n        console.log(\"Data:\", _this2.dataArray);\n        console.log(\"Import Excel\", _this2.dataArray.length);\n        var filteredArray = arrayBox.filter(function (value, index, self) {\n          return self.indexOf(value) === index;\n        });\n        var tempBoxLabel = [];\n        for (var x = 0; x < filteredArray.length; x++) {\n          tempBoxLabel = {\n            id: x + 1,\n            boxNumber: x + 1,\n            boxLabel: filteredArray[x]\n          };\n          _this2.newTransaction.boxLabels.push(tempBoxLabel);\n          var tempItem = [];\n          if (_this2.newTransaction.boxLabels.length == 0) {\n            tempItem = {\n              id: _this2.newTransaction.boxLabels.length + 1\n            };\n          } else {\n            tempItem = {\n              id: _this2.newTransaction.boxLabels[_this2.newTransaction.boxLabels.length - 1].id + 1\n            };\n          }\n          _this2.newItemInputBox.push(tempItem);\n        }\n        console.log(filteredArray);\n        _this2.counter = 0;\n        _this2.saveItemsExcel();\n      };\n      reader.readAsArrayBuffer(file);\n    },\n    saveItemsExcel: function saveItemsExcel() {\n      var _this3 = this;\n      if (this.counter < this.dataArray.length) {\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient.get(\"/fetchSameItems\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemNo: this.dataArray[this.counter][2]\n          }\n        }).then(function (response) {\n          console.log(\"Data\", response.data);\n          if (response.data.length == 0) {\n            setTimeout(_this3.saveItemsExcel, 2000);\n          }\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n            for (var i = 0; i < _this3.newTransaction.items.length; i++) {\n              if (_this3.newTransaction.items[i].code == response.data[x].ItemNo && _this3.newTransaction.items[i].boxNumber == boxNumber) {\n                _this3.newTransaction.items[i].quantity = parseInt(_this3.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              var tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription,\n                categorybrand: response.data[x].brandNames,\n                quantity: quantity,\n                size: response.data[x].Size,\n                color: response.data[x].Color,\n                boxNumber: boxNumber\n              };\n              _this3.newTransaction.items.push(tempItem);\n            }\n            console.log(\"Items\", _this3.newTransaction.items);\n            _this3.isAddItem = true;\n            _this3.notifyVue(\"AddItem\", \"bottom\", \"right\");\n            setTimeout(_this3.saveItemsExcel, 2000);\n          }\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n      this.counter++;\n    },\n    numberOnly: function numberOnly($event) {\n      var keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        $event.preventDefault();\n      }\n    },\n    validateSubmit: function validateSubmit() {\n      var uniqueItems = _toConsumableArray(new Set(this.newTransaction.items.map(function (item) {\n        return item.boxNumber;\n      })));\n      var itemsValidation = false;\n      var itemsValidationTemp = false;\n      for (var j in this.newTransaction.boxLabels) {\n        for (var i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (var x in this.newTransaction.items) if (this.newTransaction.items[x].quantity == 0) {\n        itemsValidation = false;\n        var tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title = \"No items should have a quantity with 0.\";\n        tooltip.update();\n        break;\n      }\n      if (!itemsValidationTemp) {\n        var _tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip._config.title = \"Kindly add item/s on every boxes you've added.\";\n        _tooltip.update();\n      }\n      if (!this.newTransaction.company || !this.newTransaction.chainCode || !this.newTransaction.branchName || !this.newTransaction.transactionType) {\n        var _tooltip2 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip2._config.title = \"Complete the form above to enable this button.\";\n        _tooltip2.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        var _tooltip3 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip3._config.title = \"No box added. Kindly add box/es to be able to add item/s.\";\n        _tooltip3.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        var _tooltip4 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip4._config.title = \"No items added. Kindly add item/s for this pull-out request.\";\n        _tooltip4.update();\n      }\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType && this.newTransaction.boxLabels.length > 0 && itemsValidation) {\n        this.isDisabledSubmit = false;\n        var _tooltip5 = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        _tooltip5.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel: function editingBoxLabel(_ref) {\n      var index = _ref.index,\n        value = _ref.value,\n        tempBL = _ref.tempBL;\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns: function enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons: function showButtons() {\n      if (this.newTransaction.company && this.newTransaction.chainCode && this.newTransaction.branchName && this.newTransaction.transactionType) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit: function fetchEdit() {\n      var _this4 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        var company = transactionID.split(\"=\")[2];\n        axiosClient.get(\"/fetchEditDraftBranch\", {\n          params: {\n            company: company,\n            plID: id\n          }\n        }).then(function (response) {\n          _this4.newTransaction.company = response.data[0].company;\n          _this4.newTransaction.branchName = response.data[0].branchName;\n          _this4.newTransaction.chainCode = response.data[0].chainCode;\n          _this4.newTransaction.transactionType = response.data[0].transactionType;\n          if (response.data[0].status == \"denied\" || response.data[0].status == \"endorsement\" || response.data[0].status == \"unprocessed\") {\n            _this4.isDenied = false;\n            _this4.isCancel = true;\n          }\n          if (response.data[0].status == \"endorsement\") {\n            _this4.isApproved = true;\n            _this4.isSubmit = false;\n          }\n          axiosClient.get(\"/fetchEditDraftItem\", {\n            params: {\n              company: company,\n              plID: id\n            }\n          }).then(function (response) {\n            for (var x = 0; x < response.data.length; x++) {\n              _this4.newTransaction.items.push(response.data[x]);\n            }\n            var idMap = new Map();\n            _this4.newTransaction.items.forEach(function (item) {\n              if (!idMap.has(item.id)) {\n                idMap.set(item.id, true);\n                _this4.newTransaction.boxLabels.push({\n                  id: item.boxNumber,\n                  boxLabel: item.boxLabel\n                });\n                _this4.newItemInputBox.push({\n                  id: item.boxNumber\n                });\n              }\n            });\n            if (_this4.newTransaction.company) {\n              _this4.isCompany = false;\n              _this4.isChainCode = false;\n              _this4.fetchCompany();\n              _this4.fetchChainCode();\n            }\n            if (_this4.newTransaction.chainCode) {\n              _this4.isChainCode = false;\n              _this4.isBranchName = false;\n              _this4.fetchChainName();\n              _this4.fetchChainCode();\n            }\n            if (_this4.newTransaction.branchName) {\n              _this4.isBranchName = false;\n              _this4.isTransactionType = false;\n              _this4.fetchChainName();\n            }\n            if (_this4.newTransaction.transactionType) {\n              _this4.isCompany = false;\n              _this4.isChainCode = false;\n              _this4.isBranchName = false;\n              _this4.isTransactionType = false;\n            }\n            if (_this4.newTransaction.items.length) {\n              _this4.isCompany = true;\n              _this4.isChainCode = true;\n              _this4.isBranchName = true;\n              _this4.isTransactionType = true;\n            }\n          }).catch(function (error) {});\n        }).catch(function (error) {});\n      } catch (_unused) {\n        axiosClient.get(\"/fetchPromoBranchInfo\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\")\n          }\n        }).then(function (response) {\n          _this4.newTransaction.company = response.data[0].company;\n          _this4.newTransaction.chainCode = response.data[0].chainCode;\n          _this4.newTransaction.branchName = response.data[0].branchName;\n        }).catch(function (error) {});\n      }\n    },\n    cancelTransaction: function cancelTransaction() {\n      location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n    },\n    updateData: function updateData(updatedData) {},\n    openModal: function openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal: function closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton: function showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton: function hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem: function removeItem(code, boxNumber) {\n      this.validateSubmit();\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== code || item.boxNumber !== boxNumber;\n      });\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n    },\n    fetchItems: function fetchItems() {\n      var _this5 = this;\n      if (this.newItemInput.length >= 4) {\n        if (this.newTransaction.company == \"NBFI\" || this.newTransaction.company == \"CMC\" || this.newTransaction.company == \"ASC\") {\n          axiosClient.get(\"/fetchItemsNBFI\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            _this5.itemCodeList = response.data;\n          }).catch(function (error) {});\n        } else {\n          axiosClient.get(\"/fetchItems\", {\n            params: {\n              ItemNo: this.newItemInput\n            }\n          }).then(function (response) {\n            _this5.itemCodeList = response.data;\n          }).catch(function (error) {});\n        }\n      }\n    },\n    compareItemCode: function compareItemCode() {\n      var _this6 = this;\n      var value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        var parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      if (this.newItemInput.length > 16) {\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {}\n      axiosClient.get(\"/compareItemCode\", {\n        params: {\n          companyType: this.newTransaction.company,\n          ItemNo: this.newItemInput\n        }\n      }).then(function (response) {\n        _this6.newItemCode = response.data[0].ItemNo;\n        _this6.newItemDescription = response.data[0].ItemDescription;\n        _this6.newStyleCode = response.data[0].StyleCode;\n        var brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n        axiosClient.get(\"/fetchBrands\", {\n          params: {\n            companyType: _this6.newTransaction.company,\n            brandCode: brandCode\n          }\n        }).then(function (response) {\n          _this6.newBrand = response.data[0].brandNames;\n        }).catch(function (error) {});\n      }).catch(function (error) {\n        _this6.missItemCode = 0;\n        !_this6.newItemInput ? true : _this6.isRightCode = true;\n      });\n    },\n    handleQuantity: function handleQuantity(item) {\n      if (!item.quantity) {\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue: function notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      var notifType = \"\";\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n      this.$notify({\n        component: notification,\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\"\n        }\n      });\n    },\n    fetchCompany: function fetchCompany() {\n      var _this7 = this;\n      axiosClient.get(\"/fetchCompany\").then(function (response) {\n        _this7.companyList = response.data;\n      }).catch(function (error) {});\n    },\n    fetchChainCode: function fetchChainCode() {\n      var _this8 = this;\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.newTransaction.company\n        }\n      }).then(function (response) {\n        _this8.chainCodeList = response.data;\n      }).catch(function (error) {});\n      this.isChainCode = false;\n    },\n    fetchChainName: function fetchChainName() {\n      var _this9 = this;\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.newTransaction.chainCode\n        }\n      }).then(function (response) {\n        _this9.branchNameList = response.data;\n      }).catch(function (error) {});\n      this.isBranchName = false;\n    },\n    addItem: function addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n      console.log(\"clicked nUMBER:\", this.showItemInput);\n    },\n    saveItem: function saveItem(boxNUMBER) {\n      var _this10 = this;\n      this.isNewItem = !this.newItemInput ? true : false;\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n      axiosClient.get(\"/fetchSameItem\", {\n        params: {\n          company: this.newTransaction.company,\n          ItemCode: this.newItemCode,\n          ItemDescription: this.newItemDescription,\n          StyleCode: this.newStyleCode\n        }\n      }).then(function (response) {\n        for (var x = 0; x < response.data.length; x++) {\n          var flag = true;\n          for (var i = 0; i < _this10.newTransaction.items.length; i++) {\n            if (_this10.newTransaction.items[i].code == response.data[x].ItemNo && _this10.newTransaction.items[i].boxNumber == boxNUMBER) {\n              _this10.newTransaction.items[i].quantity = parseInt(_this10.newTransaction.items[x].quantity) + 1;\n              flag = false;\n              break;\n            }\n          }\n          if (flag) {\n            var tempItem = {\n              code: response.data[x].ItemNo,\n              description: response.data[x].ItemDescription,\n              categorybrand: _this10.newBrand,\n              quantity: 0,\n              size: response.data[x].Size,\n              color: response.data[x].Color,\n              boxNumber: boxNUMBER\n            };\n            _this10.newTransaction.items.push(tempItem);\n          }\n          _this10.isRightCode = false;\n          _this10.isItem = false;\n          _this10.isAddItem = true;\n          _this10.newItemInput = \"\";\n          _this10.showItemInput = \"\";\n          _this10.notifyVue(\"AddItem\", \"bottom\", \"right\");\n        }\n      }).catch(function (error) {});\n    },\n    cancelItem: function cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel: function addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel: function saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      var tempBoxLabel = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      } else {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel\n        };\n      }\n      var tempItem = [];\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1\n        };\n      } else {\n        tempItem = {\n          id: this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id + 1\n        };\n      }\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel: function cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;else this.isEditBLDisabled = false;\n    },\n    submit: function submit(confirmation) {\n      var _this11 = this;\n      if (confirmation) try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        this.isValid.company = !this.newTransaction.company ? true : false;\n        this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n        this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n        this.isValid.transactionType = !this.newTransaction.transactionType ? true : false;\n        this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n        this.isValid.item = !this.newTransaction.items.length ? true : false;\n        if (sessionStorage.getItem(\"Position\") == \"Agent\" || sessionStorage.getItem(\"Position\") == \"Admin\") {\n          var status = \"endorsement\";\n        } else if (sessionStorage.getItem(\"Position\") == \"Admin\") {\n          var status = \"approved\";\n        } else {\n          var status = \"unprocessed\";\n        }\n        axiosClient.post(\"/updatePullOutBranchRequest\", {\n          id: id,\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          email: sessionStorage.getItem(\"Email\"),\n          status: status\n        }).then(function (response) {\n          _this11.transferTransactionID = id;\n          for (var x = 0; x < _this11.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator = _createForOfIteratorHelper(_this11.newTransaction.boxLabels),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var box = _step.value;\n                if (box.id == _this11.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            axiosClient.post(\"/updatePullOutItemRequest\", {\n              plID: id,\n              companyType: _this11.newTransaction.company,\n              brand: _this11.newTransaction.items[x].categorybrand,\n              boxNumber: _this11.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this11.newTransaction.items[x].code,\n              quantity: _this11.newTransaction.items[x].quantity,\n              email: sessionStorage.getItem(\"Email\"),\n              status: status\n            }).then(function (response) {}).catch(function (error) {});\n          }\n          var transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n          transactionModal.show();\n        }).catch(function (error) {});\n      } catch (_unused2) {\n        var formData = new FormData();\n        console.log(\"image:\", this.$refs.image.files);\n      }\n    },\n    draft: function draft() {\n      var _this12 = this;\n      try {\n        var uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        axiosClient.post(\"/updatePullOutBranchRequest\", {\n          id: id,\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          status: \"draft\",\n          email: sessionStorage.getItem(\"Email\")\n        }).then(function (response) {\n          for (var x = 0; x < _this12.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator2 = _createForOfIteratorHelper(_this12.newTransaction.boxLabels),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var box = _step2.value;\n                if (box.id == _this12.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            axiosClient.post(\"/updatePullOutItemRequest\", {\n              plID: id,\n              companyType: _this12.newTransaction.company,\n              brand: _this12.newTransaction.items[x].categorybrand,\n              boxNumber: _this12.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this12.newTransaction.items[x].code,\n              quantity: _this12.newTransaction.items[x].quantity,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\")\n            }).then(function (response) {}).catch(function (error) {});\n          }\n          var draftModal = new bootstrap.Modal(\"#draftModal\");\n          draftModal.show();\n        }).catch(function (error) {});\n      } catch (_unused3) {\n        axiosClient.post(\"/savePullOutBranchRequest\", {\n          chainCode: this.newTransaction.chainCode,\n          companyType: this.newTransaction.company,\n          branchName: this.newTransaction.branchName,\n          transactionType: this.newTransaction.transactionType,\n          status: \"draft\",\n          email: sessionStorage.getItem(\"Email\")\n        }).then(function (response) {\n          for (var x = 0; x < _this12.newTransaction.items.length; x++) {\n            var labelBox = \"\";\n            var _iterator3 = _createForOfIteratorHelper(_this12.newTransaction.boxLabels),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var box = _step3.value;\n                if (box.id == _this12.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            axiosClient.post(\"/savePullOutItemRequest\", {\n              plID: response.data.id,\n              companyType: _this12.newTransaction.company,\n              brand: _this12.newTransaction.items[x].categorybrand,\n              boxNumber: _this12.newTransaction.items[x].boxNumber,\n              boxLabel: labelBox,\n              itemCode: _this12.newTransaction.items[x].code,\n              quantity: _this12.newTransaction.items[x].quantity,\n              status: \"draft\",\n              email: sessionStorage.getItem(\"Email\")\n            }).then(function (response) {}).catch(function (error) {});\n          }\n          var draftModal = new bootstrap.Modal(\"#draftModal\");\n          draftModal.show();\n        }).catch(function (error) {});\n      }\n    },\n    editBoxLabel: function editBoxLabel(code, quantity, boxNumber) {\n      console.log(\"Items\", code, quantity, boxNumber);\n      this.validateSubmit();\n      var filteredItems = this.newTransaction.items.filter(function (item) {\n        return item.code === code && item.boxNumber === boxNumber;\n      });\n      var uniqueItems = [];\n      filteredItems.forEach(function (item) {\n        var existingItem = uniqueItems.find(function (uniqueItem) {\n          return uniqueItem.code === item.code;\n        });\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push(_objectSpread({}, item));\n        }\n      });\n      this.newTransaction.items = this.newTransaction.items.filter(function (item) {\n        return item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber;\n      });\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    }\n  }\n};","map":{"version":3,"names":["Collapse","CollapseItem","Tabs","TabPane","Card","Button","PProgress","PSwitch","Vue","NotificationTemplate","NotifAddBoxLabel","NotifAddItem","NotifDeleteBoxLabel","NotifDeleteItem","NotifDraftSave","NotifItemChangeBoxLabel","NotifItemQuantity","NotifRenameBoxLabel","NotifSubmitTransaction","Swal","axiosClient","EditBoxLabelModal","TransactionReceiptModal","DraftModal","linkName","ConfirmationSubmitPullOutModal","axios","isCancel","XLSX","use","_Table","_TableColumn","components","_components","_defineProperty","_DatePicker","name","_TimeSelect","_Slider","_Tag","_Input","_Option","_Select","data","transferredData","isCompany","isChainCode","isBranchName","isTransactionType","isShowButton","itemCodeList","isEditBLDisabled","isBoxLabel","isItem","isAddItem","isDisabledSubmit","showItemInput","companyList","chainCodeList","branchNameList","newTransaction","company","chainCode","branchName","transactionType","boxLabels","items","newItemInputBox","isValid","boxLabel","item","isApproved","isSubmit","hoveredRow","transactionTypeList","value","label","newBoxLabel","newItemInput","newBrand","newItemDescription","newStyleCode","newItemCode","notifications","topCenter","modals","classic","notice","mini","isNewBoxLabel","isNewItem","isRightCode","transferTransactionID","uniqueItemss","duplicateItemss","isDenied","dataArray","myData","counter","images","computed","sortedBoxes","sort","a","b","boxNumber","getItemBoxLabel","_this","find","mounted","tooltipTriggerList","document","querySelectorAll","tooltipList","_toConsumableArray","map","tooltipTriggerEl","bootstrap","Tooltip","fetchEdit","fetchCompany","window","resolveRouteChange","val","watch","handler","validateSubmit","deep","newTransactionBoxLabels","oldVal","enableDropDowns","newTransactionCompany","showButtons","newTransactionChainCode","newTransactionBranchName","newTransactionTransactionType","newSortedBoxes","set","methods","onFileChange","e","files","target","dataTransfer","length","createImage","vm","index","reader","FileReader","onload","event","imageUrl","result","push","readAsDataURL","removeImage","splice","clearImage","getElementById","frame","src","handleFileUploadImage","URL","createObjectURL","formData","FormData","console","log","append","$refs","image","config","headers","post","then","response","catch","error","handleFileUpload","_this2","file","Uint8Array","workbook","read","type","worksheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","arrayBox","x","filteredArray","filter","self","indexOf","tempBoxLabel","id","tempItem","saveItemsExcel","readAsArrayBuffer","_this3","quantity","get","params","ItemNo","setTimeout","flag","i","code","parseInt","description","ItemDescription","categorybrand","brandNames","size","Size","color","Color","notifyVue","numberOnly","$event","keyCode","which","preventDefault","uniqueItems","Set","itemsValidation","itemsValidationTemp","j","tooltip","getInstance","_config","title","update","disable","editingBoxLabel","_ref","tempBL","_this4","uri","location","href","transactionID","split","plID","status","idMap","Map","forEach","has","fetchChainCode","fetchChainName","_unused","userID","sessionStorage","getItem","cancelTransaction","updateData","updatedData","openModal","closeModal","showButton","itemId","hideButton","removeItem","fetchItems","_this5","compareItemCode","_this6","parts","slice","companyType","StyleCode","brandCode","toString","substr","missItemCode","handleQuantity","notify","verticalAlign","horizontalAlign","notification","notifType","$notify","component","props","customValue","_this7","_this8","_this9","addItem","boxNUMBER","saveItem","_this10","ItemCode","cancelItem","addBoxLabel","saveBoxLabel","cancelBoxLabel","submit","confirmation","_this11","email","labelBox","_iterator","_createForOfIteratorHelper","_step","s","n","done","box","err","f","brand","itemCode","transactionModal","Modal","show","_unused2","draft","_this12","_iterator2","_step2","draftModal","_unused3","_iterator3","_step3","editBoxLabel","filteredItems","existingItem","uniqueItem","_objectSpread"],"sources":["src/components/Dashboard/Views/PullOut/PullOutGeneratorcopy.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <!-- <div class=\"card-header\">\n      <h4 class=\"title\">Pull-Out Requisition Form</h4>\n    </div> -->\n    <div class=\"card-body\">\n      <form>\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Company\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Company\"\n                v-model=\"newTransaction.company\"\n                @change=\"\n                  fetchChainCode(),\n                    (newTransaction.chainCode = ''),\n                    (newTransaction.branchName = ''),\n                    (newTransaction.transactionType = '')\n                \"\n                :disabled=\"isCompany\"\n              >\n                <el-option\n                  v-for=\"option in companyList\"\n                  class=\"select-default\"\n                  :value=\"option.shortName\"\n                  :label=\"option.name + ' (' + option.shortName + ') '\"\n                  :key=\"option.id\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.company\" class=\"label-font\"\n                >Company is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Chain Code\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Chain Code\"\n                v-model=\"newTransaction.chainCode\"\n                @change=\"\n                  fetchChainName(),\n                    (newTransaction.branchName = ''),\n                    (newTransaction.transactionType = '')\n                \"\n                :disabled=\"isChainCode\"\n              >\n                <el-option\n                  v-for=\"option in chainCodeList\"\n                  class=\"select-default\"\n                  :value=\"option.chainCode\"\n                  :label=\"option.chainCode\"\n                  :key=\"option.chainCode\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.chainCode\" class=\"label-font\"\n                >Chain Code is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Branch Name\">\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Branch Name\"\n                v-model=\"newTransaction.branchName\"\n                @change=\"\n                  (isTransactionType = false), (newTransaction.transactionType = '')\n                \"\n                :disabled=\"isBranchName\"\n              >\n                <el-option\n                  v-for=\"option in branchNameList\"\n                  class=\"select-default\"\n                  :value=\"option.branchName\"\n                  :label=\"option.branchName\"\n                  :key=\"option.branchName\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.branchName\" class=\"label-font\"\n                >Branch Name is required.</label\n              >\n            </fg-input>\n          </div>\n          <div class=\"col-sm-3\">\n            <fg-input label=\"Transaction Type\">\n              &nbsp;<i\n                data-bs-toggle=\"tooltip\"\n                class=\"nc-icon nc-alert-circle-i font-weight-bold\"\n              ></i>\n              <el-select\n                class=\"select-default\"\n                size=\"large\"\n                placeholder=\"Select Transaction Type\"\n                v-model=\"newTransaction.transactionType\"\n                :disabled=\"isTransactionType\"\n              >\n                <el-option\n                  v-for=\"option in transactionTypeList\"\n                  class=\"select-default\"\n                  :value=\"option.value\"\n                  :label=\"option.label\"\n                  :key=\"option.label\"\n                >\n                </el-option>\n              </el-select>\n              <label v-show=\"isValid.transactionType\" class=\"label-font\"\n                >Transaction Type is required.</label\n              >\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12\">\n          <card type=\"plain\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\" v-show=\"isShowButton\">\n                <p-button\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  @click.prevent=\"addBoxLabel()\"\n                >\n                  <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Box Label\n                </p-button>\n                <p-button\n                  :disabled=\"isEditBLDisabled\"\n                  type=\"default\"\n                  link\n                  class=\"font-weight-bold\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#editboxlabelModal\"\n                  @click=\"openModal(newTransaction)\"\n                >\n                  <i class=\"nc-icon nc-ruler-pencil font-weight-bold\"></i> Edit Box Label\n                </p-button>\n              </div>\n              <form @submit.prevent=\"saveBoxLabel()\">\n                <div class=\"col-sm-12 mx-n3\" v-show=\"isBoxLabel\">\n                  <div class=\"col-sm-12\">\n                    <fg-input\n                      placeholder=\"Box Label\"\n                      v-model=\"newBoxLabel\"\n                      class=\"w-100\"\n                    ></fg-input>\n                  </div>\n                  <div class=\"col-sm-2 mt-n3\">\n                    <p-button\n                      native-type=\"submit\"\n                      type=\"default\"\n                      size=\"sm\"\n                      outline\n                      class=\"font-weight-bold\"\n                    >\n                      <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                    </p-button>\n                    <p-button\n                      type=\"default\"\n                      size=\"sm\"\n                      outline\n                      class=\"font-weight-bold\"\n                      @click.prevent=\"cancelBoxLabel()\"\n                    >\n                      <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                    </p-button>\n                  </div>\n                  <label v-show=\"isNewBoxLabel\" class=\"label-font pl-3\"\n                    >Box Label is empty.</label\n                  >\n                </div>\n              </form>\n              <label v-show=\"isValid.boxLabel\" class=\"label-font\"\n                >Box Label is required.</label\n              >\n            </div>\n            <collapse>\n              <collapse-item\n                v-for=\"boxLabel in newTransaction.boxLabels\"\n                :key=\"boxLabel.id\"\n                :title=\"`Box Number: ${boxLabel.boxNumber} Box Label: ${boxLabel.boxLabel}`\"\n                name=\"1\"\n                class=\"font-weight-bold\"\n              >\n                <div class=\"row\" v-show=\"isAddItem\">\n                  <button\n                    class=\"btn btn-transparent text-left bold-button\"\n                    @click.prevent=\"addItem(boxLabel.boxNumber)\"\n                  >\n                    <i class=\"nc-icon nc-simple-add font-weight-bold\"></i> Add Item\n                  </button>\n                </div>\n                <div>\n                  <form @submit.prevent=\"saveItem(boxLabel.boxNumber)\">\n                    <div\n                      class=\"row\"\n                      v-for=\"newItem in newItemInputBox\"\n                      v-show=\"newItem.id === boxLabel.boxNumber\"\n                    >\n                      <div\n                        class=\"col-sm-12 d-flex mt-2\"\n                        v-if=\"newItem.id == showItemInput\"\n                      >\n                        <input\n                          type=\"text\"\n                          placeholder=\"Item Code\"\n                          v-model=\"newItemInput\"\n                          @input=\"fetchItems\"\n                          @change=\"compareItemCode\"\n                          list=\"items\"\n                          class=\"input-datalist\"\n                        />\n\n                        <datalist id=\"items\">\n                          <option\n                            v-for=\"item in itemCodeList\"\n                            :value=\"item.ItemNo + ' - ' + item.ItemDescription\"\n                            :key=\"item.ItemNo\"\n                          ></option>\n                        </datalist>\n                        <!-- <fg-input placeholder=\"Item\" v-model=\"newItemInput\" class=\"w-100\"></fg-input> -->\n                        <!-- <label> showItemInput: {{ showItemInput }}</label>\n                          <label> newItem.id: {{ newItem.id }}</label> -->\n                        <p-button\n                          native-type=\"submit\"\n                          type=\"default\"\n                          size=\"sm\"\n                          class=\"font-weight-bold\"\n                        >\n                          <i class=\"nc-icon nc-check-2 font-weight-bold\"></i>\n                        </p-button>\n                        <p-button\n                          type=\"default\"\n                          size=\"sm\"\n                          class=\"font-weight-bold\"\n                          @click.prevent=\"cancelItem()\"\n                        >\n                          <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                        </p-button>\n                      </div>\n                      <label v-show=\"isRightCode\" class=\"label-font font-weight-normal\"\n                        >Invalid Item Code.</label\n                      >\n                      <label v-show=\"isNewItem\" class=\"label-font font-weight-normal\"\n                        >Item code is empty.</label\n                      >\n\n                      <!-- <div class=\"col-sm-12 d-flex\" v-show=\"newItem.id != showItemInput\">\n                          <fg-input :placeholder=\"newItem.id \" v-model=\"newItem.item\" class=\"w-100\"></fg-input>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"saveItem(boxLabel.boxLabel)\">\n                            <i class=\"nc-icon nc-check-2 font-weight-bold\"></i> {{ newItem.id }}\n                          </p-button>\n                          <p-button type=\"default\" size=\"sm\"   class=\"font-weight-bold\" @click.prevent=\"cancelItem()\">\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </p-button>\n                        </div> -->\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"row\">\n                  <table\n                    class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n                  >\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" class=\"text-nowrap\">Item Code</th>\n                        <th scope=\"col\" class=\"text-nowrap\">Description</th>\n                        <th scope=\"col\" class=\"text-nowrap\">Size</th>\n                        <th scope=\"col\" class=\"text-nowrap\">Color</th>\n                        <th scope=\"col\" class=\"text-nowrap\">Category/Brand</th>\n                        <th scope=\"col\" class=\"text-nowrap\">Quantity</th>\n                        <th scope=\"col\" class=\"text-nowrap\">Box Label</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-show=\"boxLabel.boxNumber == item.boxNumber\"\n                        v-for=\"item in newTransaction.items\"\n                        :key=\"item.code\"\n                      >\n                        <th scope=\"row\" class=\"px-3 d-flex\">\n                          <button\n                            class=\"table-delete-button\"\n                            @click.prevent=\"removeItem(item.code, item.boxNumber)\"\n                          >\n                            <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                          </button>\n                          {{ item.code }}\n                        </th>\n                        <td class=\"cell px-3\" style=\"width: 550px\">\n                          {{ item.description }}\n                        </td>\n                        <td class=\"cell px-3\" style=\"width: 10px\">\n                          {{ item.size }}\n                        </td>\n                        <td class=\"cell px-3\" style=\"width: 20px\">\n                          {{ item.color }}\n                        </td>\n                        <td class=\"cell px-3\" style=\"width: 300px\">\n                          {{ item.categorybrand }}\n                        </td>\n                        <!-- <td class=\"cell\" style=\"width: 50px\">\n                          <input\n                            type=\"number\"\n                            @blur=\"handleQuantity(item.id)\"\n                            v-model=\"item.quantity\"\n                            class=\"table-input-box\"\n                            @keypress=\"numberOnly\"\n                          />\n                        </td> -->\n                        <td class=\"cell\">\n                          <span>\n                            <div class=\"btn-group btn-group-sm d-flex flex-row\">\n                              <p-button\n                                type=\"default\"\n                                round\n                                outline\n                                size=\"xs\"\n                                @click=\"item.quantity > 0 ? item.quantity-- : 0\"\n                              >\n                                <i class=\"nc-icon nc-simple-delete\"></i>\n                              </p-button>\n                              <input\n                                type=\"text\"\n                                @blur=\"handleQuantity(item)\"\n                                v-model=\"item.quantity\"\n                                class=\"table-input-box\"\n                                style=\"width: 75px; text-align: center\"\n                                @keypress=\"numberOnly\"\n                              />\n                              <p-button\n                                type=\"default\"\n                                round\n                                outline\n                                size=\"xs\"\n                                @click=\"item.quantity++\"\n                              >\n                                <i class=\"nc-icon nc-simple-add\"></i>\n                              </p-button>\n                            </div>\n                          </span>\n                        </td>\n                        <td class=\"cell\" style=\"width: 300px\">\n                          <el-select\n                            class=\"table-select-box\"\n                            size=\"large\"\n                            v-model=\"item.boxNumber\"\n                            @change=\"\n                              editBoxLabel(item.code, item.quantity, item.boxNumber)\n                            \"\n                          >\n                            <el-option\n                              v-for=\"boxLabel in newTransaction.boxLabels\"\n                              class=\"table-select-box\"\n                              :value=\"boxLabel.boxNumber\"\n                              :label=\"boxLabel.boxLabel\"\n                              :key=\"boxLabel.id\"\n                            >\n                            </el-option>\n                          </el-select>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </collapse-item>\n              <label v-show=\"isValid.item\" class=\"label-font\">Item is required.</label>\n            </collapse>\n          </card>\n          <input type=\"file\" accept=\".xlsx\" @change=\"handleFileUpload\" />\n          <!-- <input type=\"file\" ref=\"image\" @change=\"handleFileUploadImage\" /> -->\n          <div>\n            <h2>Select an image</h2>\n            <input multiple type=\"file\" ref=\"image\" @change=\"onFileChange\" />\n          </div>\n          <div v-if=\"images\">\n            <div v-for=\"(image, index) in images\">\n              <img :src=\"image\" />\n              <button @click=\"removeImage(index)\">Remove image</button>\n            </div>\n          </div>\n          <!-- <div class=\"container col-md-6\">\n            <div class=\"mb-5\">\n              <label for=\"Image\" class=\"form-label\">Upload Image with Preview</label>\n              <input\n                class=\"form-control\"\n                type=\"file\"\n                id=\"formFile\"\n                ref=\"image\"\n                @change=\"handleFileUploadImage\"\n              />\n              <button @click=\"clearImage\" class=\"btn btn-primary mt-3\">Clear</button>\n            </div>\n            <img id=\"frame\" src=\"\" class=\"img-fluid\" />\n          </div> -->\n        </div>\n        <div class=\"text-center\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-warning btn-fill btn-wd\"\n            @click.prevent=\"draft\"\n            v-show=\"isDenied\"\n          >\n            Draft\n          </button>\n          <button\n            type=\"submit\"\n            class=\"btn btn-warning btn-fill btn-wd\"\n            @click.prevent=\"cancelTransaction\"\n            v-show=\"isCancel\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            class=\"btn btn-info btn-fill btn-wd\"\n            @click.prevent=\"submit\"\n            v-show=\"isApproved\"\n          >\n            Approved\n          </button>\n          <span\n            id=\"submitBTN\"\n            class=\"d-inline-block\"\n            tabindex=\"0\"\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"bottom\"\n          >\n            <button\n              :disabled=\"isDisabledSubmit\"\n              type=\"submit\"\n              class=\"btn btn-info btn-fill btn-wd\"\n              data-bs-target=\"#confirmationSubmitPullOut\"\n              data-bs-toggle=\"modal\"\n              v-show=\"isSubmit\"\n            >\n              Submit\n            </button></span\n          >\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n      <EditBoxLabelModal\n        :transferredData=\"transferredData\"\n        :newItemInputBox=\"newItemInputBox\"\n        @closeModal=\"transferredData\"\n        @renameBoxLabel=\"editingBoxLabel($event)\"\n      ></EditBoxLabelModal>\n    </div>\n    <TransactionReceiptModal\n      :transferTransactionID=\"transferTransactionID\"\n    ></TransactionReceiptModal>\n    <DraftModal :transferTransactionID=\"transferTransactionID\"></DraftModal>\n    <ConfirmationSubmitPullOutModal\n      @confirm=\"submit($event)\"\n    ></ConfirmationSubmitPullOutModal>\n  </div>\n</template>\n<script>\nimport {\n  Collapse,\n  CollapseItem,\n  Tabs,\n  TabPane,\n  Card,\n  Button,\n} from \"src/components/UIComponents\";\nimport { DatePicker, TimeSelect, Slider, Tag, Input, Select, Option } from \"element-ui\";\nimport PProgress from \"src/components/UIComponents/Progress.vue\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport Vue from \"vue\";\nimport NotificationTemplate from \"../Components/NotificationTemplate\";\nimport NotifAddBoxLabel from \"../Components/Notification/NotifSuccessAddBoxLabel.vue\";\nimport NotifAddItem from \"../Components/Notification/NotifSuccessAddItem.vue\";\nimport NotifDeleteBoxLabel from \"../Components/Notification/NotifSuccessDeleteBoxLabel.vue\";\nimport NotifDeleteItem from \"../Components/Notification/NotifSuccessDeleteItem.vue\";\nimport NotifDraftSave from \"../Components/Notification/NotifSuccessDraftSave.vue\";\nimport NotifItemChangeBoxLabel from \"../Components/Notification/NotifSuccessItemChangeBoxLabel.vue\";\nimport NotifItemQuantity from \"../Components/Notification/NotifSuccessItemQuantity.vue\";\nimport NotifRenameBoxLabel from \"../Components/Notification/NotifSuccessRenameBoxLabel.vue\";\nimport NotifSubmitTransaction from \"../Components/Notification/NotifSuccessSubmitTransaction.vue\";\nimport Swal from \"sweetalert2\";\nimport { Table, TableColumn } from \"element-ui\";\nimport axiosClient from \"../../../../axios\";\nimport EditBoxLabelModal from \"./PullOutRequests/ModalPullOut/EditBoxLabelModal.vue\";\nimport TransactionReceiptModal from \"./PullOutRequests/ModalPullOut/TransactionReceiptModal.vue\";\nimport DraftModal from \"./PullOutRequests/ModalPullOut/DraftModal.vue\";\nimport linkName from \"../../../../linkName\";\nimport ConfirmationSubmitPullOutModal from \"./PullOutRequests/ModalPullOut/ConfirmationSubmitPullOutModal.vue\";\nimport axios, { isCancel } from \"axios\";\nimport * as XLSX from \"xlsx\";\n\nVue.use(Table);\nVue.use(TableColumn);\n\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PSwitch,\n    PProgress,\n    TabPane,\n    Tabs,\n    CollapseItem,\n    Collapse,\n    Card,\n    NotificationTemplate,\n    NotifAddBoxLabel,\n    NotifAddItem,\n    NotifDeleteBoxLabel,\n    NotifDeleteItem,\n    NotifDraftSave,\n    NotifItemChangeBoxLabel,\n    NotifItemQuantity,\n    NotifRenameBoxLabel,\n    NotifSubmitTransaction,\n    EditBoxLabelModal,\n    TransactionReceiptModal,\n    DraftModal,\n    ConfirmationSubmitPullOutModal,\n  },\n  data() {\n    return {\n      transferredData: \"\",\n      isCompany: false,\n      isChainCode: true,\n      isBranchName: true,\n      isTransactionType: true,\n      isShowButton: false,\n      itemCodeList: [],\n      isEditBLDisabled: false,\n      isBoxLabel: false,\n      isItem: false,\n      isAddItem: true,\n      isDisabledSubmit: true,\n      showItemInput: \"\",\n      companyList: [],\n      chainCodeList: [],\n      branchNameList: [],\n      newTransaction: {\n        //input variable\n        company: \"\",\n        chainCode: \"\",\n        branchName: \"\",\n        transactionType: \"\",\n        boxLabels: [], //list of inputted box label\n        items: [], //list of inputted item\n      },\n      newItemInputBox: [],\n      isValid: {\n        company: false,\n        chainCode: false,\n        branchName: false,\n        transactionType: false,\n        boxLabel: false,\n        item: false,\n      },\n      isApproved: false,\n      isCancel: false,\n      isSubmit: true,\n      hoveredRow: null,\n\n      transactionTypeList: [\n        {\n          value: \"CPO - BranchDisposal\",\n          label: \"CPO Item for Disposal in the Store c/o Supervisor\",\n        },\n        { value: \"CPO - Store\", label: \"CPO for Transfer to Another Store\" },\n        { value: \"CPO - Warehouse\", label: \"CPO Back to WH via In-House Service\" },\n        {\n          value: \"CPO - Warehouse\",\n          label: \"CPO Back to WH via Chain Distribution Center\",\n        },\n        { value: \"CPO - Warehouse\", label: \"CPO Back to WH via 3rd Party Trucking\" },\n        { value: \"CPO - Warehouse\", label: \"CPO Back to WH c/o Supervisor\" },\n        { value: \"CPO - Warehouse(DC)\", label: \"Concess Direct Pull-Out\" },\n      ],\n      newBoxLabel: \"\",\n      newItemInput: \"\",\n      newBrand: \"\",\n      newItemDescription: \"\",\n      newStyleCode: \"\",\n      newItemCode: \"\",\n      notifications: {\n        topCenter: false,\n      },\n      modals: {\n        classic: false,\n        notice: false,\n        mini: false,\n      },\n      isNewBoxLabel: false,\n      isNewItem: false,\n      isRightCode: false,\n      transferTransactionID: \"\",\n      uniqueItemss: [],\n      duplicateItemss: [],\n      isDenied: true,\n      dataArray: [],\n      myData: [],\n      counter: 0,\n      images: [],\n    };\n  },\n  computed: {\n    sortedBoxes() {\n      return this.newTransaction.boxLabels.sort((a, b) => a.boxNumber - b.boxNumber);\n    },\n    getItemBoxLabel() {\n      return (boxNumber) => {\n        const boxLabel = this.newTransaction.boxLabels.find(\n          (label) => label.boxNumber === boxNumber\n        );\n        return boxLabel ? boxLabel.boxLabel : \"\";\n      };\n    },\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\n    );\n    // this.processData();\n    this.fetchEdit();\n    this.fetchCompany();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"Pull-Out Requisition Form\";\n  },\n  watch: {\n    newTransaction: {\n      handler(val) {\n        this.validateSubmit();\n      },\n      deep: true,\n    },\n    \"newTransaction.boxLabels\": function (val, oldVal) {\n      this.enableDropDowns();\n    },\n    \"newTransaction.company\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.chainCode\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.branchName\": function (val, oldVal) {\n      this.showButtons();\n    },\n    \"newTransaction.transactionType\": function (val, oldVal) {\n      this.showButtons();\n    },\n    sortedBoxes(newSortedBoxes) {\n      // Option 1: Using Vue.set\n      Vue.set(this, \"newTransaction.boxLabels\", newSortedBoxes);\n\n      // Option 2: Reassigning the array\n      // this.boxes = newSortedBoxes.slice();\n    },\n  },\n  methods: {\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files);\n    },\n    createImage(files) {\n      var vm = this;\n      for (var index = 0; index < files.length; index++) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n          const imageUrl = event.target.result;\n          vm.images.push(imageUrl);\n        };\n        reader.readAsDataURL(files[index]);\n      }\n    },\n    removeImage(index) {\n      this.images.splice(index, 1);\n    },\n    clearImage() {\n      document.getElementById(\"formFile\").value = null;\n      frame.src = \"\";\n    },\n    handleFileUploadImage(event) {\n      // event.preventDefault();\n      frame.src = URL.createObjectURL(event.target.files[0]);\n      const formData = new FormData();\n      console.log(\"Image:\", event.target.files[0]);\n      // formData.append(\"image\", this.$refs.image.files[0]);\n      formData.append(\"image\", event.target.files[0]);\n      formData.append(\"company\", this.newTransaction.company);\n      // formData.append(\"company\", this.newTransaction.company);\n\n      console.log(\"Data:\", this.$refs.image.files[0]);\n\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n      // Make an AJAX request to the Laravel backend endpoint\n      axiosClient\n        .post(\"/upload\", formData, config)\n        .then((response) => {\n          console.log(\"Success Upload Image\", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, { type: \"array\" });\n\n        const worksheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[worksheetName];\n\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        // header: 1 indicates that the first row contains column headers\n\n        // Save the JSON data to a Vue variable\n        console.log(\"Excel Data\", jsonData);\n        this.myData = jsonData;\n        let arrayBox = [];\n        for (var x = 0; x < this.myData.length; x++) {\n          this.dataArray.push(this.myData[x]);\n          arrayBox.push(this.myData[x][1]);\n        }\n\n        console.log(\"Data:\", this.dataArray);\n\n        console.log(\"Import Excel\", this.dataArray.length);\n\n        const filteredArray = arrayBox.filter((value, index, self) => {\n          return self.indexOf(value) === index;\n        });\n\n        let tempBoxLabel = [];\n        for (var x = 0; x < filteredArray.length; x++) {\n          tempBoxLabel = {\n            id: x + 1,\n            boxNumber: x + 1,\n            boxLabel: filteredArray[x],\n          };\n\n          this.newTransaction.boxLabels.push(tempBoxLabel);\n          let tempItem = [];\n\n          if (this.newTransaction.boxLabels.length == 0) {\n            tempItem = {\n              id: this.newTransaction.boxLabels.length + 1,\n            };\n          } else {\n            tempItem = {\n              id:\n                this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1]\n                  .id + 1,\n            };\n          }\n          this.newItemInputBox.push(tempItem);\n        }\n\n        console.log(filteredArray);\n        // for (var x = 0; x < this.dataArray.length; x++) {\n        //   console.log(\"ItemCode\", this.dataArray[x][2]);\n        // }\n        // var y = 0;\n        // while (y < this.dataArray.length) {\n\n        //   y++;\n        // }\n        this.counter = 0;\n        this.saveItemsExcel();\n      };\n\n      reader.readAsArrayBuffer(file);\n    },\n\n    saveItemsExcel() {\n      if (this.counter < this.dataArray.length) {\n        // console.log(\"Data\", this.dataArray[this.counter - 1]);\n        var boxNumber = this.dataArray[this.counter][0];\n        var quantity = this.dataArray[this.counter][3];\n        axiosClient\n          .get(\"/fetchSameItems\", {\n            params: {\n              company: this.newTransaction.company,\n              ItemNo: this.dataArray[this.counter][2],\n            },\n          })\n          .then((response) => {\n            console.log(\"Data\", response.data);\n            if (response.data.length == 0) {\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n            for (var x = 0; x < response.data.length; x++) {\n              var flag = true;\n\n              for (var i = 0; i < this.newTransaction.items.length; i++) {\n                if (\n                  this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                  this.newTransaction.items[i].boxNumber == boxNumber\n                ) {\n                  this.newTransaction.items[i].quantity =\n                    parseInt(this.newTransaction.items[x].quantity) + 1;\n                  flag = false;\n                  break;\n                }\n              }\n              if (flag) {\n                let tempItem = {\n                  code: response.data[x].ItemNo,\n                  description: response.data[x].ItemDescription,\n                  categorybrand: response.data[x].brandNames,\n                  quantity: quantity,\n                  size: response.data[x].Size,\n                  color: response.data[x].Color,\n                  // boxLabel: label,\n                  boxNumber: boxNumber,\n                };\n                this.newTransaction.items.push(tempItem);\n              }\n\n              console.log(\"Items\", this.newTransaction.items);\n\n              this.isAddItem = true;\n              this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n              setTimeout(this.saveItemsExcel, 2000);\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n      this.counter++;\n    },\n\n    numberOnly($event) {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which;\n      if (keyCode < 48 || keyCode > 57) {\n        // 46 is dot\n        $event.preventDefault();\n      }\n    },\n    validateSubmit() {\n      let uniqueItems = [\n        ...new Set(this.newTransaction.items.map((item) => item.boxNumber)),\n      ];\n      let itemsValidation = false;\n      let itemsValidationTemp = false;\n      for (let j in this.newTransaction.boxLabels) {\n        for (let i in uniqueItems) {\n          if (uniqueItems[i] == this.newTransaction.boxLabels[j].id) {\n            itemsValidationTemp = true;\n            itemsValidation = true;\n            break;\n          } else {\n            itemsValidation = false;\n            itemsValidationTemp = false;\n          }\n        }\n      }\n      for (let x in this.newTransaction.items)\n        if (this.newTransaction.items[x].quantity == 0) {\n          itemsValidation = false;\n          let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n          tooltip._config.title = \"No items should have a quantity with 0.\";\n          tooltip.update();\n          break;\n        }\n      if (!itemsValidationTemp) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title = \"Kindly add item/s on every boxes you've added.\";\n        tooltip.update();\n      }\n      if (\n        !this.newTransaction.company ||\n        !this.newTransaction.chainCode ||\n        !this.newTransaction.branchName ||\n        !this.newTransaction.transactionType\n      ) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title = \"Complete the form above to enable this button.\";\n        tooltip.update();\n      } else if (this.newTransaction.boxLabels.length <= 0) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title =\n          \"No box added. Kindly add box/es to be able to add item/s.\";\n        tooltip.update();\n      } else if (this.newTransaction.items.length <= 0) {\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip._config.title =\n          \"No items added. Kindly add item/s for this pull-out request.\";\n        tooltip.update();\n      }\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType &&\n        this.newTransaction.boxLabels.length > 0 &&\n        itemsValidation\n      ) {\n        this.isDisabledSubmit = false;\n        let tooltip = bootstrap.Tooltip.getInstance(\"#submitBTN\");\n        tooltip.disable();\n      } else this.isDisabledSubmit = true;\n    },\n    editingBoxLabel({ index, value, tempBL }) {\n      if (value) this.newTransaction.boxLabels[index].boxLabel = value;\n      else this.newTransaction.boxLabels[index].boxLabel = tempBL;\n    },\n    enableDropDowns() {\n      if (this.newTransaction.boxLabels.length == 0) {\n        this.isCompany = false;\n        this.isChainCode = false;\n        this.isBranchName = false;\n        this.isTransactionType = false;\n        this.isEditBLDisabled = true;\n        // console.log(this.newTransaction.boxLabels.length);\n      } else this.isEditBLDisabled = false;\n    },\n    showButtons() {\n      if (\n        this.newTransaction.company &&\n        this.newTransaction.chainCode &&\n        this.newTransaction.branchName &&\n        this.newTransaction.transactionType\n      ) {\n        this.isShowButton = true;\n        if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n        else this.isEditBLDisabled = false;\n      } else this.isShowButton = false;\n    },\n    fetchEdit() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n        // console.log(\"ID\", id);\n        // console.log(\"Company\", transactionID.split(\"=\")[2]);\n        var company = transactionID.split(\"=\")[2];\n        axiosClient\n          .get(\"/fetchEditDraftBranch\", {\n            params: {\n              company: company,\n              plID: id,\n            },\n          })\n          .then((response) => {\n            // console.log(\"Edit Branch:\", response.data, this.itemss);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.branchName = response.data[0].branchName;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.transactionType = response.data[0].transactionType;\n\n            if (\n              response.data[0].status == \"denied\" ||\n              response.data[0].status == \"endorsement\" ||\n              response.data[0].status == \"unprocessed\"\n            ) {\n              this.isDenied = false;\n              this.isCancel = true;\n            }\n\n            if (response.data[0].status == \"endorsement\") {\n              this.isApproved = true;\n              this.isSubmit = false;\n            }\n\n            axiosClient\n              .get(\"/fetchEditDraftItem\", {\n                params: {\n                  company: company,\n                  plID: id,\n                },\n              })\n              .then((response) => {\n                // console.log(\"Edit Item:\", response.data);\n                for (var x = 0; x < response.data.length; x++) {\n                  this.newTransaction.items.push(response.data[x]);\n                  // console.log(\"New Items:\", this.newTransaction.items);\n                }\n\n                const idMap = new Map();\n\n                this.newTransaction.items.forEach((item) => {\n                  if (!idMap.has(item.id)) {\n                    // Unique ID\n                    idMap.set(item.id, true);\n                    this.newTransaction.boxLabels.push({\n                      id: item.boxNumber,\n                      boxLabel: item.boxLabel,\n                    });\n                    this.newItemInputBox.push({\n                      id: item.boxNumber,\n                    });\n                  }\n                });\n                // console.log(\"Edit Labels:\", this.newTransaction.boxLabels);\n\n                // console.log(\n                //   \"this.newTransaction.transactionType:\",\n                //   this.newTransaction.transactionType\n                // );\n\n                if (this.newTransaction.company) {\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.fetchCompany();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.chainCode) {\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.fetchChainName();\n                  this.fetchChainCode();\n                }\n\n                if (this.newTransaction.branchName) {\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  this.fetchChainName();\n                }\n\n                if (this.newTransaction.transactionType) {\n                  // console.log(\"Yes\", this.isShowButton);\n                  this.isCompany = false;\n                  this.isChainCode = false;\n                  this.isBranchName = false;\n                  this.isTransactionType = false;\n                  // this.isShowButton = true;\n                  // console.log(\"Yes 2\", this.isShowButton);\n                }\n\n                if (this.newTransaction.items.length) {\n                  // console.log(\"Disable\", this.newTransaction.items.length);\n                  this.isCompany = true;\n                  this.isChainCode = true;\n                  this.isBranchName = true;\n                  this.isTransactionType = true;\n                  // this.isShowButton = true;\n                }\n              })\n              .catch((error) => {\n                // console.error(error);\n              });\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      } catch {\n        // console.log(\"No Edit\");\n        //Fetching Promo Info\n        axiosClient\n          .get(\"/fetchPromoBranchInfo\", {\n            params: {\n              userID: sessionStorage.getItem(\"UserID\"),\n            },\n          })\n          .then((response) => {\n            // console.log(\"Promo Branch Info:\", response.data);\n            this.newTransaction.company = response.data[0].company;\n            this.newTransaction.chainCode = response.data[0].chainCode;\n            this.newTransaction.branchName = response.data[0].branchName;\n          })\n          .catch((error) => {\n            // console.error(error);\n          });\n      }\n    },\n    cancelTransaction() {\n      location.href = \"http://192.168.0.7:4040/#/pull-out/requests\";\n    },\n    updateData(updatedData) {\n      // this.newTransaction.boxLabels = updatedData;\n      // console.log(\"das\", updatedData);\n    },\n    openModal(data) {\n      this.transferredData = data;\n    },\n    closeModal() {\n      this.transferredData = \"\";\n    },\n    showButton(itemId) {\n      this.hoveredRow = itemId;\n    },\n    hideButton(itemId) {\n      this.hoveredRow = null;\n    },\n    removeItem(code, boxNumber) {\n      this.validateSubmit();\n      // console.log(\"New DATAs\", code, boxNumber);\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) => item.code !== code || item.boxNumber !== boxNumber\n      );\n\n      this.notifyVue(\"DeleteItem\", \"bottom\", \"right\");\n\n      // alert(\"Your data: \" + JSON.stringify(data));\n\n      // console.log(\"New DATA\", data);\n    },\n    fetchItems() {\n      if (this.newItemInput.length >= 4) {\n        if (\n          this.newTransaction.company == \"NBFI\" ||\n          this.newTransaction.company == \"CMC\" ||\n          this.newTransaction.company == \"ASC\"\n        ) {\n          axiosClient\n            .get(\"/fetchItemsNBFI\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        } else {\n          axiosClient\n            .get(\"/fetchItems\", {\n              params: {\n                ItemNo: this.newItemInput,\n              },\n            }) // Make a GET request to the specified URL\n            .then((response) => {\n              //console.log(\"Item Code Response: \", response.data);\n              this.itemCodeList = response.data; // Update the 'data' variable with the retrieved data\n\n              // // this.itemCodeArray = Object.keys(this.itemCodeList).map((ItemNo) => ({\n              // //   ItemNo: ItemNo,\n              // // }));\n              //     console.log(\"Success Array Item: \", this.itemCodeArray);\n              //    console.log(\"Success Item: \", response.data);\n              //this.validateItemCode();\n            })\n            .catch((error) => {\n              // console.error(error.reponse); // Handle any errors that may occur\n            });\n        }\n      }\n    },\n    compareItemCode() {\n      let value = this.newItemInput;\n      if (value.indexOf(\" - \") >= 0) {\n        let parts = value.split(\" - \");\n        this.newItemInput = parts[0];\n      }\n      // console.log(\"Length Item Code:\", this.newItemCode.length > 16);\n      if (this.newItemInput.length > 16) {\n        // this.showTooltip = true;\n        this.newItemInput = this.newItemInput.slice(0, 16);\n      } else {\n        // this.showTooltip = false;\n      }\n      axiosClient\n        .get(\"/compareItemCode\", {\n          params: {\n            companyType: this.newTransaction.company,\n            ItemNo: this.newItemInput,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Success Item No:\", response.data);\n          //console.log(\"Success Item Description\", response.data[0].ItemDescription);\n          this.newItemCode = response.data[0].ItemNo;\n          this.newItemDescription = response.data[0].ItemDescription;\n          this.newStyleCode = response.data[0].StyleCode;\n          // console.log(\n          //   \"Convert to String Item Description\",\n          //   response.data[0].ItemDescription.toString()\n          // );\n          let brandCode = response.data[0].ItemNo.toString().substr(1, 2);\n\n          // console.log(\"Brand Code\", brandCode);\n\n          axiosClient\n            .get(\"/fetchBrands\", {\n              params: {\n                companyType: this.newTransaction.company,\n                brandCode: brandCode,\n              },\n            })\n            .then((response) => {\n              //console.log(\"Success\", response.data);\n              this.newBrand = response.data[0].brandNames;\n              // console.log(\"Box Data:\", this.boxes);\n              // console.log(\"Box Count:\", this.boxes.length);\n              // if (this.boxes.length == 1) {\n              //   this.newItemBoxType = this.boxes[0].boxType + \"-\" + this.boxes[0].id;\n              //   // console.log(\"TEst\", this.boxes[0].boxType);\n              // }\n              // this.$refs.Quantity.focus();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        })\n        .catch((error) => {\n          this.missItemCode = 0;\n          !this.newItemInput ? true : (this.isRightCode = true);\n          //console.log(\"Not Equal\");\n          //console.error(error);\n        });\n    },\n    handleQuantity(item) {\n      //console.log(\"Item Quantity\", item.quantity);\n      if (!item.quantity) {\n        //console.log(\"Empty\");\n        item.quantity = 0;\n      }\n      this.notifyVue(\"ItemQuantity\", \"bottom\", \"right\");\n    },\n    notifyVue(notify, verticalAlign, horizontalAlign) {\n      var notification = \"\";\n      let notifType = \"\";\n\n      if (notify === \"AddBoxLabel\") {\n        notification = NotifAddBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"AddItem\") {\n        notification = NotifAddItem;\n        notifType = \"success\";\n      } else if (notify === \"DeleteBoxLabel\") {\n        notification = NotifDeleteBoxLabel;\n        notifType = \"danger\";\n      } else if (notify === \"DeleteItem\") {\n        notification = NotifDeleteItem;\n        notifType = \"danger\";\n      } else if (notify === \"DraftSave\") {\n        notification = NotifDraftSave;\n        notifType = \"success\";\n      } else if (notify === \"ChangeBoxLabel\") {\n        notification = NotifItemChangeBoxLabel;\n        notifType = \"success\";\n      } else if (notify === \"ItemQuantity\") {\n        notification = NotifItemQuantity;\n        notifType = \"success\";\n      } else if (notify === \"RenameBoxLabel\") {\n        notification = NotifRenameBoxLabel;\n        notifType = \"success\";\n      } else {\n        notification = NotifSubmitTransaction;\n        notifType = \"success\";\n      }\n\n      this.$notify({\n        component: notification,\n        // icon: \"nc-icon nc-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: notifType,\n        props: {\n          customValue: \"Success\",\n        },\n      });\n    },\n    fetchCompany() {\n      axiosClient\n        .get(\"/fetchCompany\")\n        .then((response) => {\n          //console.log(\"Company Response:\", response.data);\n          this.companyList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n    },\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.newTransaction.company,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      // this.notifyVue(\"bottom\", \"right\");\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.newTransaction.chainCode,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Name Response:\", response.data);\n          this.branchNameList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      this.isBranchName = false;\n    },\n    addItem(boxNUMBER) {\n      this.isItem = false;\n      this.isAddItem = false;\n      this.showItemInput = boxNUMBER;\n      console.log(\"clicked nUMBER:\", this.showItemInput);\n    },\n    saveItem(boxNUMBER) {\n      this.isNewItem = !this.newItemInput ? true : false;\n      //console.log(\"item\", this.newItemInput);\n      //console.log(\"condition\", this.isNewItem);\n\n      if (this.isNewItem) {\n        this.isRightCode = false;\n        return 0;\n      }\n\n      //console.log(this.newTransaction.items.length);\n      //console.log(\"Items: \", this.newTransaction.items);\n\n      // let str = label.toLowerCase();\n      //console.log(\"Item No:\", this.newItemCode);\n      //console.log(\"Item Description:\", this.newItemDescription);\n      //console.log(\"Style Code:\", this.newStyleCode);\n      axiosClient\n        .get(\"/fetchSameItem\", {\n          params: {\n            company: this.newTransaction.company,\n            ItemCode: this.newItemCode,\n            ItemDescription: this.newItemDescription,\n            StyleCode: this.newStyleCode,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Same Item:\", response.data);\n          for (var x = 0; x < response.data.length; x++) {\n            var flag = true;\n\n            for (var i = 0; i < this.newTransaction.items.length; i++) {\n              if (\n                this.newTransaction.items[i].code == response.data[x].ItemNo &&\n                this.newTransaction.items[i].boxNumber == boxNUMBER\n              ) {\n                this.newTransaction.items[i].quantity =\n                  parseInt(this.newTransaction.items[x].quantity) + 1;\n                flag = false;\n                break;\n              }\n            }\n            if (flag) {\n              let tempItem = {\n                code: response.data[x].ItemNo,\n                description: response.data[x].ItemDescription,\n                categorybrand: this.newBrand,\n                quantity: 0,\n                size: response.data[x].Size,\n                color: response.data[x].Color,\n                // boxLabel: label,\n                boxNumber: boxNUMBER,\n              };\n              this.newTransaction.items.push(tempItem);\n            }\n            this.isRightCode = false;\n            this.isItem = false;\n            this.isAddItem = true;\n            this.newItemInput = \"\";\n            this.showItemInput = \"\";\n            this.notifyVue(\"AddItem\", \"bottom\", \"right\");\n          }\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n\n      //console.log(\"Items: \", this.newTransaction.items);\n\n      // console.log(this.newListBoxLabel);\n    },\n    cancelItem() {\n      this.isRightCode = false;\n      this.isNewItem = false;\n      this.isItem = false;\n      this.isAddItem = true;\n      this.showItemInput = \"\";\n      this.newItemInput = \"\";\n    },\n    addBoxLabel() {\n      this.isBoxLabel = true;\n      this.isEditBLDisabled = true;\n    },\n    saveBoxLabel() {\n      this.isNewBoxLabel = !this.newBoxLabel ? true : false;\n\n      if (this.isNewBoxLabel) {\n        return 0;\n      }\n      this.isBoxLabel = false;\n      //console.log(this.newTransaction.boxLabels.length);\n      let tempBoxLabel = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempBoxLabel = {\n          id: this.newTransaction.boxLabels.length + 1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      } else {\n        tempBoxLabel = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n          boxNumber: this.newTransaction.boxLabels.length + 1,\n          boxLabel: this.newBoxLabel,\n        };\n      }\n\n      let tempItem = [];\n\n      if (this.newTransaction.boxLabels.length == 0) {\n        tempItem = {\n          id: this.newTransaction.boxLabels.length + 1,\n        };\n      } else {\n        tempItem = {\n          id:\n            this.newTransaction.boxLabels[this.newTransaction.boxLabels.length - 1].id +\n            1,\n        };\n      }\n\n      this.newTransaction.boxLabels.push(tempBoxLabel);\n      this.newItemInputBox.push(tempItem);\n      this.newBoxLabel = \"\";\n      // this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      // console.log(\"Console:\", this.newTransaction.boxLabels);\n      //Disable the above select buttons\n      this.isCompany = true;\n      this.isChainCode = true;\n      this.isBranchName = true;\n      this.isTransactionType = true;\n      this.notifyVue(\"AddBoxLabel\", \"bottom\", \"right\");\n      this.isEditBLDisabled = false;\n    },\n    cancelBoxLabel() {\n      this.isNewBoxLabel = false;\n      this.isBoxLabel = false;\n      this.newBoxLabel = \"\";\n      if (this.newTransaction.boxLabels.length == 0) this.isEditBLDisabled = true;\n      else this.isEditBLDisabled = false;\n    },\n    submit(confirmation) {\n      if (confirmation)\n        try {\n          const uri = window.location.href;\n          var transactionID = uri.split(\"?\")[1];\n          var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n          this.isValid.company = !this.newTransaction.company ? true : false;\n          this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          this.isValid.transactionType = !this.newTransaction.transactionType\n            ? true\n            : false;\n          this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          this.isValid.item = !this.newTransaction.items.length ? true : false;\n\n          //console.log(\"Company: \", this.isValid.company);\n\n          //console.log(\"company\", this.newTransaction.company);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n\n          if (\n            sessionStorage.getItem(\"Position\") == \"Agent\" ||\n            sessionStorage.getItem(\"Position\") == \"Admin\"\n          ) {\n            var status = \"endorsement\";\n          } else if (sessionStorage.getItem(\"Position\") == \"Admin\") {\n            var status = \"approved\";\n          } else {\n            var status = \"unprocessed\";\n          }\n          axiosClient\n            .post(\"/updatePullOutBranchRequest\", {\n              id: id,\n              chainCode: this.newTransaction.chainCode,\n              companyType: this.newTransaction.company,\n              branchName: this.newTransaction.branchName,\n              transactionType: this.newTransaction.transactionType,\n              email: sessionStorage.getItem(\"Email\"),\n              status: status,\n            })\n            .then((response) => {\n              //console.log(\"Success Branch Save: \", response.data);\n              this.transferTransactionID = id;\n\n              for (var x = 0; x < this.newTransaction.items.length; x++) {\n                let labelBox = \"\";\n                for (let box of this.newTransaction.boxLabels) {\n                  if (box.id == this.newTransaction.items[x].boxNumber) {\n                    labelBox = box.boxLabel;\n                  }\n                }\n                axiosClient\n                  .post(\"/updatePullOutItemRequest\", {\n                    plID: id,\n                    companyType: this.newTransaction.company,\n                    brand: this.newTransaction.items[x].categorybrand,\n                    boxNumber: this.newTransaction.items[x].boxNumber,\n                    boxLabel: labelBox,\n                    itemCode: this.newTransaction.items[x].code,\n                    quantity: this.newTransaction.items[x].quantity,\n                    email: sessionStorage.getItem(\"Email\"),\n                    status: status,\n                  })\n                  .then((response) => {\n                    //console.log(\"Success Items Save: \", response.data);\n                    // window.location.href =\n                    //   \"http://192.168.0.7:4040/#/pull-out/requisition-form\";\n                  })\n                  .catch((error) => {\n                    //console.error(error);\n                  });\n              }\n              const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n              transactionModal.show();\n            })\n            .catch((error) => {\n              //console.error(error);\n            });\n        } catch {\n          const formData = new FormData();\n\n          // formData.append(\"image\", this.$refs.image.files[0]);\n\n          console.log(\"image:\", this.$refs.image.files);\n\n          // const config = {\n          //   headers: {\n          //     \"content-type\": \"multipart/form-data\",\n          //   },\n          // };\n          // // Make an AJAX request to the Laravel backend endpoint\n          // axiosClient\n          //   .post(\"/upload\", formData, config)\n          //   .then((response) => {\n          //     console.log(\"Success Upload Image\", response.data);\n          //   })\n          //   .catch((error) => {\n          //     console.error(error);\n          //   });\n          // this.isValid.company = !this.newTransaction.company ? true : false;\n          // this.isValid.chainCode = !this.newTransaction.chainCode ? true : false;\n          // this.isValid.branchName = !this.newTransaction.branchName ? true : false;\n          // this.isValid.transactionType = !this.newTransaction.transactionType\n          //   ? true\n          //   : false;\n          // this.isValid.boxLabel = !this.newTransaction.boxLabels.length ? true : false;\n          // this.isValid.item = !this.newTransaction.items.length ? true : false;\n          //console.log(\"Company: \", this.isValid.company);\n          //console.log(\"company\", this.newTransaction.company);\n          // alert(\"Your data: \" + JSON.stringify(this.newTransaction));\n          // axiosClient\n          //   .post(\"/savePullOutBranchRequest\", {\n          //     chainCode: this.newTransaction.chainCode,\n          //     companyType: this.newTransaction.company,\n          //     branchName: this.newTransaction.branchName,\n          //     transactionType: this.newTransaction.transactionType,\n          //     email: sessionStorage.getItem(\"Email\"),\n          //     status: \"unprocessed\",\n          //   })\n          //   .then((response) => {\n          //     //console.log(\"Success Branch Save: \", response.data);\n          //     this.transferTransactionID = response.data.id;\n          //     for (var x = 0; x < this.newTransaction.items.length; x++) {\n          //       let labelBox = \"\";\n          //       for (let box of this.newTransaction.boxLabels) {\n          //         if (box.id == this.newTransaction.items[x].boxNumber) {\n          //           labelBox = box.boxLabel;\n          //         }\n          //       }\n          //       axiosClient\n          //         .post(\"/savePullOutItemRequest\", {\n          //           plID: response.data.id,\n          //           companyType: this.newTransaction.company,\n          //           brand: this.newTransaction.items[x].categorybrand,\n          //           boxNumber: this.newTransaction.items[x].boxNumber,\n          //           boxLabel: labelBox,\n          //           itemCode: this.newTransaction.items[x].code,\n          //           quantity: this.newTransaction.items[x].quantity,\n          //           email: sessionStorage.getItem(\"Email\"),\n          //           status: \"unprocessed\",\n          //         })\n          //         .then((response) => {\n          //           //console.log(\"Success Items Save: \", response.data);\n          //         })\n          //         .catch((error) => {\n          //           //console.error(error);\n          //         });\n          //     }\n          //     const transactionModal = new bootstrap.Modal(\"#transactionReceipt\");\n          //     transactionModal.show();\n          //   })\n          //   .catch((error) => {\n          //     //console.error(error);\n          //   });\n        }\n    },\n    draft() {\n      try {\n        const uri = window.location.href;\n        var transactionID = uri.split(\"?\")[1];\n        var id = transactionID.split(\"=\")[1].split(\"&\")[0];\n\n        axiosClient\n          .post(\"/updatePullOutBranchRequest\", {\n            id: id,\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\"),\n          })\n          .then((response) => {\n            //console.log(\"Success Branch Save: \", response.data);\n            //console.log(\"Items Length:\", this.newTransaction.items.length);\n            for (var x = 0; x < this.newTransaction.items.length; x++) {\n              let labelBox = \"\";\n              for (let box of this.newTransaction.boxLabels) {\n                if (box.id == this.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n              axiosClient\n                .post(\"/updatePullOutItemRequest\", {\n                  plID: id,\n                  companyType: this.newTransaction.company,\n                  brand: this.newTransaction.items[x].categorybrand,\n                  boxNumber: this.newTransaction.items[x].boxNumber,\n                  boxLabel: labelBox,\n                  itemCode: this.newTransaction.items[x].code,\n                  quantity: this.newTransaction.items[x].quantity,\n                  status: \"draft\",\n                  email: sessionStorage.getItem(\"Email\"),\n                })\n                .then((response) => {\n                  //console.log(\"Success Items Save: \", response.data);\n                })\n                .catch((error) => {\n                  //console.error(error);\n                });\n            }\n            const draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          })\n          .catch((error) => {\n            //console.error(error);\n          });\n      } catch {\n        axiosClient\n          .post(\"/savePullOutBranchRequest\", {\n            chainCode: this.newTransaction.chainCode,\n            companyType: this.newTransaction.company,\n            branchName: this.newTransaction.branchName,\n            transactionType: this.newTransaction.transactionType,\n            status: \"draft\",\n            email: sessionStorage.getItem(\"Email\"),\n          })\n          .then((response) => {\n            //console.log(\"Success Branch Save: \", response.data);\n\n            for (var x = 0; x < this.newTransaction.items.length; x++) {\n              let labelBox = \"\";\n              for (let box of this.newTransaction.boxLabels) {\n                if (box.id == this.newTransaction.items[x].boxNumber) {\n                  labelBox = box.boxLabel;\n                }\n              }\n              axiosClient\n                .post(\"/savePullOutItemRequest\", {\n                  plID: response.data.id,\n                  companyType: this.newTransaction.company,\n                  brand: this.newTransaction.items[x].categorybrand,\n                  boxNumber: this.newTransaction.items[x].boxNumber,\n                  boxLabel: labelBox,\n                  itemCode: this.newTransaction.items[x].code,\n                  quantity: this.newTransaction.items[x].quantity,\n                  status: \"draft\",\n                  email: sessionStorage.getItem(\"Email\"),\n                })\n                .then((response) => {\n                  //console.log(\"Success Items Save: \", response.data);\n                })\n                .catch((error) => {\n                  //console.error(error);\n                });\n            }\n            const draftModal = new bootstrap.Modal(\"#draftModal\");\n            draftModal.show();\n          })\n          .catch((error) => {\n            //console.error(error);\n          });\n      }\n    },\n    editBoxLabel(code, quantity, boxNumber) {\n      console.log(\"Items\", code, quantity, boxNumber);\n      this.validateSubmit();\n      //console.log(\n      //   \"Item Code Edit:\",\n      //   code,\n      //   \" Quantity:\",\n      //   quantity,\n      //   \" Box Number\",\n      //   boxNumber\n      // );\n      //console.log(\" == : \", this.newTransaction.items);\n      var filteredItems = this.newTransaction.items.filter(\n        (item) => item.code === code && item.boxNumber === boxNumber\n      );\n\n      //console.log(\"Filtered Items: \", filteredItems);\n      var uniqueItems = [];\n      filteredItems.forEach((item) => {\n        var existingItem = uniqueItems.find(\n          (uniqueItem) => uniqueItem.code === item.code\n        );\n        if (existingItem) {\n          existingItem.quantity += item.quantity;\n        } else {\n          uniqueItems.push({ ...item });\n        }\n      });\n      // The uniqueItems array will contain unique items based on itemCode, with quantities added up.\n      //console.log(\"Unique Items: 1\", uniqueItems);\n      //console.log(\"Unique Items: Code\", uniqueItems[0].code);\n      //console.log(\"Unique Items: Box Number\", uniqueItems[0].boxNumber);\n\n      this.newTransaction.items = this.newTransaction.items.filter(\n        (item) =>\n          item.code !== uniqueItems[0].code || item.boxNumber !== uniqueItems[0].boxNumber\n      );\n      this.newTransaction.items.push(uniqueItems[0]);\n      this.notifyVue(\"ChangeBoxLabel\", \"bottom\", \"right\");\n    },\n  },\n};\n</script>\n<style>\n.el-select {\n  width: 100%;\n  background-color: white;\n  border: 20px;\n  border-color: blueviolet;\n}\n\n.btn-transparent {\n  background-color: transparent;\n  border: none;\n  color: #000000;\n}\n\n.btn-transparent:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n}\n\n.table-font-size {\n  font-size: 14px;\n}\n\n.table-input-box {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 14px;\n  border: 1px solid transparent;\n  transition: border-color 0.3s ease-in-out;\n  background-color: transparent;\n}\n\n.table-select-box {\n  /* border: 5px solid green !important; */\n  transition: border-color 0.3s ease-in-out;\n  /* background-color: yellow; */\n  border-radius: 0px !important;\n  background-color: transparent !important;\n}\n\n.table-select-box.el-select .el-input input {\n  border-radius: 0px !important;\n  border: 5px solid transparent !important;\n  background-color: transparent;\n}\n\ntd {\n  display: table-cell !important;\n  padding: 0px !important;\n  /* background-color: #111111 !important; */\n}\ntable {\n  border-collapse: collapse !important;\n}\n.bold-button {\n  font-weight: bold !important;\n}\n\n.input-datalist {\n  display: block !important;\n  width: 100% !important;\n  margin-bottom: 10px !important;\n  position: relative !important;\n  appearance: none !important;\n  font-weight: 400 !important;\n  background-clip: padding-box !important;\n  border: 1px solid #66615b !important;\n  border-radius: 5px !important;\n  padding: 9px !important;\n  outline: none;\n  /* border: 1pc solid gray; */\n}\n\n.table-delete-button {\n  background-color: transparent;\n  color: red;\n  border: none;\n  cursor: pointer;\n}\n\n.label-font {\n  color: red !important;\n}\n\n/* .table-delete:hover {\n  color: red !important;\n  cursor: pointer;\n} */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}