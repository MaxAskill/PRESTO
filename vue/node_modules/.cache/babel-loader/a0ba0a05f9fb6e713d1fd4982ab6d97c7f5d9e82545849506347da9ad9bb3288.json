{"ast":null,"code":"import _toConsumableArray from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/home/Projects/PRESTOv1/vue/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport Vue from \"vue\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport AddBranchModal from \"../Maintenance/ModalMaintenance/AddBranchModal.vue\";\nimport UploadBranchModal from \"./ModalMaintenance/UploadBranchModal.vue\";\nimport axios from \"axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PButton: PButton,\n    PPagination: PPagination,\n    PSwitch: PSwitch,\n    AddBranchModal: AddBranchModal,\n    UploadBranchModal: UploadBranchModal\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData: function pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData: function queriedData() {\n      var _this = this;\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      var result = this.tableData.filter(function (row) {\n        var isIncluded = false;\n        var _iterator = _createForOfIteratorHelper(_this.propsToSearch),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            var rowValue = row[key].toString().toLowerCase();\n            if (rowValue.includes && rowValue.includes(_this.searchQuery.toLowerCase())) {\n              isIncluded = true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      company: \"NBFI\",\n      companyType: \"NBFI\",\n      chainCodeList: \"\",\n      pagination: {\n        perPage: 10,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"chainCode\", \"branchCode\", \"branchName\", \"status\"],\n      tableColumns: [{\n        prop: \"chainCode\",\n        label: \"Chain Name\",\n        minWidth: 100\n      }, {\n        prop: \"branchCode\",\n        label: \"Branch Code\",\n        minWidth: 100\n      }, {\n        prop: \"branchName\",\n        label: \"Branch Name\",\n        minWidth: 250\n      }],\n      tableData: []\n    };\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n      axiosClient.get(\"/fetchBranchMaintenance\", {\n        params: {\n          company: this.company\n        }\n      }).then(function (response) {\n        _this2.tableData = response.data;\n        _this2.chainCodeList = _toConsumableArray(new Map(_this2.tableData.map(function (item) {\n          return [item.chainCode, item];\n        })).values());\n        _this2.chainCodeList.sort(function (a, b) {\n          return a.chainCode - b.chainCode;\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    handleEdit: function handleEdit(index, row) {\n      var tempStatus = \"\";\n      if (row.status === \"Active\") {\n        row.status = \"Inactive\";\n        tempStatus = \"Inactive\";\n      } else {\n        row.status = \"Active\";\n        tempStatus = \"Active\";\n      }\n      axiosClient.post(\"/updateBranch\", {\n        company: this.company,\n        id: row.id,\n        status: tempStatus,\n        userID: sessionStorage.getItem(\"UserID\")\n      }).then(function (response) {}).catch(function (error) {\n        console.error(error);\n      });\n    },\n    handleDelete: function handleDelete(index, row) {\n      var indexToDelete = this.tableData.findIndex(function (tableRow) {\n        return tableRow.id === row.id;\n      });\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Vue","PButton","PPagination","axiosClient","PSwitch","AddBranchModal","UploadBranchModal","axios","use","_Table","_TableColumn","_Select","_Option","components","mounted","fetchData","computed","pagedData","tableData","slice","from","to","queriedData","_this","searchQuery","pagination","total","length","result","filter","row","isIncluded","_iterator","_createForOfIteratorHelper","propsToSearch","_step","s","n","done","key","value","rowValue","toString","toLowerCase","includes","err","e","f","highBound","perPage","currentPage","data","company","companyType","chainCodeList","perPageOptions","tableColumns","prop","label","minWidth","methods","_this2","get","params","then","response","_toConsumableArray","Map","map","item","chainCode","values","sort","a","b","catch","error","console","handleEdit","index","tempStatus","status","post","id","userID","sessionStorage","getItem","handleDelete","indexToDelete","findIndex","tableRow","splice"],"sources":["src/components/Dashboard/Views/PullOut/Maintenance/BranchMaintenance.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row mx-1\">\n      <div class=\"col-2 px-1\">\n        <el-select\n          class=\"select-default el-select-w\"\n          placeholder=\"Select Company\"\n          v-model=\"company\"\n          @change=\"fetchData\"\n        >\n          <el-option class=\"select-default\" value=\"EPC\" label=\"EPC\">EPC</el-option>\n          <el-option class=\"select-default\" value=\"NBFI\" label=\"NBFI\">NBFI</el-option>\n        </el-select>\n      </div>\n      <div class=\"col-6\">\n        <fg-input\n          class=\"input-md\"\n          placeholder=\"Search\"\n          v-model=\"searchQuery\"\n          addon-right-icon=\"nc-icon nc-zoom-split\"\n        >\n        </fg-input>\n      </div>\n      <div class=\"col-3 first-btn whitespace-nowrap\">\n        <!-- <button type=\"primary\" class=\"btn\">Add Branch</button> -->\n        <PButton\n          type=\"primary\"\n          class=\"btn-margin\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#addbranchmodal\"\n          >Add Branch</PButton\n        >\n      </div>\n      <div class=\"col-1 px-1\">\n        <p-button\n          type=\"info\"\n          class=\"btn-margin\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#uploadbranchmodal\"\n          >Upload</p-button\n        >\n      </div>\n    </div>\n    <div class=\"row mx-2\">\n      <el-table\n        class=\"table-striped pad-tbl\"\n        :data=\"queriedData\"\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column\n          v-for=\"column in tableColumns\"\n          :key=\"column.label\"\n          :min-width=\"column.minWidth\"\n          :prop=\"column.prop\"\n          :label=\"column.label\"\n        >\n        </el-table-column>\n        <el-table-column :min-width=\"70\" class-name=\"td-actions\" label=\"Status\">\n          <template slot-scope=\"props\">\n            <p-button\n              v-if=\"props.row.status === 'Active'\"\n              type=\"success\"\n              size=\"sm\"\n              @click=\"handleEdit(props.$index, props.row)\"\n            >\n              Active\n            </p-button>\n            <p-button\n              v-else\n              type=\"danger\"\n              size=\"sm\"\n              @click=\"handleEdit(props.$index, props.row)\"\n            >\n              Inactive\n            </p-button>\n            <!-- <p-button\n              type=\"danger\"\n              size=\"sm\"\n              icon\n              @click=\"handleDelete(props.$index, props.row)\"\n            >\n              <i class=\"fa fa-times\"></i>\n            </p-button> -->\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"d-flex justify-content-end pagination-info\">\n      <p class=\"category p-margin\">\n        Showing {{ from + 1 }} to {{ to }} of {{ total }} entries\n      </p>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n      <p-pagination\n        class=\"pull-center\"\n        v-model=\"pagination.currentPage\"\n        :per-page=\"pagination.perPage\"\n        :total=\"pagination.total\"\n      >\n      </p-pagination>\n    </div>\n    <AddBranchModal :company=\"company\" :chainCodeList=\"chainCodeList\"></AddBranchModal>\n    <UploadBranchModal></UploadBranchModal>\n  </div>\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport PButton from \"../../../../UIComponents/Button.vue\";\nimport PPagination from \"../../../../UIComponents/Pagination.vue\";\nimport axiosClient from \"../../../../../axios\";\nimport PSwitch from \"src/components/UIComponents/Switch.vue\";\nimport AddBranchModal from \"../Maintenance/ModalMaintenance/AddBranchModal.vue\";\nimport UploadBranchModal from \"./ModalMaintenance/UploadBranchModal.vue\";\nimport axios from \"axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\n\nexport default {\n  components: {\n    PButton,\n    PPagination,\n    PSwitch,\n    AddBranchModal,\n    UploadBranchModal,\n  },\n  mounted() {\n    this.fetchData();\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter((row) => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString().toLowerCase();\n          if (rowValue.includes && rowValue.includes(this.searchQuery.toLowerCase())) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      company: \"NBFI\",\n      companyType: \"NBFI\",\n      chainCodeList: \"\",\n      pagination: {\n        perPage: 10,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"chainCode\", \"branchCode\", \"branchName\", \"status\"],\n      tableColumns: [\n        {\n          prop: \"chainCode\",\n          label: \"Chain Name\",\n          minWidth: 100,\n        },\n        {\n          prop: \"branchCode\",\n          label: \"Branch Code\",\n          minWidth: 100,\n        },\n        {\n          prop: \"branchName\",\n          label: \"Branch Name\",\n          minWidth: 250,\n        },\n      ],\n      tableData: [],\n    };\n  },\n  methods: {\n    fetchData() {\n      axiosClient\n        .get(\"/fetchBranchMaintenance\", {\n          params: {\n            company: this.company,\n          },\n        })\n        .then((response) => {\n          this.tableData = response.data;\n\n          // Remove duplicates and sort based on 'id' property\n          this.chainCodeList = [\n            ...new Map(this.tableData.map((item) => [item.chainCode, item])).values(),\n          ];\n\n          // Sort the unique items based on 'id' property\n          this.chainCodeList.sort((a, b) => a.chainCode - b.chainCode);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleEdit(index, row) {\n      var tempStatus = \"\";\n      if (row.status === \"Active\") {\n        row.status = \"Inactive\";\n        tempStatus = \"Inactive\";\n      } else {\n        row.status = \"Active\";\n        tempStatus = \"Active\";\n      }\n\n      axiosClient\n        .post(\"/updateBranch\", {\n          company: this.company,\n          id: row.id,\n          status: tempStatus,\n          userID: sessionStorage.getItem(\"UserID\"),\n        })\n        .then((response) => {\n          // console.log(\"Success Update Branch:\", response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.el-table .td-actions {\n  button.btn {\n    margin-right: 5px;\n  }\n}\n.el-select-w {\n  width: 100%;\n}\n.nav-center {\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n}\n.pad-tbl {\n  padding: 0px 0px;\n}\n.btn-margin {\n  margin: 0px 0px;\n}\n.p-margin {\n  margin-bottom: 0px;\n}\n.first-btn {\n  padding-left: 4px;\n  padding-right: 12px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}