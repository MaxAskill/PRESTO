{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from 'vue';\nimport PPagination from '../../../UIComponents/Pagination.vue';\nimport { Card, Tabs, TabPane } from 'src/components/UIComponents';\nimport users from '../Tables/users';\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  components: {\n    PPagination,\n    Tabs,\n    TabPane,\n    Card\n  },\n  computed: {\n    pagedData() {\n      return this.tableData.slice(this.from, this.to);\n    },\n    queriedData() {\n      if (!this.searchQuery) {\n        this.pagination.total = this.tableData.length;\n        return this.pagedData;\n      }\n      let result = this.tableData.filter(row => {\n        let isIncluded = false;\n        for (let key of this.propsToSearch) {\n          let rowValue = row[key].toString();\n          if (rowValue.includes && rowValue.includes(this.searchQuery)) {\n            isIncluded = true;\n          }\n        }\n        return isIncluded;\n      });\n      this.pagination.total = result.length;\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      this.pagination.total = this.tableData.length;\n      return this.tableData.length;\n    }\n  },\n  data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: '',\n      propsToSearch: ['name', 'email', 'age'],\n      tableColumns: [{\n        prop: 'name',\n        label: 'Name',\n        minWidth: 200\n      }, {\n        prop: 'email',\n        label: 'Email',\n        minWidth: 250\n      }, {\n        prop: 'age',\n        label: 'Age',\n        minWidth: 100\n      }, {\n        prop: 'salary',\n        label: 'Salary',\n        minWidth: 120\n      }],\n      tableData: users\n    };\n  },\n  methods: {\n    handleLike(index, row) {\n      alert(`Your want to like ${row.name}`);\n    },\n    handleEdit(index, row) {\n      alert(`Your want to edit ${row.name}`);\n    },\n    handleDelete(index, row) {\n      let indexToDelete = this.tableData.findIndex(tableRow => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Vue","PPagination","Card","Tabs","TabPane","users","use","_Table","_TableColumn","_Select","_Option","components","computed","pagedData","tableData","slice","from","to","queriedData","searchQuery","pagination","total","length","result","filter","row","isIncluded","key","propsToSearch","rowValue","toString","includes","highBound","perPage","currentPage","data","perPageOptions","tableColumns","prop","label","minWidth","methods","handleLike","index","alert","name","handleEdit","handleDelete","indexToDelete","findIndex","tableRow","id","splice"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <card>\n        <h5 slot=\"header\">Vertical Tabs</h5>\n        <tabs value=\"Description\" tab-content-classes=\"text-center\">\n          <tab-pane title=\"Unprocessed Pull-Out\" key=\"UPO\">\n            <div class=\"col-sm-6\">\n              <el-select\n                class=\"select-default\"\n                v-model=\"pagination.perPage\"\n                placeholder=\"Per page\">\n                <el-option\n                  class=\"select-default\"\n                  v-for=\"item in pagination.perPageOptions\"\n                  :key=\"item\"\n                  :label=\"item\"\n                  :value=\"item\">\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"col-sm-6\">\n                <fg-input class=\"input-md\"\n                          placeholder=\"Search\"\n                          v-model=\"searchQuery\"\n                          addon-right-icon=\"nc-icon nc-zoom-split\">\n                </fg-input>\n            </div>\n            <div class=\"col-sm-12 mt-2\">\n              <el-table class=\"table-striped\"\n                        :data=\"queriedData\"\n                        border\n                        style=\"width: 100%\">\n                <el-table-column v-for=\"column in tableColumns\"\n                                :key=\"column.label\"\n                                :min-width=\"column.minWidth\"\n                                :prop=\"column.prop\"\n                                :label=\"column.label\">\n                </el-table-column>\n                <el-table-column\n                  :min-width=\"120\"\n                  fixed=\"right\"\n                  class-name=\"td-actions\"\n                  label=\"Actions\">\n                  <template slot-scope=\"props\">\n                    <p-button type=\"info\" size=\"sm\" icon @click=\"handleLike(props.$index, props.row)\">\n                      <i class=\"fa fa-user\"></i>\n                    </p-button>\n                    <p-button type=\"success\" size=\"sm\" icon @click=\"handleEdit(props.$index, props.row)\">\n                      <i class=\"fa fa-edit\"></i>\n                    </p-button>\n                    <p-button type=\"danger\" size=\"sm\" icon @click=\"handleDelete(props.$index, props.row)\">\n                      <i class=\"fa fa-times\"></i>\n                    </p-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n            <div class=\"col-sm-6 pagination-info\">\n              <p class=\"category\">Showing {{from + 1}} to {{to}} of {{total}} entries</p>\n            </div>\n            <div class=\"col-sm-6\">\n              <p-pagination class=\"pull-right\"\n                            v-model=\"pagination.currentPage\"\n                            :per-page=\"pagination.perPage\"\n                            :total=\"pagination.total\">\n              </p-pagination>\n            </div>\n          </tab-pane>\n          <tab-pane title=\"Approved Pull-Out\" key=\"APO\">Here is your profile.</tab-pane>\n          <tab-pane title=\"Denied Pull-Out\" key=\"DPO\">Here are your messages.</tab-pane>\n        </tabs>\n      </card>\n    </div>\n  </div>\n</template>\n<script>\n  import Vue from 'vue'\n  import {Table, TableColumn, Select, Option} from 'element-ui'\n  import PPagination from '../../../UIComponents/Pagination.vue'\n  import {Card, Tabs, TabPane} from 'src/components/UIComponents'\n  import users from '../Tables/users'\n  Vue.use(Table)\n  Vue.use(TableColumn)\n  Vue.use(Select)\n  Vue.use(Option)\n  export default{\n    components: {\n      PPagination,\n      Tabs,\n      TabPane,\n      Card\n    },\n    computed: {\n      pagedData () {\n        return this.tableData.slice(this.from, this.to)\n      },\n      /***\n       * Searches through table data and returns a paginated array.\n       * Note that this should not be used for table with a lot of data as it might be slow!\n       * Do the search and the pagination on the server and display the data retrieved from server instead.\n       * @returns {computed.pagedData}\n       */\n      queriedData () {\n        if (!this.searchQuery) {\n          this.pagination.total = this.tableData.length\n          return this.pagedData\n        }\n        let result = this.tableData\n          .filter((row) => {\n            let isIncluded = false\n            for (let key of this.propsToSearch) {\n              let rowValue = row[key].toString()\n              if (rowValue.includes && rowValue.includes(this.searchQuery)) {\n                isIncluded = true\n              }\n            }\n            return isIncluded\n          })\n        this.pagination.total = result.length\n        return result.slice(this.from, this.to)\n      },\n      to () {\n        let highBound = this.from + this.pagination.perPage\n        if (this.total < highBound) {\n          highBound = this.total\n        }\n        return highBound\n      },\n      from () {\n        return this.pagination.perPage * (this.pagination.currentPage - 1)\n      },\n      total () {\n        this.pagination.total = this.tableData.length\n        return this.tableData.length\n      }\n    },\n    data () {\n      return {\n        pagination: {\n          perPage: 5,\n          currentPage: 1,\n          perPageOptions: [5, 10, 25, 50],\n          total: 0\n        },\n        searchQuery: '',\n        propsToSearch: ['name', 'email', 'age'],\n        tableColumns: [\n          {\n            prop: 'name',\n            label: 'Name',\n            minWidth: 200\n          },\n          {\n            prop: 'email',\n            label: 'Email',\n            minWidth: 250\n          },\n          {\n            prop: 'age',\n            label: 'Age',\n            minWidth: 100\n          },\n          {\n            prop: 'salary',\n            label: 'Salary',\n            minWidth: 120\n          }\n        ],\n        tableData: users\n      }\n    },\n    methods: {\n      handleLike (index, row) {\n        alert(`Your want to like ${row.name}`)\n      },\n      handleEdit (index, row) {\n        alert(`Your want to edit ${row.name}`)\n      },\n      handleDelete (index, row) {\n        let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id)\n        if (indexToDelete >= 0) {\n          this.tableData.splice(indexToDelete, 1)\n        }\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .el-table .td-actions{\n  button.btn {\n    margin-right: 5px;\n  }\n  }\n</style>\n"],"mappings":";;;;;;;;;;;;AA6EA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AACA,SAAAC,IAAA,EAAAC,IAAA,EAAAC,OAAA;AACA,OAAAC,KAAA;AACAL,GAAA,CAAAM,GAAA,CAAAC,MAAA;AACAP,GAAA,CAAAM,GAAA,CAAAE,YAAA;AACAR,GAAA,CAAAM,GAAA,CAAAG,OAAA;AACAT,GAAA,CAAAM,GAAA,CAAAI,OAAA;AACA;EACAC,UAAA;IACAV,WAAA;IACAE,IAAA;IACAC,OAAA;IACAF;EACA;EACAU,QAAA;IACAC,UAAA;MACA,YAAAC,SAAA,CAAAC,KAAA,MAAAC,IAAA,OAAAC,EAAA;IACA;IAOAC,YAAA;MACA,UAAAC,WAAA;QACA,KAAAC,UAAA,CAAAC,KAAA,QAAAP,SAAA,CAAAQ,MAAA;QACA,YAAAT,SAAA;MACA;MACA,IAAAU,MAAA,QAAAT,SAAA,CACAU,MAAA,CAAAC,GAAA;QACA,IAAAC,UAAA;QACA,SAAAC,GAAA,SAAAC,aAAA;UACA,IAAAC,QAAA,GAAAJ,GAAA,CAAAE,GAAA,EAAAG,QAAA;UACA,IAAAD,QAAA,CAAAE,QAAA,IAAAF,QAAA,CAAAE,QAAA,MAAAZ,WAAA;YACAO,UAAA;UACA;QACA;QACA,OAAAA,UAAA;MACA;MACA,KAAAN,UAAA,CAAAC,KAAA,GAAAE,MAAA,CAAAD,MAAA;MACA,OAAAC,MAAA,CAAAR,KAAA,MAAAC,IAAA,OAAAC,EAAA;IACA;IACAA,GAAA;MACA,IAAAe,SAAA,QAAAhB,IAAA,QAAAI,UAAA,CAAAa,OAAA;MACA,SAAAZ,KAAA,GAAAW,SAAA;QACAA,SAAA,QAAAX,KAAA;MACA;MACA,OAAAW,SAAA;IACA;IACAhB,KAAA;MACA,YAAAI,UAAA,CAAAa,OAAA,SAAAb,UAAA,CAAAc,WAAA;IACA;IACAb,MAAA;MACA,KAAAD,UAAA,CAAAC,KAAA,QAAAP,SAAA,CAAAQ,MAAA;MACA,YAAAR,SAAA,CAAAQ,MAAA;IACA;EACA;EACAa,KAAA;IACA;MACAf,UAAA;QACAa,OAAA;QACAC,WAAA;QACAE,cAAA;QACAf,KAAA;MACA;MACAF,WAAA;MACAS,aAAA;MACAS,YAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,EACA;MACA1B,SAAA,EAAAT;IACA;EACA;EACAoC,OAAA;IACAC,WAAAC,KAAA,EAAAlB,GAAA;MACAmB,KAAA,sBAAAnB,GAAA,CAAAoB,IAAA;IACA;IACAC,WAAAH,KAAA,EAAAlB,GAAA;MACAmB,KAAA,sBAAAnB,GAAA,CAAAoB,IAAA;IACA;IACAE,aAAAJ,KAAA,EAAAlB,GAAA;MACA,IAAAuB,aAAA,QAAAlC,SAAA,CAAAmC,SAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,EAAA,KAAA1B,GAAA,CAAA0B,EAAA;MACA,IAAAH,aAAA;QACA,KAAAlC,SAAA,CAAAsC,MAAA,CAAAJ,aAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}