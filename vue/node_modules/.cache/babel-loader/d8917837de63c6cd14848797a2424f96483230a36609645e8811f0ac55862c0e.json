{"ast":null,"code":"import _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport axiosClient from \"../../../../axios\";\nimport linkName from \"../../../../linkName\";\nimport PromoRequestBranchConfirmationModal from \"./PromoRequestBranchConfirmationModal.vue\";\nimport PromoViewPendingRequestModal from \"./PromoViewPendingRequest.vue\";\nimport PromoRequestBranchNotification from \"./PromoRequestBranchNotification.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    [_Option.name]: _Option,\n    [_Select.name]: _Select,\n    PromoRequestBranchConfirmationModal,\n    PromoViewPendingRequestModal,\n    PromoRequestBranchNotification\n  },\n  data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        date: \"\",\n        status: \"\",\n        withRequest: null\n      },\n      userRequest: [],\n      userMultiple: [],\n      edit: {\n        Name: \"\",\n        Email: \"\",\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\"\n      },\n      dateCreated: \"\",\n      branchMultiple: [],\n      branchList: [],\n      companyList: [],\n      chainCodeList: [],\n      editMode: false,\n      disableUpdateProfile: true,\n      disableAddBranch: true,\n      editBranchMode: false,\n      editIndex: null,\n      isBranchChanged: true\n    };\n  },\n  watch: {\n    edit: {\n      handler() {\n        this.validateAddBranch();\n      },\n      deep: true\n    },\n    branchMultiple: \"validateAddBranch\"\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"My Profile\";\n  },\n  methods: {\n    fetchChainCode() {\n      axiosClient.get(\"/fetchChain\", {\n        params: {\n          company: this.edit.Company\n        }\n      }).then(response => {\n        this.chainCodeList = response.data;\n      }).catch(error => {});\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient.get(\"/fetchChainName\", {\n        params: {\n          chainCode: this.edit.ChainCode\n        }\n      }).then(response => {\n        this.branchList = response.data;\n      }).catch(error => {});\n      this.isBranchName = false;\n    },\n    editProfile() {\n      this.edit.Name = this.user.name;\n      this.edit.Email = this.user.email;\n      this.userMultiple.forEach(userM => {\n        var company1 = userM.company.split(\"(\")[1];\n        var company = company1.split(\")\")[0];\n        this.branchMultiple.push({\n          company: company,\n          chainCode: userM.chainCode,\n          branch: userM.branchName,\n          permanent: userM.permanent\n        });\n      });\n      this.editMode = true;\n      this.chainCodeList = [];\n      this.branchList = [];\n      axiosClient.get(\"/fetchCompany\").then(response => {\n        this.companyList = response.data;\n      });\n    },\n    cancelProfile() {\n      this.editMode = false;\n      this.edit = {\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\"\n      };\n      this.branchMultiple = [];\n      console.log(\"Edit: \", this.edit);\n    },\n    addBranchInput() {\n      let temp = false;\n      for (let i = 0; i < this.branchMultiple.length; i++) {\n        if (this.editBranchMode) {\n          if (i == this.editIndex && this.edit.BranchName != this.branchMultiple[i].branch) {\n            this.branchMultiple[i].company = this.edit.Company;\n            this.branchMultiple[i].chainCode = this.edit.ChainCode;\n            this.branchMultiple[i].branch = this.edit.BranchName;\n            break;\n          }\n        } else {\n          if (this.edit.BranchName != this.branchMultiple[i].branch) temp = true;else {\n            temp = false;\n            break;\n          }\n        }\n      }\n      if (temp) this.branchMultiple.push({\n        company: this.edit.Company,\n        chainCode: this.edit.ChainCode,\n        branch: this.edit.BranchName\n      });\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n      this.chainCodeList = [];\n      this.branchList = [];\n      this.editBranchMode = false;\n      console.log(\"Add Branch\", this.branchMultiple);\n    },\n    removeBranchInput(index) {\n      this.branchMultiple.splice(index, 1);\n    },\n    editBranchInput(index) {\n      this.editBranchMode = true;\n      this.editIndex = index;\n      this.edit.Company = this.branchMultiple[index].company;\n      this.edit.ChainCode = this.branchMultiple[index].chainCode;\n      this.edit.BranchName = this.branchMultiple[index].branch;\n    },\n    cancelEditBranchInput() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n    },\n    fetchData() {\n      axiosClient.get(\"/usersProfile\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        this.user.name = response.data[0].name;\n        this.user.email = response.data[0].email;\n        this.user.date = response.data[0].date;\n        this.user.status = response.data[0].status;\n        this.user.withRequest = response.data[0].withRequest;\n        this.withRequest = response.data[0].withRequest;\n        if (response.data[0].position == \"User\") {\n          this.userMultiple = response.data;\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    fetchDataPromoRequest() {\n      axiosClient.get(\"/usersMaintenanceRequestBranch\", {\n        params: {\n          userID: sessionStorage.getItem(\"UserID\")\n        }\n      }).then(response => {\n        console.log(\"Pull Out User Promo Request: \", response.data);\n        this.userRequest = response.data;\n        this.dateCreated = response.data[0].dateCreated;\n        console.log(\"User Reuest: \", this.dateCreated);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    updateProfileWithRequest(confirm) {\n      console.log(\" POST with branch \");\n      if (confirm) {\n        this.branchMultiple.forEach(ctr => {\n          axiosClient.post(\"/postPromoUserBranch\", {\n            userID: sessionStorage.getItem(\"UserID\"),\n            company: ctr.company,\n            chainCode: ctr.chainCode,\n            branchName: ctr.branch\n          }).then(response => {\n            console.log(\"Success Add Branch\", response.data);\n            this.cancelProfile();\n            this.fetchData();\n          }).catch(error => {\n            console.error(error);\n          });\n        });\n        const requestBranchNotificationModal = new bootstrap.Modal(\"#requestBranchNotification\");\n        requestBranchNotificationModal.show();\n      }\n    },\n    updateProfile() {\n      console.log(this.userMultiple, this.branchMultiple, this.isBranchChanged);\n      if (this.branchMultiple.length != this.userMultiple.length || this.isBranchChanged) {\n        let requestBranchModal = new bootstrap.Modal(\"#requestBranchConfirmation\");\n        requestBranchModal.show();\n      } else console.log(\"POST || update only name & email\");\n    },\n    validateAddBranch() {\n      if (this.edit.Company && this.edit.ChainCode && this.edit.BranchName) this.disableAddBranch = false;else this.disableAddBranch = true;\n      if (this.branchMultiple.length >= 3) if (!this.editBranchMode) this.disableAddBranch = true;\n      this.validateUpdateProfile();\n    },\n    validateUpdateProfile() {\n      if (this.userMultiple.length == this.branchMultiple.length) {\n        let temp = false;\n        for (let i = 0; i < this.userMultiple.length; i++) {\n          for (let j = 0; j < this.branchMultiple.length; j++) if (this.userMultiple[i].branchName == this.branchMultiple[j].branch) {\n            temp = true;\n            break;\n          } else temp = false;\n        }\n        if (temp) this.isBranchChanged = false;else this.isBranchChanged = true;\n      }\n      if (this.user.name === this.edit.Name && this.user.email === this.edit.Email && this.branchMultiple.length == this.userMultiple.length && !this.isBranchChanged) this.disableUpdateProfile = true;else this.disableUpdateProfile = false;\n    }\n  }\n};","map":{"version":3,"names":["axiosClient","linkName","PromoRequestBranchConfirmationModal","PromoViewPendingRequestModal","PromoRequestBranchNotification","axios","components","_Option","name","_Select","data","user","email","date","status","withRequest","userRequest","userMultiple","edit","Name","Email","Company","ChainCode","BranchName","dateCreated","branchMultiple","branchList","companyList","chainCodeList","editMode","disableUpdateProfile","disableAddBranch","editBranchMode","editIndex","isBranchChanged","watch","handler","validateAddBranch","deep","mounted","tooltipTriggerList","document","querySelectorAll","tooltipList","map","tooltipTriggerEl","bootstrap","Tooltip","fetchData","window","resolveRouteChange","val","methods","fetchChainCode","get","params","company","then","response","catch","error","isChainCode","fetchChainName","chainCode","isBranchName","editProfile","forEach","userM","company1","split","push","branch","branchName","permanent","cancelProfile","console","log","addBranchInput","temp","i","length","removeBranchInput","index","splice","editBranchInput","cancelEditBranchInput","userID","sessionStorage","getItem","position","fetchDataPromoRequest","updateProfileWithRequest","confirm","ctr","post","requestBranchNotificationModal","Modal","show","updateProfile","requestBranchModal","validateUpdateProfile","j"],"sources":["src/components/Dashboard/Views/PullOut/PromoProfile.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <!-- <div class=\"col-lg-4 col-md-5\">\n       <user-card>\n\n      </user-card>\n      <members-card>\n\n      </members-card>\n    </div> -->\n      <!-- <div class=\"col-lg-8 col-md-7\"> -->\n      <div class=\"col-lg-6 col-md-8 mx-auto\">\n        <div class=\"card\">\n          <!-- <div class=\"card-header d-flex\">\n          <i\n            data-bs-toggle=\"tooltip\"\n            class=\"nc-icon nc-alert-circle-i font-weight-bold\"\n          ></i>\n          <h4 class=\"title\">My Profile</h4>\n        </div> -->\n          <div class=\"card-body\">\n            <form>\n              <div class=\"row\">\n                <div class=\"col-sm-6 form-floating\">\n                  <input\n                    v-show=\"!editMode\"\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputName\"\n                    placeholder=\"Paper dashboard\"\n                    v-model.trim=\"user.name\"\n                    readonly\n                  />\n                  <!-- </fg-input> -->\n                  <label v-show=\"!editMode\" for=\"floatingInputName\">Name</label>\n                  <fg-input\n                    v-show=\"editMode\"\n                    type=\"text\"\n                    label=\"Name\"\n                    placeholder=\"Paper dashboard\"\n                    v-model.trim=\"edit.Name\"\n                  >\n                  </fg-input>\n                </div>\n                <div class=\"col-sm-6 form-floating\">\n                  <input\n                    v-show=\"!editMode\"\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputEmail\"\n                    placeholder=\"Username\"\n                    v-model.trim=\"user.email\"\n                    readonly\n                  />\n                  <!-- </fg-input> -->\n                  <label v-show=\"!editMode\" for=\"floatingInputEmail\">Email</label>\n                  <fg-input\n                    v-show=\"editMode\"\n                    type=\"text\"\n                    label=\"Email\"\n                    placeholder=\"Username\"\n                    v-model.trim=\"edit.Email\"\n                  >\n                  </fg-input>\n                </div>\n              </div>\n              <!-- <div class=\"row labelRows\" v-show=\"!editMode\">\n                <span class=\"col-sm-3\">Company</span>\n                <span class=\"col-sm-3\">Chain Code</span>\n                <span class=\"col-sm-6\">Branch Name</span>\n              </div> -->\n              <div class=\"row\" v-show=\"!editMode\" v-for=\"user in userMultiple\">\n                <div class=\"col-sm-3 form-floating\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputCompany\"\n                    placeholder=\"Company\"\n                    v-model=\"user.company\"\n                    readonly\n                  />\n                  <!-- </fg-input> -->\n                  <label for=\"floatingInputCompany\">Company</label>\n                </div>\n                <div class=\"col-sm-2 form-floating\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputChainCode\"\n                    placeholder=\"Chain Code\"\n                    v-model=\"user.chainCode\"\n                    readonly\n                  />\n                  <!-- </fg-input> -->\n                  <label for=\"floatingInputChainCode\">Chain Code</label>\n                </div>\n                <div class=\"col-sm-7 form-floating\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputBranchName\"\n                    placeholder=\"Branch Name\"\n                    v-model=\"user.branchName\"\n                    readonly\n                  />\n                  <!-- </fg-input> -->\n                  <label for=\"floatingInputBranchName\">Branch Name</label>\n                </div>\n              </div>\n\n              <div class=\"row\" v-show=\"editMode\">\n                <div class=\"col-md-6\">\n                  <fg-input label=\"Company\">\n                    <el-select\n                      class=\"select-default\"\n                      size=\"large\"\n                      placeholder=\"Select Company\"\n                      v-model=\"edit.Company\"\n                      @change=\"fetchChainCode()\"\n                    >\n                      <el-option\n                        v-for=\"company in companyList\"\n                        class=\"select-default\"\n                        :value=\"company.shortName\"\n                        :label=\"company.name + ' (' + company.shortName + ') '\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </fg-input>\n                </div>\n                <div class=\"col-md-6\">\n                  <fg-input label=\"Chain Code\">\n                    <el-select\n                      class=\"select-default\"\n                      size=\"large\"\n                      placeholder=\"Select Chain Code\"\n                      v-model=\"edit.ChainCode\"\n                      @change=\"fetchChainName()\"\n                    >\n                      <el-option\n                        v-for=\"chain in chainCodeList\"\n                        class=\"select-default\"\n                        :value=\"chain.chainCode\"\n                        :label=\"chain.chainCode\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </fg-input>\n                </div>\n              </div>\n\n              <div class=\"row\" v-show=\"editMode\">\n                <span class=\"headerBranch\">Branch Name</span>\n                <div class=\"col-sm-11 mb-10px\">\n                  <el-select\n                    class=\"select-default selectBranch\"\n                    size=\"large\"\n                    placeholder=\"Select Branch Name\"\n                    v-model=\"edit.BranchName\"\n                  >\n                    <el-option\n                      v-for=\"branch in branchList\"\n                      class=\"select-default\"\n                      :value=\"branch.branchName\"\n                      :label=\"branch.branchName\"\n                    >\n                    </el-option>\n                  </el-select>\n                </div>\n                <div class=\"col-sm-1 mb-10px selectBtnBranch\">\n                  <p-button\n                    type=\"success\"\n                    class=\"m-0\"\n                    @click=\"addBranchInput\"\n                    icon\n                    :disabled=\"disableAddBranch\"\n                  >\n                    <i class=\"nc-icon nc-check-2\"></i>\n                  </p-button>\n                </div>\n              </div>\n\n              <div\n                v-if=\"editMode\"\n                class=\"row\"\n                v-for=\"(brM, index) in branchMultiple\"\n                :key=\"index\"\n              >\n                <span class=\"headerBranch\" v-if=\"brM.permanent\">Permanent Branch</span>\n                <div class=\"col-sm-10\">\n                  <fg-input\n                    type=\"text\"\n                    placeholder=\"Select Branch Name\"\n                    v-model=\"brM.branch\"\n                    disabled\n                  >\n                  </fg-input>\n                </div>\n\n                <!-- <div v-if=\"index >= 1\" class=\"col-1 removeBtnBranch\">\n                <p-button\n                  type=\"danger\"\n                  class=\"m-0\"\n                  @click=\"removeBranchInput(index)\"\n                  icon\n                >\n                  <i class=\"nc-icon nc-simple-delete\"></i>\n                </p-button>\n              </div> -->\n                <div class=\"col-sm-2 gap-2 inputBtnBranch\">\n                  <p-button\n                    v-if=\"index != editIndex\"\n                    type=\"warning\"\n                    class=\"m-0\"\n                    @click=\"editBranchInput(index)\"\n                    icon\n                    :disabled=\"editBranchMode\"\n                  >\n                    <!-- <i class=\"nc-icon nc-simple-add\"></i> -->\n                    <i class=\"nc-icon nc-ruler-pencil\"></i>\n                    <!-- <i class=\"fa fa-heart\"></i> -->\n                  </p-button>\n                  <p-button\n                    v-if=\"index == editIndex\"\n                    type=\"default\"\n                    class=\"m-0\"\n                    @click=\"cancelEditBranchInput\"\n                    icon\n                  >\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </p-button>\n                  <p-button\n                    v-if=\"index == 0\"\n                    type=\"danger\"\n                    class=\"m-0\"\n                    @click=\"removeBranchInput(index)\"\n                    icon\n                    :disabled=\"editBranchMode || branchMultiple.length == 1\"\n                  >\n                    <i class=\"nc-icon nc-simple-delete\"></i>\n                  </p-button>\n                  <p-button\n                    v-else\n                    type=\"danger\"\n                    class=\"m-0\"\n                    @click=\"removeBranchInput(index)\"\n                    icon\n                    :disabled=\"editBranchMode\"\n                  >\n                    <i class=\"nc-icon nc-simple-delete\"></i>\n                  </p-button>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-sm-12 form-floating\" v-show=\"!editMode\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext text-center\"\n                    id=\"floatingInputDateRegistered\"\n                    placeholder=\"Date Registered\"\n                    v-model=\"user.date\"\n                    readonly\n                  />\n                  <!-- </fg-input> -->\n                  <label for=\"floatingInputDateRegistered\">Date Registered</label>\n                </div>\n                <div class=\"col-sm-12\" v-show=\"editMode\">\n                  <fg-input\n                    type=\"text\"\n                    label=\"Date Registered\"\n                    placeholder=\"Date Registered\"\n                    v-model=\"user.date\"\n                    readonly\n                  >\n                  </fg-input>\n                </div>\n                <!-- <div class=\"col-sm-6 form-floating\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext\"\n                    id=\"floatingInputStatus\"\n                    placeholder=\"Status\"\n                    v-model=\"user.status\"\n                    readonly\n                  />\n                  <label for=\"floatingInputStatus\">Status</label>\n                </div> -->\n              </div>\n\n              <div class=\"clearfix\"></div>\n            </form>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"gap-2 d-flex justify-content-center\">\n              <button\n                v-show=\"!editMode\"\n                class=\"btn btn-info btn-fill btn-wd\"\n                @click.prevent=\"editProfile\"\n                :disabled=\"user.withRequest\"\n              >\n                Edit Profile\n              </button>\n              <button\n                v-show=\"!editMode\"\n                class=\"btn btn-success btn-fill btn-wd\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#promoViewPendingRequestModal\"\n                :disabled=\"!user.withRequest\"\n                @click=\"fetchDataPromoRequest\"\n              >\n                View Pending Request\n              </button>\n              <button\n                v-show=\"editMode\"\n                class=\"btn btn-danger btn-fill btn-wd\"\n                @click.prevent=\"cancelProfile\"\n              >\n                Cancel\n              </button>\n              <button\n                v-show=\"editMode\"\n                @click=\"updateProfile\"\n                class=\"btn btn-success btn-fill btn-wd\"\n                :disabled=\"disableUpdateProfile\"\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <PromoRequestBranchConfirmationModal\n      @confirm=\"updateProfileWithRequest($event)\"\n    ></PromoRequestBranchConfirmationModal>\n    <PromoViewPendingRequestModal\n      :userData=\"userMultiple\"\n      :userRequest=\"userRequest\"\n      :dateRequested=\"dateCreated\"\n      @refetchUserData=\"fetchData\"\n    >\n    </PromoViewPendingRequestModal>\n    <PromoRequestBranchNotification></PromoRequestBranchNotification>\n  </div>\n</template>\n<script>\nimport axiosClient from \"../../../../axios\";\nimport linkName from \"../../../../linkName\";\nimport { Select, Option } from \"element-ui\";\nimport PromoRequestBranchConfirmationModal from \"./PromoRequestBranchConfirmationModal.vue\";\nimport PromoViewPendingRequestModal from \"./PromoViewPendingRequest.vue\";\nimport PromoRequestBranchNotification from \"./PromoRequestBranchNotification.vue\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    [Option.name]: Option,\n    [Select.name]: Select,\n    PromoRequestBranchConfirmationModal,\n    PromoViewPendingRequestModal,\n    PromoRequestBranchNotification,\n  },\n  data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        date: \"\",\n        status: \"\",\n        withRequest: null,\n      },\n      userRequest: [],\n      userMultiple: [],\n      edit: {\n        Name: \"\",\n        Email: \"\",\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\",\n      },\n      dateCreated: \"\",\n      branchMultiple: [],\n      branchList: [],\n      companyList: [],\n      chainCodeList: [],\n      editMode: false,\n      disableUpdateProfile: true,\n      disableAddBranch: true,\n      editBranchMode: false,\n      editIndex: null,\n      isBranchChanged: true,\n    };\n  },\n  watch: {\n    edit: {\n      handler() {\n        this.validateAddBranch();\n        // this.validateUpdateProfile();\n      },\n      deep: true,\n    },\n    branchMultiple: \"validateAddBranch\",\n  },\n  mounted() {\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(\n      (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)\n    );\n    this.fetchData();\n    if (window.resolveRouteChange) {\n      window.resolveRouteChange();\n      window.resolveRouteChange = null;\n    }\n    linkName.val = \"My Profile\";\n  },\n  methods: {\n    fetchChainCode() {\n      axiosClient\n        .get(\"/fetchChain\", {\n          params: {\n            company: this.edit.Company,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Code Response:\", response.data);\n          this.chainCodeList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      // this.notifyVue(\"bottom\", \"right\");\n      this.isChainCode = false;\n    },\n    fetchChainName() {\n      axiosClient\n        .get(\"/fetchChainName\", {\n          params: {\n            chainCode: this.edit.ChainCode,\n          },\n        })\n        .then((response) => {\n          //console.log(\"Chain Name Response:\", response.data);\n          this.branchList = response.data;\n        })\n        .catch((error) => {\n          //console.error(error);\n        });\n      this.isBranchName = false;\n    },\n    editProfile() {\n      // alert(\"Your data: \" + JSON.stringify(this.user));\n      this.edit.Name = this.user.name;\n      this.edit.Email = this.user.email;\n      this.userMultiple.forEach((userM) => {\n        var company1 = userM.company.split(\"(\")[1];\n        var company = company1.split(\")\")[0];\n        this.branchMultiple.push({\n          company: company,\n          chainCode: userM.chainCode,\n          branch: userM.branchName,\n          permanent: userM.permanent,\n        });\n      });\n\n      this.editMode = true;\n      this.chainCodeList = [];\n      this.branchList = [];\n\n      axiosClient.get(\"/fetchCompany\").then((response) => {\n        this.companyList = response.data;\n      });\n    },\n    cancelProfile() {\n      this.editMode = false;\n      this.edit = {\n        Company: \"\",\n        ChainCode: \"\",\n        BranchName: \"\",\n      };\n      this.branchMultiple = [];\n      console.log(\"Edit: \", this.edit);\n    },\n    addBranchInput() {\n      let temp = false;\n      for (let i = 0; i < this.branchMultiple.length; i++) {\n        if (this.editBranchMode) {\n          if (\n            i == this.editIndex &&\n            this.edit.BranchName != this.branchMultiple[i].branch\n          ) {\n            this.branchMultiple[i].company = this.edit.Company;\n            this.branchMultiple[i].chainCode = this.edit.ChainCode;\n            this.branchMultiple[i].branch = this.edit.BranchName;\n            break;\n          }\n        } else {\n          if (this.edit.BranchName != this.branchMultiple[i].branch) temp = true;\n          else {\n            temp = false;\n            break;\n          }\n        }\n      }\n      if (temp)\n        this.branchMultiple.push({\n          company: this.edit.Company,\n          chainCode: this.edit.ChainCode,\n          branch: this.edit.BranchName,\n        });\n      // this.branchMultiple.forEach((item) => {\n      //   if (this.editBranchMode && this.edit.BranchName != item.branch) {\n      //     item.company = this.edit.Company;\n      //     item.chainCode = this.edit.ChainCode;\n      //     item.branch = this.edit.BranchName;\n      //   } else if (item.branch != this.edit.BranchName)\n      //     this.branchMultiple.push({\n      //       company: this.edit.Company,\n      //       chainCode: this.edit.ChainCode,\n      //       branch: this.edit.BranchName,\n      //     });\n      // });\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n      this.chainCodeList = [];\n      this.branchList = [];\n      this.editBranchMode = false;\n\n      console.log(\"Add Branch\", this.branchMultiple);\n    },\n    removeBranchInput(index) {\n      this.branchMultiple.splice(index, 1);\n    },\n    editBranchInput(index) {\n      this.editBranchMode = true;\n      this.editIndex = index;\n      this.edit.Company = this.branchMultiple[index].company;\n      this.edit.ChainCode = this.branchMultiple[index].chainCode;\n      this.edit.BranchName = this.branchMultiple[index].branch;\n    },\n    cancelEditBranchInput() {\n      this.editBranchMode = false;\n      this.editIndex = null;\n      this.edit.Company = \"\";\n      this.edit.ChainCode = \"\";\n      this.edit.BranchName = \"\";\n    },\n    fetchData() {\n      axiosClient\n        .get(\"/usersProfile\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\"),\n          },\n        })\n        .then((response) => {\n          this.user.name = response.data[0].name;\n          this.user.email = response.data[0].email;\n          this.user.date = response.data[0].date;\n          this.user.status = response.data[0].status;\n          this.user.withRequest = response.data[0].withRequest;\n          this.withRequest = response.data[0].withRequest;\n          if (response.data[0].position == \"User\") {\n            this.userMultiple = response.data;\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    fetchDataPromoRequest() {\n      axiosClient\n        .get(\"/usersMaintenanceRequestBranch\", {\n          params: {\n            userID: sessionStorage.getItem(\"UserID\"),\n          },\n        })\n        .then((response) => {\n          console.log(\"Pull Out User Promo Request: \", response.data);\n          this.userRequest = response.data;\n          this.dateCreated = response.data[0].dateCreated;\n          console.log(\"User Reuest: \", this.dateCreated);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    updateProfileWithRequest(confirm) {\n      console.log(\" POST with branch \");\n      if (confirm) {\n        this.branchMultiple.forEach((ctr) => {\n          axiosClient\n            .post(\"/postPromoUserBranch\", {\n              userID: sessionStorage.getItem(\"UserID\"),\n              company: ctr.company,\n              chainCode: ctr.chainCode,\n              branchName: ctr.branch,\n            })\n            .then((response) => {\n              console.log(\"Success Add Branch\", response.data);\n              this.cancelProfile();\n              this.fetchData();\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        });\n        const requestBranchNotificationModal = new bootstrap.Modal(\n          \"#requestBranchNotification\"\n        );\n        requestBranchNotificationModal.show();\n      }\n      //this.branchMultiple\n    },\n    updateProfile() {\n      console.log(this.userMultiple, this.branchMultiple, this.isBranchChanged);\n      if (\n        this.branchMultiple.length != this.userMultiple.length ||\n        this.isBranchChanged\n      ) {\n        let requestBranchModal = new bootstrap.Modal(\"#requestBranchConfirmation\");\n        requestBranchModal.show();\n      } else console.log(\"POST || update only name & email\");\n    },\n    validateAddBranch() {\n      if (this.edit.Company && this.edit.ChainCode && this.edit.BranchName)\n        this.disableAddBranch = false;\n      else this.disableAddBranch = true;\n\n      if (this.branchMultiple.length >= 3)\n        if (!this.editBranchMode) this.disableAddBranch = true;\n\n      this.validateUpdateProfile();\n    },\n    validateUpdateProfile() {\n      if (this.userMultiple.length == this.branchMultiple.length) {\n        let temp = false;\n        for (let i = 0; i < this.userMultiple.length; i++) {\n          for (let j = 0; j < this.branchMultiple.length; j++)\n            if (this.userMultiple[i].branchName == this.branchMultiple[j].branch) {\n              temp = true;\n              break;\n            } else temp = false;\n        }\n        if (temp) this.isBranchChanged = false;\n        else this.isBranchChanged = true;\n      }\n      if (\n        this.user.name === this.edit.Name &&\n        this.user.email === this.edit.Email &&\n        this.branchMultiple.length == this.userMultiple.length &&\n        !this.isBranchChanged\n      )\n        this.disableUpdateProfile = true;\n      else this.disableUpdateProfile = false;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.headerBranch {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  margin-bottom: 5px;\n}\n.mb-10px {\n  margin-bottom: 10px;\n}\n.selectBranch {\n  width: 100%;\n}\n.selectBtnBranch {\n  display: flex;\n  justify-content: end;\n  padding-left: 12px;\n  padding-right: 12px;\n}\n.inputBtnBranch {\n  display: flex;\n  justify-content: end;\n  padding-left: 0px;\n  padding-right: 12px;\n}\n.pl-24px {\n  padding-left: 12px;\n  padding-right: 24px;\n}\n.labelRows {\n  font-size: 0.8571em;\n  color: #9a9a9a;\n  margin-bottom: 5px;\n}\n.form-control-plaintext {\n  margin: 4px;\n  border: solid;\n  border-width: 1px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}