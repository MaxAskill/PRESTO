{"ast":null,"code":"import _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport Vue from \"vue\";\nimport axiosClient from \"../../../../../../axios\";\nVue.use(_Table);\nVue.use(_TableColumn);\nVue.use(_Select);\nVue.use(_Option);\nexport default {\n  props: [\"transferredData\"],\n  mounted: function mounted() {\n    $(\"#myModal\").modal(\"show\");\n  },\n  destroyed: function destroyed() {\n    $(\"#myModal\").modal(\"hide\");\n  },\n  watch: {\n    transferredData: function transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    }\n  },\n  computed: {},\n  data: function data() {\n    return {\n      tableColumns: [{\n        prop: \"id\",\n        label: \"Box Number\",\n        minWidth: 200\n      }, {\n        prop: \"boxLabel\",\n        label: \"Box Label\",\n        minWidth: 250\n      }]\n    };\n  }\n};","map":{"version":3,"names":["Vue","axiosClient","use","_Table","_TableColumn","_Select","_Option","props","mounted","$","modal","destroyed","watch","transferredData","newValue","$emit","computed","data","tableColumns","prop","label","minWidth"],"sources":["src/components/Dashboard/Views/PullOut/PullOutRequests/ModalPullOut/EditBoxLabelModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"exampleModal\"\n    tabindex=\"-1\"\n    aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered modal-xl\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5 text-weight-bold\" id=\"exampleModalLabel\">\n            List of Branch{{ transferredData }}\n          </h1>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"row\">\n            <table\n              class=\"table table-bordered table-hover table-responsive-sm table-font-size font-weight-normal\"\n            >\n              <thead>\n                <tr>\n                  <th scope=\"col\" class=\"nowrap\">Item Code</th>\n                  <th scope=\"col\" class=\"nowrap\">Description</th>\n                  <!-- <th scope=\"col\" class=\"nowrap\">Category/Brand</th>\n                  <th scope=\"col\" class=\"nowrap\">Quantity</th>\n                  <th scope=\"col\" class=\"nowrap\">Box Label</th> -->\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"boxLabel in transferredData\" :key=\"boxLabel.id\">\n                  <th scope=\"row\" class=\"px-3\">\n                    <button\n                      class=\"table-delete pull-left\"\n                      @click.prevent=\"removeItem(item.code, item.boxLabel)\"\n                    >\n                      <i class=\"nc-icon nc-simple-remove font-weight-bold\"></i>\n                    </button>\n                    {{ boxLabel.id }}\n                  </th>\n                  <td class=\"cell px-3\">{{ item.description }}</td>\n                  <!-- <td class=\"cell px-3\">{{ item.categorybrand }}</td> -->\n                  <td class=\"cell\">\n                    <input\n                      type=\"number\"\n                      @blur=\"handleQuantity(item.id)\"\n                      v-model=\"item.quantity\"\n                      class=\"table-input-box\"\n                    />\n                  </td>\n                  <!-- <td class=\"cell\">\n                    <el-select\n                      class=\"table-select-box\"\n                      size=\"large\"\n                      v-model=\"item.boxLabel\"\n                      @change=\"editBoxLabel(item.code, item.quantity, item.boxLabel)\"\n                    >\n                      <el-option\n                        v-for=\"boxLabel in newTransaction.boxLabels\"\n                        class=\"table-select-box\"\n                        :value=\"boxLabel.boxLabel\"\n                        :label=\"boxLabel.boxLabel\"\n                        :key=\"boxLabel.id\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </td> -->\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n            Close\n          </button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n<script>\nimport Vue from \"vue\";\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport axiosClient from \"../../../../../../axios\";\n\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(Select);\nVue.use(Option);\nexport default {\n  // mounted() {\n  //   this.fetchData();\n  // },\n  props: [\"transferredData\"],\n  mounted() {\n    $(\"#myModal\").modal(\"show\");\n  },\n  destroyed() {\n    $(\"#myModal\").modal(\"hide\");\n  },\n  watch: {\n    transferredData(newValue) {\n      if (newValue === \"\") {\n        this.$emit(\"closeModal\");\n      }\n    },\n  },\n  computed: {\n    /***\n     * Searches through table data and returns a paginated array.\n     * Note that this should not be used for table with a lot of data as it might be slow!\n     * Do the search and the pagination on the server and display the data retrieved from server instead.\n     * @returns {computed.pagedData}\n     */\n  },\n  data() {\n    return {\n      tableColumns: [\n        {\n          prop: \"id\",\n          label: \"Box Number\",\n          minWidth: 200,\n        },\n        {\n          prop: \"boxLabel\",\n          label: \"Box Label\",\n          minWidth: 250,\n        },\n      ],\n    };\n  },\n  // methods: {\n  //   fetchData(){\n  //     axiosClient\n  //     .get(\"/fetchPullOutRequestDenied\", {\n  //       params: {\n  //         company: sessionStorage.getItem(\"Company\"),\n  //       },\n  //     })\n  //     .then((response) => {\n  //       console.log(\"Pull Out Request\", response.data);\n  //       this.tableData = response.data;\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  //   }\n  // }\n};\n</script>\n"],"mappings":";;;;;;;;;;;;AAoFA,OAAAA,GAAA;AAEA,OAAAC,WAAA;AAEAD,GAAA,CAAAE,GAAA,CAAAC,MAAA;AACAH,GAAA,CAAAE,GAAA,CAAAE,YAAA;AACAJ,GAAA,CAAAE,GAAA,CAAAG,OAAA;AACAL,GAAA,CAAAE,GAAA,CAAAI,OAAA;AACA;EAIAC,KAAA;EACAC,OAAA,WAAAA,QAAA;IACAC,CAAA,aAAAC,KAAA;EACA;EACAC,SAAA,WAAAA,UAAA;IACAF,CAAA,aAAAC,KAAA;EACA;EACAE,KAAA;IACAC,eAAA,WAAAA,gBAAAC,QAAA;MACA,IAAAA,QAAA;QACA,KAAAC,KAAA;MACA;IACA;EACA;EACAC,QAAA,GAOA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA,GACA;QACAF,IAAA;QACAC,KAAA;QACAC,QAAA;MACA;IAEA;EACA;AAkBA"},"metadata":{},"sourceType":"module","externalDependencies":[]}